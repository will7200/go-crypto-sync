/*
 * Binance SPOT Public API
 *
 * The swagger file of Binance Public API  API documents:   - [https://github.com/binance/binance-spot-api-docs](https://github.com/binance/binance-spot-api-docs)   - [https://binance-docs.github.io/apidocs/spot/en](https://binance-docs.github.io/apidocs/spot/en)
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package binance

import (
	"encoding/json"
)

//
// InlineResponse20012 struct for InlineResponse20012
type InlineResponse20012 struct {
	BorrowEnabled       *bool                            `json:"borrowEnabled,omitempty"`
	MarginLevel         *string                          `json:"marginLevel,omitempty"`
	TotalAssetOfBtc     *string                          `json:"totalAssetOfBtc,omitempty"`
	TotalLiabilityOfBtc *string                          `json:"totalLiabilityOfBtc,omitempty"`
	TotalNetAssetOfBtc  *string                          `json:"totalNetAssetOfBtc,omitempty"`
	TradeEnabled        *bool                            `json:"tradeEnabled,omitempty"`
	TransferEnabled     *bool                            `json:"transferEnabled,omitempty"`
	UserAssets          *[]InlineResponse20012UserAssets `json:"userAssets,omitempty"`
}

// NewInlineResponse20012 instantiates a new InlineResponse20012 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20012() *InlineResponse20012 {
	this := InlineResponse20012{}
	return &this
}

// NewInlineResponse20012WithDefaults instantiates a new InlineResponse20012 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20012WithDefaults() *InlineResponse20012 {
	this := InlineResponse20012{}
	return &this
}

// GetBorrowEnabled returns the BorrowEnabled field value if set, zero value otherwise.
func (o *InlineResponse20012) GetBorrowEnabled() bool {
	if o == nil || o.BorrowEnabled == nil {
		var ret bool
		return ret
	}
	return *o.BorrowEnabled
}

// GetBorrowEnabledOk returns a tuple with the BorrowEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20012) GetBorrowEnabledOk() (*bool, bool) {
	if o == nil || o.BorrowEnabled == nil {
		return nil, false
	}
	return o.BorrowEnabled, true
}

// HasBorrowEnabled returns a boolean if a field has been set.
func (o *InlineResponse20012) HasBorrowEnabled() bool {
	if o != nil && o.BorrowEnabled != nil {
		return true
	}

	return false
}

// SetBorrowEnabled gets a reference to the given bool and assigns it to the BorrowEnabled field.
func (o *InlineResponse20012) SetBorrowEnabled(v bool) {
	o.BorrowEnabled = &v
}

// GetMarginLevel returns the MarginLevel field value if set, zero value otherwise.
func (o *InlineResponse20012) GetMarginLevel() string {
	if o == nil || o.MarginLevel == nil {
		var ret string
		return ret
	}
	return *o.MarginLevel
}

// GetMarginLevelOk returns a tuple with the MarginLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20012) GetMarginLevelOk() (*string, bool) {
	if o == nil || o.MarginLevel == nil {
		return nil, false
	}
	return o.MarginLevel, true
}

// HasMarginLevel returns a boolean if a field has been set.
func (o *InlineResponse20012) HasMarginLevel() bool {
	if o != nil && o.MarginLevel != nil {
		return true
	}

	return false
}

// SetMarginLevel gets a reference to the given string and assigns it to the MarginLevel field.
func (o *InlineResponse20012) SetMarginLevel(v string) {
	o.MarginLevel = &v
}

// GetTotalAssetOfBtc returns the TotalAssetOfBtc field value if set, zero value otherwise.
func (o *InlineResponse20012) GetTotalAssetOfBtc() string {
	if o == nil || o.TotalAssetOfBtc == nil {
		var ret string
		return ret
	}
	return *o.TotalAssetOfBtc
}

// GetTotalAssetOfBtcOk returns a tuple with the TotalAssetOfBtc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20012) GetTotalAssetOfBtcOk() (*string, bool) {
	if o == nil || o.TotalAssetOfBtc == nil {
		return nil, false
	}
	return o.TotalAssetOfBtc, true
}

// HasTotalAssetOfBtc returns a boolean if a field has been set.
func (o *InlineResponse20012) HasTotalAssetOfBtc() bool {
	if o != nil && o.TotalAssetOfBtc != nil {
		return true
	}

	return false
}

// SetTotalAssetOfBtc gets a reference to the given string and assigns it to the TotalAssetOfBtc field.
func (o *InlineResponse20012) SetTotalAssetOfBtc(v string) {
	o.TotalAssetOfBtc = &v
}

// GetTotalLiabilityOfBtc returns the TotalLiabilityOfBtc field value if set, zero value otherwise.
func (o *InlineResponse20012) GetTotalLiabilityOfBtc() string {
	if o == nil || o.TotalLiabilityOfBtc == nil {
		var ret string
		return ret
	}
	return *o.TotalLiabilityOfBtc
}

// GetTotalLiabilityOfBtcOk returns a tuple with the TotalLiabilityOfBtc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20012) GetTotalLiabilityOfBtcOk() (*string, bool) {
	if o == nil || o.TotalLiabilityOfBtc == nil {
		return nil, false
	}
	return o.TotalLiabilityOfBtc, true
}

// HasTotalLiabilityOfBtc returns a boolean if a field has been set.
func (o *InlineResponse20012) HasTotalLiabilityOfBtc() bool {
	if o != nil && o.TotalLiabilityOfBtc != nil {
		return true
	}

	return false
}

// SetTotalLiabilityOfBtc gets a reference to the given string and assigns it to the TotalLiabilityOfBtc field.
func (o *InlineResponse20012) SetTotalLiabilityOfBtc(v string) {
	o.TotalLiabilityOfBtc = &v
}

// GetTotalNetAssetOfBtc returns the TotalNetAssetOfBtc field value if set, zero value otherwise.
func (o *InlineResponse20012) GetTotalNetAssetOfBtc() string {
	if o == nil || o.TotalNetAssetOfBtc == nil {
		var ret string
		return ret
	}
	return *o.TotalNetAssetOfBtc
}

// GetTotalNetAssetOfBtcOk returns a tuple with the TotalNetAssetOfBtc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20012) GetTotalNetAssetOfBtcOk() (*string, bool) {
	if o == nil || o.TotalNetAssetOfBtc == nil {
		return nil, false
	}
	return o.TotalNetAssetOfBtc, true
}

// HasTotalNetAssetOfBtc returns a boolean if a field has been set.
func (o *InlineResponse20012) HasTotalNetAssetOfBtc() bool {
	if o != nil && o.TotalNetAssetOfBtc != nil {
		return true
	}

	return false
}

// SetTotalNetAssetOfBtc gets a reference to the given string and assigns it to the TotalNetAssetOfBtc field.
func (o *InlineResponse20012) SetTotalNetAssetOfBtc(v string) {
	o.TotalNetAssetOfBtc = &v
}

// GetTradeEnabled returns the TradeEnabled field value if set, zero value otherwise.
func (o *InlineResponse20012) GetTradeEnabled() bool {
	if o == nil || o.TradeEnabled == nil {
		var ret bool
		return ret
	}
	return *o.TradeEnabled
}

// GetTradeEnabledOk returns a tuple with the TradeEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20012) GetTradeEnabledOk() (*bool, bool) {
	if o == nil || o.TradeEnabled == nil {
		return nil, false
	}
	return o.TradeEnabled, true
}

// HasTradeEnabled returns a boolean if a field has been set.
func (o *InlineResponse20012) HasTradeEnabled() bool {
	if o != nil && o.TradeEnabled != nil {
		return true
	}

	return false
}

// SetTradeEnabled gets a reference to the given bool and assigns it to the TradeEnabled field.
func (o *InlineResponse20012) SetTradeEnabled(v bool) {
	o.TradeEnabled = &v
}

// GetTransferEnabled returns the TransferEnabled field value if set, zero value otherwise.
func (o *InlineResponse20012) GetTransferEnabled() bool {
	if o == nil || o.TransferEnabled == nil {
		var ret bool
		return ret
	}
	return *o.TransferEnabled
}

// GetTransferEnabledOk returns a tuple with the TransferEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20012) GetTransferEnabledOk() (*bool, bool) {
	if o == nil || o.TransferEnabled == nil {
		return nil, false
	}
	return o.TransferEnabled, true
}

// HasTransferEnabled returns a boolean if a field has been set.
func (o *InlineResponse20012) HasTransferEnabled() bool {
	if o != nil && o.TransferEnabled != nil {
		return true
	}

	return false
}

// SetTransferEnabled gets a reference to the given bool and assigns it to the TransferEnabled field.
func (o *InlineResponse20012) SetTransferEnabled(v bool) {
	o.TransferEnabled = &v
}

// GetUserAssets returns the UserAssets field value if set, zero value otherwise.
func (o *InlineResponse20012) GetUserAssets() []InlineResponse20012UserAssets {
	if o == nil || o.UserAssets == nil {
		var ret []InlineResponse20012UserAssets
		return ret
	}
	return *o.UserAssets
}

// GetUserAssetsOk returns a tuple with the UserAssets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20012) GetUserAssetsOk() (*[]InlineResponse20012UserAssets, bool) {
	if o == nil || o.UserAssets == nil {
		return nil, false
	}
	return o.UserAssets, true
}

// HasUserAssets returns a boolean if a field has been set.
func (o *InlineResponse20012) HasUserAssets() bool {
	if o != nil && o.UserAssets != nil {
		return true
	}

	return false
}

// SetUserAssets gets a reference to the given []InlineResponse20012UserAssets and assigns it to the UserAssets field.
func (o *InlineResponse20012) SetUserAssets(v []InlineResponse20012UserAssets) {
	o.UserAssets = &v
}

func (o InlineResponse20012) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BorrowEnabled != nil {
		toSerialize["borrowEnabled"] = o.BorrowEnabled
	}
	if o.MarginLevel != nil {
		toSerialize["marginLevel"] = o.MarginLevel
	}
	if o.TotalAssetOfBtc != nil {
		toSerialize["totalAssetOfBtc"] = o.TotalAssetOfBtc
	}
	if o.TotalLiabilityOfBtc != nil {
		toSerialize["totalLiabilityOfBtc"] = o.TotalLiabilityOfBtc
	}
	if o.TotalNetAssetOfBtc != nil {
		toSerialize["totalNetAssetOfBtc"] = o.TotalNetAssetOfBtc
	}
	if o.TradeEnabled != nil {
		toSerialize["tradeEnabled"] = o.TradeEnabled
	}
	if o.TransferEnabled != nil {
		toSerialize["transferEnabled"] = o.TransferEnabled
	}
	if o.UserAssets != nil {
		toSerialize["userAssets"] = o.UserAssets
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20012 struct {
	value *InlineResponse20012
	isSet bool
}

func (v NullableInlineResponse20012) Get() *InlineResponse20012 {
	return v.value
}

func (v *NullableInlineResponse20012) Set(val *InlineResponse20012) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20012) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20012) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20012(val *InlineResponse20012) *NullableInlineResponse20012 {
	return &NullableInlineResponse20012{value: val, isSet: true}
}

func (v NullableInlineResponse20012) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20012) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
