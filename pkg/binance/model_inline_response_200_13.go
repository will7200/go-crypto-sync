/*
 * Binance SPOT Public API
 *
 * The swagger file of Binance Public API  API documents:   - [https://github.com/binance/binance-spot-api-docs](https://github.com/binance/binance-spot-api-docs)   - [https://binance-docs.github.io/apidocs/spot/en](https://binance-docs.github.io/apidocs/spot/en)
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package binance

import (
	"encoding/json"
)

//
// InlineResponse20013 struct for InlineResponse20013
type InlineResponse20013 struct {
	Coin              *string                           `json:"coin,omitempty"`
	DepositAllEnable  *bool                             `json:"depositAllEnable,omitempty"`
	Free              *string                           `json:"free,omitempty"`
	Freeze            *string                           `json:"freeze,omitempty"`
	Ipoable           *string                           `json:"ipoable,omitempty"`
	Ipoing            *string                           `json:"ipoing,omitempty"`
	IsLegalMoney      *bool                             `json:"isLegalMoney,omitempty"`
	Locked            *string                           `json:"locked,omitempty"`
	Name              *string                           `json:"name,omitempty"`
	NetworkList       *[]InlineResponse20013NetworkList `json:"networkList,omitempty"`
	Storage           *string                           `json:"storage,omitempty"`
	Trading           *bool                             `json:"trading,omitempty"`
	WithdrawAllEnable *bool                             `json:"withdrawAllEnable,omitempty"`
	Withdrawing       *string                           `json:"withdrawing,omitempty"`
}

// NewInlineResponse20013 instantiates a new InlineResponse20013 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20013() *InlineResponse20013 {
	this := InlineResponse20013{}
	return &this
}

// NewInlineResponse20013WithDefaults instantiates a new InlineResponse20013 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20013WithDefaults() *InlineResponse20013 {
	this := InlineResponse20013{}
	return &this
}

// GetCoin returns the Coin field value if set, zero value otherwise.
func (o *InlineResponse20013) GetCoin() string {
	if o == nil || o.Coin == nil {
		var ret string
		return ret
	}
	return *o.Coin
}

// GetCoinOk returns a tuple with the Coin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20013) GetCoinOk() (*string, bool) {
	if o == nil || o.Coin == nil {
		return nil, false
	}
	return o.Coin, true
}

// HasCoin returns a boolean if a field has been set.
func (o *InlineResponse20013) HasCoin() bool {
	if o != nil && o.Coin != nil {
		return true
	}

	return false
}

// SetCoin gets a reference to the given string and assigns it to the Coin field.
func (o *InlineResponse20013) SetCoin(v string) {
	o.Coin = &v
}

// GetDepositAllEnable returns the DepositAllEnable field value if set, zero value otherwise.
func (o *InlineResponse20013) GetDepositAllEnable() bool {
	if o == nil || o.DepositAllEnable == nil {
		var ret bool
		return ret
	}
	return *o.DepositAllEnable
}

// GetDepositAllEnableOk returns a tuple with the DepositAllEnable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20013) GetDepositAllEnableOk() (*bool, bool) {
	if o == nil || o.DepositAllEnable == nil {
		return nil, false
	}
	return o.DepositAllEnable, true
}

// HasDepositAllEnable returns a boolean if a field has been set.
func (o *InlineResponse20013) HasDepositAllEnable() bool {
	if o != nil && o.DepositAllEnable != nil {
		return true
	}

	return false
}

// SetDepositAllEnable gets a reference to the given bool and assigns it to the DepositAllEnable field.
func (o *InlineResponse20013) SetDepositAllEnable(v bool) {
	o.DepositAllEnable = &v
}

// GetFree returns the Free field value if set, zero value otherwise.
func (o *InlineResponse20013) GetFree() string {
	if o == nil || o.Free == nil {
		var ret string
		return ret
	}
	return *o.Free
}

// GetFreeOk returns a tuple with the Free field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20013) GetFreeOk() (*string, bool) {
	if o == nil || o.Free == nil {
		return nil, false
	}
	return o.Free, true
}

// HasFree returns a boolean if a field has been set.
func (o *InlineResponse20013) HasFree() bool {
	if o != nil && o.Free != nil {
		return true
	}

	return false
}

// SetFree gets a reference to the given string and assigns it to the Free field.
func (o *InlineResponse20013) SetFree(v string) {
	o.Free = &v
}

// GetFreeze returns the Freeze field value if set, zero value otherwise.
func (o *InlineResponse20013) GetFreeze() string {
	if o == nil || o.Freeze == nil {
		var ret string
		return ret
	}
	return *o.Freeze
}

// GetFreezeOk returns a tuple with the Freeze field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20013) GetFreezeOk() (*string, bool) {
	if o == nil || o.Freeze == nil {
		return nil, false
	}
	return o.Freeze, true
}

// HasFreeze returns a boolean if a field has been set.
func (o *InlineResponse20013) HasFreeze() bool {
	if o != nil && o.Freeze != nil {
		return true
	}

	return false
}

// SetFreeze gets a reference to the given string and assigns it to the Freeze field.
func (o *InlineResponse20013) SetFreeze(v string) {
	o.Freeze = &v
}

// GetIpoable returns the Ipoable field value if set, zero value otherwise.
func (o *InlineResponse20013) GetIpoable() string {
	if o == nil || o.Ipoable == nil {
		var ret string
		return ret
	}
	return *o.Ipoable
}

// GetIpoableOk returns a tuple with the Ipoable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20013) GetIpoableOk() (*string, bool) {
	if o == nil || o.Ipoable == nil {
		return nil, false
	}
	return o.Ipoable, true
}

// HasIpoable returns a boolean if a field has been set.
func (o *InlineResponse20013) HasIpoable() bool {
	if o != nil && o.Ipoable != nil {
		return true
	}

	return false
}

// SetIpoable gets a reference to the given string and assigns it to the Ipoable field.
func (o *InlineResponse20013) SetIpoable(v string) {
	o.Ipoable = &v
}

// GetIpoing returns the Ipoing field value if set, zero value otherwise.
func (o *InlineResponse20013) GetIpoing() string {
	if o == nil || o.Ipoing == nil {
		var ret string
		return ret
	}
	return *o.Ipoing
}

// GetIpoingOk returns a tuple with the Ipoing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20013) GetIpoingOk() (*string, bool) {
	if o == nil || o.Ipoing == nil {
		return nil, false
	}
	return o.Ipoing, true
}

// HasIpoing returns a boolean if a field has been set.
func (o *InlineResponse20013) HasIpoing() bool {
	if o != nil && o.Ipoing != nil {
		return true
	}

	return false
}

// SetIpoing gets a reference to the given string and assigns it to the Ipoing field.
func (o *InlineResponse20013) SetIpoing(v string) {
	o.Ipoing = &v
}

// GetIsLegalMoney returns the IsLegalMoney field value if set, zero value otherwise.
func (o *InlineResponse20013) GetIsLegalMoney() bool {
	if o == nil || o.IsLegalMoney == nil {
		var ret bool
		return ret
	}
	return *o.IsLegalMoney
}

// GetIsLegalMoneyOk returns a tuple with the IsLegalMoney field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20013) GetIsLegalMoneyOk() (*bool, bool) {
	if o == nil || o.IsLegalMoney == nil {
		return nil, false
	}
	return o.IsLegalMoney, true
}

// HasIsLegalMoney returns a boolean if a field has been set.
func (o *InlineResponse20013) HasIsLegalMoney() bool {
	if o != nil && o.IsLegalMoney != nil {
		return true
	}

	return false
}

// SetIsLegalMoney gets a reference to the given bool and assigns it to the IsLegalMoney field.
func (o *InlineResponse20013) SetIsLegalMoney(v bool) {
	o.IsLegalMoney = &v
}

// GetLocked returns the Locked field value if set, zero value otherwise.
func (o *InlineResponse20013) GetLocked() string {
	if o == nil || o.Locked == nil {
		var ret string
		return ret
	}
	return *o.Locked
}

// GetLockedOk returns a tuple with the Locked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20013) GetLockedOk() (*string, bool) {
	if o == nil || o.Locked == nil {
		return nil, false
	}
	return o.Locked, true
}

// HasLocked returns a boolean if a field has been set.
func (o *InlineResponse20013) HasLocked() bool {
	if o != nil && o.Locked != nil {
		return true
	}

	return false
}

// SetLocked gets a reference to the given string and assigns it to the Locked field.
func (o *InlineResponse20013) SetLocked(v string) {
	o.Locked = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *InlineResponse20013) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20013) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *InlineResponse20013) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *InlineResponse20013) SetName(v string) {
	o.Name = &v
}

// GetNetworkList returns the NetworkList field value if set, zero value otherwise.
func (o *InlineResponse20013) GetNetworkList() []InlineResponse20013NetworkList {
	if o == nil || o.NetworkList == nil {
		var ret []InlineResponse20013NetworkList
		return ret
	}
	return *o.NetworkList
}

// GetNetworkListOk returns a tuple with the NetworkList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20013) GetNetworkListOk() (*[]InlineResponse20013NetworkList, bool) {
	if o == nil || o.NetworkList == nil {
		return nil, false
	}
	return o.NetworkList, true
}

// HasNetworkList returns a boolean if a field has been set.
func (o *InlineResponse20013) HasNetworkList() bool {
	if o != nil && o.NetworkList != nil {
		return true
	}

	return false
}

// SetNetworkList gets a reference to the given []InlineResponse20013NetworkList and assigns it to the NetworkList field.
func (o *InlineResponse20013) SetNetworkList(v []InlineResponse20013NetworkList) {
	o.NetworkList = &v
}

// GetStorage returns the Storage field value if set, zero value otherwise.
func (o *InlineResponse20013) GetStorage() string {
	if o == nil || o.Storage == nil {
		var ret string
		return ret
	}
	return *o.Storage
}

// GetStorageOk returns a tuple with the Storage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20013) GetStorageOk() (*string, bool) {
	if o == nil || o.Storage == nil {
		return nil, false
	}
	return o.Storage, true
}

// HasStorage returns a boolean if a field has been set.
func (o *InlineResponse20013) HasStorage() bool {
	if o != nil && o.Storage != nil {
		return true
	}

	return false
}

// SetStorage gets a reference to the given string and assigns it to the Storage field.
func (o *InlineResponse20013) SetStorage(v string) {
	o.Storage = &v
}

// GetTrading returns the Trading field value if set, zero value otherwise.
func (o *InlineResponse20013) GetTrading() bool {
	if o == nil || o.Trading == nil {
		var ret bool
		return ret
	}
	return *o.Trading
}

// GetTradingOk returns a tuple with the Trading field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20013) GetTradingOk() (*bool, bool) {
	if o == nil || o.Trading == nil {
		return nil, false
	}
	return o.Trading, true
}

// HasTrading returns a boolean if a field has been set.
func (o *InlineResponse20013) HasTrading() bool {
	if o != nil && o.Trading != nil {
		return true
	}

	return false
}

// SetTrading gets a reference to the given bool and assigns it to the Trading field.
func (o *InlineResponse20013) SetTrading(v bool) {
	o.Trading = &v
}

// GetWithdrawAllEnable returns the WithdrawAllEnable field value if set, zero value otherwise.
func (o *InlineResponse20013) GetWithdrawAllEnable() bool {
	if o == nil || o.WithdrawAllEnable == nil {
		var ret bool
		return ret
	}
	return *o.WithdrawAllEnable
}

// GetWithdrawAllEnableOk returns a tuple with the WithdrawAllEnable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20013) GetWithdrawAllEnableOk() (*bool, bool) {
	if o == nil || o.WithdrawAllEnable == nil {
		return nil, false
	}
	return o.WithdrawAllEnable, true
}

// HasWithdrawAllEnable returns a boolean if a field has been set.
func (o *InlineResponse20013) HasWithdrawAllEnable() bool {
	if o != nil && o.WithdrawAllEnable != nil {
		return true
	}

	return false
}

// SetWithdrawAllEnable gets a reference to the given bool and assigns it to the WithdrawAllEnable field.
func (o *InlineResponse20013) SetWithdrawAllEnable(v bool) {
	o.WithdrawAllEnable = &v
}

// GetWithdrawing returns the Withdrawing field value if set, zero value otherwise.
func (o *InlineResponse20013) GetWithdrawing() string {
	if o == nil || o.Withdrawing == nil {
		var ret string
		return ret
	}
	return *o.Withdrawing
}

// GetWithdrawingOk returns a tuple with the Withdrawing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20013) GetWithdrawingOk() (*string, bool) {
	if o == nil || o.Withdrawing == nil {
		return nil, false
	}
	return o.Withdrawing, true
}

// HasWithdrawing returns a boolean if a field has been set.
func (o *InlineResponse20013) HasWithdrawing() bool {
	if o != nil && o.Withdrawing != nil {
		return true
	}

	return false
}

// SetWithdrawing gets a reference to the given string and assigns it to the Withdrawing field.
func (o *InlineResponse20013) SetWithdrawing(v string) {
	o.Withdrawing = &v
}

func (o InlineResponse20013) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Coin != nil {
		toSerialize["coin"] = o.Coin
	}
	if o.DepositAllEnable != nil {
		toSerialize["depositAllEnable"] = o.DepositAllEnable
	}
	if o.Free != nil {
		toSerialize["free"] = o.Free
	}
	if o.Freeze != nil {
		toSerialize["freeze"] = o.Freeze
	}
	if o.Ipoable != nil {
		toSerialize["ipoable"] = o.Ipoable
	}
	if o.Ipoing != nil {
		toSerialize["ipoing"] = o.Ipoing
	}
	if o.IsLegalMoney != nil {
		toSerialize["isLegalMoney"] = o.IsLegalMoney
	}
	if o.Locked != nil {
		toSerialize["locked"] = o.Locked
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.NetworkList != nil {
		toSerialize["networkList"] = o.NetworkList
	}
	if o.Storage != nil {
		toSerialize["storage"] = o.Storage
	}
	if o.Trading != nil {
		toSerialize["trading"] = o.Trading
	}
	if o.WithdrawAllEnable != nil {
		toSerialize["withdrawAllEnable"] = o.WithdrawAllEnable
	}
	if o.Withdrawing != nil {
		toSerialize["withdrawing"] = o.Withdrawing
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20013 struct {
	value *InlineResponse20013
	isSet bool
}

func (v NullableInlineResponse20013) Get() *InlineResponse20013 {
	return v.value
}

func (v *NullableInlineResponse20013) Set(val *InlineResponse20013) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20013) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20013) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20013(val *InlineResponse20013) *NullableInlineResponse20013 {
	return &NullableInlineResponse20013{value: val, isSet: true}
}

func (v NullableInlineResponse20013) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20013) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
