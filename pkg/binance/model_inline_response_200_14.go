/*
 * Binance SPOT Public API
 *
 * The swagger file of Binance Public API  API documents:   - [https://github.com/binance/binance-spot-api-docs](https://github.com/binance/binance-spot-api-docs)   - [https://binance-docs.github.io/apidocs/spot/en](https://binance-docs.github.io/apidocs/spot/en)
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package binance

import (
	"encoding/json"
)

//
// InlineResponse20014 struct for InlineResponse20014
type InlineResponse20014 struct {
	Code        *int32                            `json:"code,omitempty"`
	Msg         *string                           `json:"msg,omitempty"`
	SnapshotVos *[]InlineResponse20014SnapshotVos `json:"snapshotVos,omitempty"`
}

// NewInlineResponse20014 instantiates a new InlineResponse20014 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20014() *InlineResponse20014 {
	this := InlineResponse20014{}
	return &this
}

// NewInlineResponse20014WithDefaults instantiates a new InlineResponse20014 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20014WithDefaults() *InlineResponse20014 {
	this := InlineResponse20014{}
	return &this
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *InlineResponse20014) GetCode() int32 {
	if o == nil || o.Code == nil {
		var ret int32
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20014) GetCodeOk() (*int32, bool) {
	if o == nil || o.Code == nil {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *InlineResponse20014) HasCode() bool {
	if o != nil && o.Code != nil {
		return true
	}

	return false
}

// SetCode gets a reference to the given int32 and assigns it to the Code field.
func (o *InlineResponse20014) SetCode(v int32) {
	o.Code = &v
}

// GetMsg returns the Msg field value if set, zero value otherwise.
func (o *InlineResponse20014) GetMsg() string {
	if o == nil || o.Msg == nil {
		var ret string
		return ret
	}
	return *o.Msg
}

// GetMsgOk returns a tuple with the Msg field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20014) GetMsgOk() (*string, bool) {
	if o == nil || o.Msg == nil {
		return nil, false
	}
	return o.Msg, true
}

// HasMsg returns a boolean if a field has been set.
func (o *InlineResponse20014) HasMsg() bool {
	if o != nil && o.Msg != nil {
		return true
	}

	return false
}

// SetMsg gets a reference to the given string and assigns it to the Msg field.
func (o *InlineResponse20014) SetMsg(v string) {
	o.Msg = &v
}

// GetSnapshotVos returns the SnapshotVos field value if set, zero value otherwise.
func (o *InlineResponse20014) GetSnapshotVos() []InlineResponse20014SnapshotVos {
	if o == nil || o.SnapshotVos == nil {
		var ret []InlineResponse20014SnapshotVos
		return ret
	}
	return *o.SnapshotVos
}

// GetSnapshotVosOk returns a tuple with the SnapshotVos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20014) GetSnapshotVosOk() (*[]InlineResponse20014SnapshotVos, bool) {
	if o == nil || o.SnapshotVos == nil {
		return nil, false
	}
	return o.SnapshotVos, true
}

// HasSnapshotVos returns a boolean if a field has been set.
func (o *InlineResponse20014) HasSnapshotVos() bool {
	if o != nil && o.SnapshotVos != nil {
		return true
	}

	return false
}

// SetSnapshotVos gets a reference to the given []InlineResponse20014SnapshotVos and assigns it to the SnapshotVos field.
func (o *InlineResponse20014) SetSnapshotVos(v []InlineResponse20014SnapshotVos) {
	o.SnapshotVos = &v
}

func (o InlineResponse20014) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Code != nil {
		toSerialize["code"] = o.Code
	}
	if o.Msg != nil {
		toSerialize["msg"] = o.Msg
	}
	if o.SnapshotVos != nil {
		toSerialize["snapshotVos"] = o.SnapshotVos
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20014 struct {
	value *InlineResponse20014
	isSet bool
}

func (v NullableInlineResponse20014) Get() *InlineResponse20014 {
	return v.value
}

func (v *NullableInlineResponse20014) Set(val *InlineResponse20014) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20014) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20014) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20014(val *InlineResponse20014) *NullableInlineResponse20014 {
	return &NullableInlineResponse20014{value: val, isSet: true}
}

func (v NullableInlineResponse20014) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20014) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
