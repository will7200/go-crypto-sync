/*
 * Binance SPOT Public API
 *
 * The swagger file of Binance Public API  API documents:   - [https://github.com/binance/binance-spot-api-docs](https://github.com/binance/binance-spot-api-docs)   - [https://binance-docs.github.io/apidocs/spot/en](https://binance-docs.github.io/apidocs/spot/en)
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package binance

import (
	"encoding/json"
)

//
// InlineResponse20014DataBalances struct for InlineResponse20014DataBalances
type InlineResponse20014DataBalances struct {
	Asset  *string `json:"asset,omitempty"`
	Free   *string `json:"free,omitempty"`
	Locked *string `json:"locked,omitempty"`
}

// NewInlineResponse20014DataBalances instantiates a new InlineResponse20014DataBalances object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20014DataBalances() *InlineResponse20014DataBalances {
	this := InlineResponse20014DataBalances{}
	return &this
}

// NewInlineResponse20014DataBalancesWithDefaults instantiates a new InlineResponse20014DataBalances object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20014DataBalancesWithDefaults() *InlineResponse20014DataBalances {
	this := InlineResponse20014DataBalances{}
	return &this
}

// GetAsset returns the Asset field value if set, zero value otherwise.
func (o *InlineResponse20014DataBalances) GetAsset() string {
	if o == nil || o.Asset == nil {
		var ret string
		return ret
	}
	return *o.Asset
}

// GetAssetOk returns a tuple with the Asset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20014DataBalances) GetAssetOk() (*string, bool) {
	if o == nil || o.Asset == nil {
		return nil, false
	}
	return o.Asset, true
}

// HasAsset returns a boolean if a field has been set.
func (o *InlineResponse20014DataBalances) HasAsset() bool {
	if o != nil && o.Asset != nil {
		return true
	}

	return false
}

// SetAsset gets a reference to the given string and assigns it to the Asset field.
func (o *InlineResponse20014DataBalances) SetAsset(v string) {
	o.Asset = &v
}

// GetFree returns the Free field value if set, zero value otherwise.
func (o *InlineResponse20014DataBalances) GetFree() string {
	if o == nil || o.Free == nil {
		var ret string
		return ret
	}
	return *o.Free
}

// GetFreeOk returns a tuple with the Free field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20014DataBalances) GetFreeOk() (*string, bool) {
	if o == nil || o.Free == nil {
		return nil, false
	}
	return o.Free, true
}

// HasFree returns a boolean if a field has been set.
func (o *InlineResponse20014DataBalances) HasFree() bool {
	if o != nil && o.Free != nil {
		return true
	}

	return false
}

// SetFree gets a reference to the given string and assigns it to the Free field.
func (o *InlineResponse20014DataBalances) SetFree(v string) {
	o.Free = &v
}

// GetLocked returns the Locked field value if set, zero value otherwise.
func (o *InlineResponse20014DataBalances) GetLocked() string {
	if o == nil || o.Locked == nil {
		var ret string
		return ret
	}
	return *o.Locked
}

// GetLockedOk returns a tuple with the Locked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20014DataBalances) GetLockedOk() (*string, bool) {
	if o == nil || o.Locked == nil {
		return nil, false
	}
	return o.Locked, true
}

// HasLocked returns a boolean if a field has been set.
func (o *InlineResponse20014DataBalances) HasLocked() bool {
	if o != nil && o.Locked != nil {
		return true
	}

	return false
}

// SetLocked gets a reference to the given string and assigns it to the Locked field.
func (o *InlineResponse20014DataBalances) SetLocked(v string) {
	o.Locked = &v
}

func (o InlineResponse20014DataBalances) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Asset != nil {
		toSerialize["asset"] = o.Asset
	}
	if o.Free != nil {
		toSerialize["free"] = o.Free
	}
	if o.Locked != nil {
		toSerialize["locked"] = o.Locked
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20014DataBalances struct {
	value *InlineResponse20014DataBalances
	isSet bool
}

func (v NullableInlineResponse20014DataBalances) Get() *InlineResponse20014DataBalances {
	return v.value
}

func (v *NullableInlineResponse20014DataBalances) Set(val *InlineResponse20014DataBalances) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20014DataBalances) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20014DataBalances) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20014DataBalances(val *InlineResponse20014DataBalances) *NullableInlineResponse20014DataBalances {
	return &NullableInlineResponse20014DataBalances{value: val, isSet: true}
}

func (v NullableInlineResponse20014DataBalances) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20014DataBalances) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
