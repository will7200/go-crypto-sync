/*
 * Binance SPOT Public API
 *
 * The swagger file of Binance Public API  API documents:   - [https://github.com/binance/binance-spot-api-docs](https://github.com/binance/binance-spot-api-docs)   - [https://binance-docs.github.io/apidocs/spot/en](https://binance-docs.github.io/apidocs/spot/en)
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package binance

import (
	"encoding/json"
)

//
// InlineResponse2001Filters struct for InlineResponse2001Filters
type InlineResponse2001Filters struct {
	FilterType *string `json:"filterType,omitempty"`
	MinPrice   *string `json:"minPrice,omitempty"`
	MaxPrice   *string `json:"maxPrice,omitempty"`
	TickSize   *string `json:"tickSize,omitempty"`
}

// NewInlineResponse2001Filters instantiates a new InlineResponse2001Filters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse2001Filters() *InlineResponse2001Filters {
	this := InlineResponse2001Filters{}
	return &this
}

// NewInlineResponse2001FiltersWithDefaults instantiates a new InlineResponse2001Filters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse2001FiltersWithDefaults() *InlineResponse2001Filters {
	this := InlineResponse2001Filters{}
	return &this
}

// GetFilterType returns the FilterType field value if set, zero value otherwise.
func (o *InlineResponse2001Filters) GetFilterType() string {
	if o == nil || o.FilterType == nil {
		var ret string
		return ret
	}
	return *o.FilterType
}

// GetFilterTypeOk returns a tuple with the FilterType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2001Filters) GetFilterTypeOk() (*string, bool) {
	if o == nil || o.FilterType == nil {
		return nil, false
	}
	return o.FilterType, true
}

// HasFilterType returns a boolean if a field has been set.
func (o *InlineResponse2001Filters) HasFilterType() bool {
	if o != nil && o.FilterType != nil {
		return true
	}

	return false
}

// SetFilterType gets a reference to the given string and assigns it to the FilterType field.
func (o *InlineResponse2001Filters) SetFilterType(v string) {
	o.FilterType = &v
}

// GetMinPrice returns the MinPrice field value if set, zero value otherwise.
func (o *InlineResponse2001Filters) GetMinPrice() string {
	if o == nil || o.MinPrice == nil {
		var ret string
		return ret
	}
	return *o.MinPrice
}

// GetMinPriceOk returns a tuple with the MinPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2001Filters) GetMinPriceOk() (*string, bool) {
	if o == nil || o.MinPrice == nil {
		return nil, false
	}
	return o.MinPrice, true
}

// HasMinPrice returns a boolean if a field has been set.
func (o *InlineResponse2001Filters) HasMinPrice() bool {
	if o != nil && o.MinPrice != nil {
		return true
	}

	return false
}

// SetMinPrice gets a reference to the given string and assigns it to the MinPrice field.
func (o *InlineResponse2001Filters) SetMinPrice(v string) {
	o.MinPrice = &v
}

// GetMaxPrice returns the MaxPrice field value if set, zero value otherwise.
func (o *InlineResponse2001Filters) GetMaxPrice() string {
	if o == nil || o.MaxPrice == nil {
		var ret string
		return ret
	}
	return *o.MaxPrice
}

// GetMaxPriceOk returns a tuple with the MaxPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2001Filters) GetMaxPriceOk() (*string, bool) {
	if o == nil || o.MaxPrice == nil {
		return nil, false
	}
	return o.MaxPrice, true
}

// HasMaxPrice returns a boolean if a field has been set.
func (o *InlineResponse2001Filters) HasMaxPrice() bool {
	if o != nil && o.MaxPrice != nil {
		return true
	}

	return false
}

// SetMaxPrice gets a reference to the given string and assigns it to the MaxPrice field.
func (o *InlineResponse2001Filters) SetMaxPrice(v string) {
	o.MaxPrice = &v
}

// GetTickSize returns the TickSize field value if set, zero value otherwise.
func (o *InlineResponse2001Filters) GetTickSize() string {
	if o == nil || o.TickSize == nil {
		var ret string
		return ret
	}
	return *o.TickSize
}

// GetTickSizeOk returns a tuple with the TickSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2001Filters) GetTickSizeOk() (*string, bool) {
	if o == nil || o.TickSize == nil {
		return nil, false
	}
	return o.TickSize, true
}

// HasTickSize returns a boolean if a field has been set.
func (o *InlineResponse2001Filters) HasTickSize() bool {
	if o != nil && o.TickSize != nil {
		return true
	}

	return false
}

// SetTickSize gets a reference to the given string and assigns it to the TickSize field.
func (o *InlineResponse2001Filters) SetTickSize(v string) {
	o.TickSize = &v
}

func (o InlineResponse2001Filters) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.FilterType != nil {
		toSerialize["filterType"] = o.FilterType
	}
	if o.MinPrice != nil {
		toSerialize["minPrice"] = o.MinPrice
	}
	if o.MaxPrice != nil {
		toSerialize["maxPrice"] = o.MaxPrice
	}
	if o.TickSize != nil {
		toSerialize["tickSize"] = o.TickSize
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse2001Filters struct {
	value *InlineResponse2001Filters
	isSet bool
}

func (v NullableInlineResponse2001Filters) Get() *InlineResponse2001Filters {
	return v.value
}

func (v *NullableInlineResponse2001Filters) Set(val *InlineResponse2001Filters) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse2001Filters) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse2001Filters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse2001Filters(val *InlineResponse2001Filters) *NullableInlineResponse2001Filters {
	return &NullableInlineResponse2001Filters{value: val, isSet: true}
}

func (v NullableInlineResponse2001Filters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse2001Filters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
