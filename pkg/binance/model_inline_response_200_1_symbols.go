/*
 * Binance SPOT Public API
 *
 * The swagger file of Binance Public API  API documents:   - [https://github.com/binance/binance-spot-api-docs](https://github.com/binance/binance-spot-api-docs)   - [https://binance-docs.github.io/apidocs/spot/en](https://binance-docs.github.io/apidocs/spot/en)
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package binance

import (
	"encoding/json"
)

//
// InlineResponse2001Symbols struct for InlineResponse2001Symbols
type InlineResponse2001Symbols struct {
	Symbol                     *string                      `json:"symbol,omitempty"`
	Status                     *string                      `json:"status,omitempty"`
	BaseAsset                  *string                      `json:"baseAsset,omitempty"`
	BaseAssetPrecision         *int32                       `json:"baseAssetPrecision,omitempty"`
	QuoteAsset                 *string                      `json:"quoteAsset,omitempty"`
	QuoteAssetPrecision        *int32                       `json:"quoteAssetPrecision,omitempty"`
	BaseCommissionPrecision    *int32                       `json:"baseCommissionPrecision,omitempty"`
	QuoteCommissionPrecision   *int32                       `json:"quoteCommissionPrecision,omitempty"`
	OrderTypes                 *[]string                    `json:"orderTypes,omitempty"`
	IcebergAllowed             *bool                        `json:"icebergAllowed,omitempty"`
	OcoAllowed                 *bool                        `json:"ocoAllowed,omitempty"`
	QuoteOrderQtyMarketAllowed *bool                        `json:"quoteOrderQtyMarketAllowed,omitempty"`
	IsSpotTradingAllowed       *bool                        `json:"isSpotTradingAllowed,omitempty"`
	IsMarginTradingAllowed     *bool                        `json:"isMarginTradingAllowed,omitempty"`
	Filters                    *[]InlineResponse2001Filters `json:"filters,omitempty"`
	Permissions                *[]string                    `json:"permissions,omitempty"`
}

// NewInlineResponse2001Symbols instantiates a new InlineResponse2001Symbols object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse2001Symbols() *InlineResponse2001Symbols {
	this := InlineResponse2001Symbols{}
	return &this
}

// NewInlineResponse2001SymbolsWithDefaults instantiates a new InlineResponse2001Symbols object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse2001SymbolsWithDefaults() *InlineResponse2001Symbols {
	this := InlineResponse2001Symbols{}
	return &this
}

// GetSymbol returns the Symbol field value if set, zero value otherwise.
func (o *InlineResponse2001Symbols) GetSymbol() string {
	if o == nil || o.Symbol == nil {
		var ret string
		return ret
	}
	return *o.Symbol
}

// GetSymbolOk returns a tuple with the Symbol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2001Symbols) GetSymbolOk() (*string, bool) {
	if o == nil || o.Symbol == nil {
		return nil, false
	}
	return o.Symbol, true
}

// HasSymbol returns a boolean if a field has been set.
func (o *InlineResponse2001Symbols) HasSymbol() bool {
	if o != nil && o.Symbol != nil {
		return true
	}

	return false
}

// SetSymbol gets a reference to the given string and assigns it to the Symbol field.
func (o *InlineResponse2001Symbols) SetSymbol(v string) {
	o.Symbol = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *InlineResponse2001Symbols) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2001Symbols) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *InlineResponse2001Symbols) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *InlineResponse2001Symbols) SetStatus(v string) {
	o.Status = &v
}

// GetBaseAsset returns the BaseAsset field value if set, zero value otherwise.
func (o *InlineResponse2001Symbols) GetBaseAsset() string {
	if o == nil || o.BaseAsset == nil {
		var ret string
		return ret
	}
	return *o.BaseAsset
}

// GetBaseAssetOk returns a tuple with the BaseAsset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2001Symbols) GetBaseAssetOk() (*string, bool) {
	if o == nil || o.BaseAsset == nil {
		return nil, false
	}
	return o.BaseAsset, true
}

// HasBaseAsset returns a boolean if a field has been set.
func (o *InlineResponse2001Symbols) HasBaseAsset() bool {
	if o != nil && o.BaseAsset != nil {
		return true
	}

	return false
}

// SetBaseAsset gets a reference to the given string and assigns it to the BaseAsset field.
func (o *InlineResponse2001Symbols) SetBaseAsset(v string) {
	o.BaseAsset = &v
}

// GetBaseAssetPrecision returns the BaseAssetPrecision field value if set, zero value otherwise.
func (o *InlineResponse2001Symbols) GetBaseAssetPrecision() int32 {
	if o == nil || o.BaseAssetPrecision == nil {
		var ret int32
		return ret
	}
	return *o.BaseAssetPrecision
}

// GetBaseAssetPrecisionOk returns a tuple with the BaseAssetPrecision field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2001Symbols) GetBaseAssetPrecisionOk() (*int32, bool) {
	if o == nil || o.BaseAssetPrecision == nil {
		return nil, false
	}
	return o.BaseAssetPrecision, true
}

// HasBaseAssetPrecision returns a boolean if a field has been set.
func (o *InlineResponse2001Symbols) HasBaseAssetPrecision() bool {
	if o != nil && o.BaseAssetPrecision != nil {
		return true
	}

	return false
}

// SetBaseAssetPrecision gets a reference to the given int32 and assigns it to the BaseAssetPrecision field.
func (o *InlineResponse2001Symbols) SetBaseAssetPrecision(v int32) {
	o.BaseAssetPrecision = &v
}

// GetQuoteAsset returns the QuoteAsset field value if set, zero value otherwise.
func (o *InlineResponse2001Symbols) GetQuoteAsset() string {
	if o == nil || o.QuoteAsset == nil {
		var ret string
		return ret
	}
	return *o.QuoteAsset
}

// GetQuoteAssetOk returns a tuple with the QuoteAsset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2001Symbols) GetQuoteAssetOk() (*string, bool) {
	if o == nil || o.QuoteAsset == nil {
		return nil, false
	}
	return o.QuoteAsset, true
}

// HasQuoteAsset returns a boolean if a field has been set.
func (o *InlineResponse2001Symbols) HasQuoteAsset() bool {
	if o != nil && o.QuoteAsset != nil {
		return true
	}

	return false
}

// SetQuoteAsset gets a reference to the given string and assigns it to the QuoteAsset field.
func (o *InlineResponse2001Symbols) SetQuoteAsset(v string) {
	o.QuoteAsset = &v
}

// GetQuoteAssetPrecision returns the QuoteAssetPrecision field value if set, zero value otherwise.
func (o *InlineResponse2001Symbols) GetQuoteAssetPrecision() int32 {
	if o == nil || o.QuoteAssetPrecision == nil {
		var ret int32
		return ret
	}
	return *o.QuoteAssetPrecision
}

// GetQuoteAssetPrecisionOk returns a tuple with the QuoteAssetPrecision field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2001Symbols) GetQuoteAssetPrecisionOk() (*int32, bool) {
	if o == nil || o.QuoteAssetPrecision == nil {
		return nil, false
	}
	return o.QuoteAssetPrecision, true
}

// HasQuoteAssetPrecision returns a boolean if a field has been set.
func (o *InlineResponse2001Symbols) HasQuoteAssetPrecision() bool {
	if o != nil && o.QuoteAssetPrecision != nil {
		return true
	}

	return false
}

// SetQuoteAssetPrecision gets a reference to the given int32 and assigns it to the QuoteAssetPrecision field.
func (o *InlineResponse2001Symbols) SetQuoteAssetPrecision(v int32) {
	o.QuoteAssetPrecision = &v
}

// GetBaseCommissionPrecision returns the BaseCommissionPrecision field value if set, zero value otherwise.
func (o *InlineResponse2001Symbols) GetBaseCommissionPrecision() int32 {
	if o == nil || o.BaseCommissionPrecision == nil {
		var ret int32
		return ret
	}
	return *o.BaseCommissionPrecision
}

// GetBaseCommissionPrecisionOk returns a tuple with the BaseCommissionPrecision field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2001Symbols) GetBaseCommissionPrecisionOk() (*int32, bool) {
	if o == nil || o.BaseCommissionPrecision == nil {
		return nil, false
	}
	return o.BaseCommissionPrecision, true
}

// HasBaseCommissionPrecision returns a boolean if a field has been set.
func (o *InlineResponse2001Symbols) HasBaseCommissionPrecision() bool {
	if o != nil && o.BaseCommissionPrecision != nil {
		return true
	}

	return false
}

// SetBaseCommissionPrecision gets a reference to the given int32 and assigns it to the BaseCommissionPrecision field.
func (o *InlineResponse2001Symbols) SetBaseCommissionPrecision(v int32) {
	o.BaseCommissionPrecision = &v
}

// GetQuoteCommissionPrecision returns the QuoteCommissionPrecision field value if set, zero value otherwise.
func (o *InlineResponse2001Symbols) GetQuoteCommissionPrecision() int32 {
	if o == nil || o.QuoteCommissionPrecision == nil {
		var ret int32
		return ret
	}
	return *o.QuoteCommissionPrecision
}

// GetQuoteCommissionPrecisionOk returns a tuple with the QuoteCommissionPrecision field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2001Symbols) GetQuoteCommissionPrecisionOk() (*int32, bool) {
	if o == nil || o.QuoteCommissionPrecision == nil {
		return nil, false
	}
	return o.QuoteCommissionPrecision, true
}

// HasQuoteCommissionPrecision returns a boolean if a field has been set.
func (o *InlineResponse2001Symbols) HasQuoteCommissionPrecision() bool {
	if o != nil && o.QuoteCommissionPrecision != nil {
		return true
	}

	return false
}

// SetQuoteCommissionPrecision gets a reference to the given int32 and assigns it to the QuoteCommissionPrecision field.
func (o *InlineResponse2001Symbols) SetQuoteCommissionPrecision(v int32) {
	o.QuoteCommissionPrecision = &v
}

// GetOrderTypes returns the OrderTypes field value if set, zero value otherwise.
func (o *InlineResponse2001Symbols) GetOrderTypes() []string {
	if o == nil || o.OrderTypes == nil {
		var ret []string
		return ret
	}
	return *o.OrderTypes
}

// GetOrderTypesOk returns a tuple with the OrderTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2001Symbols) GetOrderTypesOk() (*[]string, bool) {
	if o == nil || o.OrderTypes == nil {
		return nil, false
	}
	return o.OrderTypes, true
}

// HasOrderTypes returns a boolean if a field has been set.
func (o *InlineResponse2001Symbols) HasOrderTypes() bool {
	if o != nil && o.OrderTypes != nil {
		return true
	}

	return false
}

// SetOrderTypes gets a reference to the given []string and assigns it to the OrderTypes field.
func (o *InlineResponse2001Symbols) SetOrderTypes(v []string) {
	o.OrderTypes = &v
}

// GetIcebergAllowed returns the IcebergAllowed field value if set, zero value otherwise.
func (o *InlineResponse2001Symbols) GetIcebergAllowed() bool {
	if o == nil || o.IcebergAllowed == nil {
		var ret bool
		return ret
	}
	return *o.IcebergAllowed
}

// GetIcebergAllowedOk returns a tuple with the IcebergAllowed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2001Symbols) GetIcebergAllowedOk() (*bool, bool) {
	if o == nil || o.IcebergAllowed == nil {
		return nil, false
	}
	return o.IcebergAllowed, true
}

// HasIcebergAllowed returns a boolean if a field has been set.
func (o *InlineResponse2001Symbols) HasIcebergAllowed() bool {
	if o != nil && o.IcebergAllowed != nil {
		return true
	}

	return false
}

// SetIcebergAllowed gets a reference to the given bool and assigns it to the IcebergAllowed field.
func (o *InlineResponse2001Symbols) SetIcebergAllowed(v bool) {
	o.IcebergAllowed = &v
}

// GetOcoAllowed returns the OcoAllowed field value if set, zero value otherwise.
func (o *InlineResponse2001Symbols) GetOcoAllowed() bool {
	if o == nil || o.OcoAllowed == nil {
		var ret bool
		return ret
	}
	return *o.OcoAllowed
}

// GetOcoAllowedOk returns a tuple with the OcoAllowed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2001Symbols) GetOcoAllowedOk() (*bool, bool) {
	if o == nil || o.OcoAllowed == nil {
		return nil, false
	}
	return o.OcoAllowed, true
}

// HasOcoAllowed returns a boolean if a field has been set.
func (o *InlineResponse2001Symbols) HasOcoAllowed() bool {
	if o != nil && o.OcoAllowed != nil {
		return true
	}

	return false
}

// SetOcoAllowed gets a reference to the given bool and assigns it to the OcoAllowed field.
func (o *InlineResponse2001Symbols) SetOcoAllowed(v bool) {
	o.OcoAllowed = &v
}

// GetQuoteOrderQtyMarketAllowed returns the QuoteOrderQtyMarketAllowed field value if set, zero value otherwise.
func (o *InlineResponse2001Symbols) GetQuoteOrderQtyMarketAllowed() bool {
	if o == nil || o.QuoteOrderQtyMarketAllowed == nil {
		var ret bool
		return ret
	}
	return *o.QuoteOrderQtyMarketAllowed
}

// GetQuoteOrderQtyMarketAllowedOk returns a tuple with the QuoteOrderQtyMarketAllowed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2001Symbols) GetQuoteOrderQtyMarketAllowedOk() (*bool, bool) {
	if o == nil || o.QuoteOrderQtyMarketAllowed == nil {
		return nil, false
	}
	return o.QuoteOrderQtyMarketAllowed, true
}

// HasQuoteOrderQtyMarketAllowed returns a boolean if a field has been set.
func (o *InlineResponse2001Symbols) HasQuoteOrderQtyMarketAllowed() bool {
	if o != nil && o.QuoteOrderQtyMarketAllowed != nil {
		return true
	}

	return false
}

// SetQuoteOrderQtyMarketAllowed gets a reference to the given bool and assigns it to the QuoteOrderQtyMarketAllowed field.
func (o *InlineResponse2001Symbols) SetQuoteOrderQtyMarketAllowed(v bool) {
	o.QuoteOrderQtyMarketAllowed = &v
}

// GetIsSpotTradingAllowed returns the IsSpotTradingAllowed field value if set, zero value otherwise.
func (o *InlineResponse2001Symbols) GetIsSpotTradingAllowed() bool {
	if o == nil || o.IsSpotTradingAllowed == nil {
		var ret bool
		return ret
	}
	return *o.IsSpotTradingAllowed
}

// GetIsSpotTradingAllowedOk returns a tuple with the IsSpotTradingAllowed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2001Symbols) GetIsSpotTradingAllowedOk() (*bool, bool) {
	if o == nil || o.IsSpotTradingAllowed == nil {
		return nil, false
	}
	return o.IsSpotTradingAllowed, true
}

// HasIsSpotTradingAllowed returns a boolean if a field has been set.
func (o *InlineResponse2001Symbols) HasIsSpotTradingAllowed() bool {
	if o != nil && o.IsSpotTradingAllowed != nil {
		return true
	}

	return false
}

// SetIsSpotTradingAllowed gets a reference to the given bool and assigns it to the IsSpotTradingAllowed field.
func (o *InlineResponse2001Symbols) SetIsSpotTradingAllowed(v bool) {
	o.IsSpotTradingAllowed = &v
}

// GetIsMarginTradingAllowed returns the IsMarginTradingAllowed field value if set, zero value otherwise.
func (o *InlineResponse2001Symbols) GetIsMarginTradingAllowed() bool {
	if o == nil || o.IsMarginTradingAllowed == nil {
		var ret bool
		return ret
	}
	return *o.IsMarginTradingAllowed
}

// GetIsMarginTradingAllowedOk returns a tuple with the IsMarginTradingAllowed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2001Symbols) GetIsMarginTradingAllowedOk() (*bool, bool) {
	if o == nil || o.IsMarginTradingAllowed == nil {
		return nil, false
	}
	return o.IsMarginTradingAllowed, true
}

// HasIsMarginTradingAllowed returns a boolean if a field has been set.
func (o *InlineResponse2001Symbols) HasIsMarginTradingAllowed() bool {
	if o != nil && o.IsMarginTradingAllowed != nil {
		return true
	}

	return false
}

// SetIsMarginTradingAllowed gets a reference to the given bool and assigns it to the IsMarginTradingAllowed field.
func (o *InlineResponse2001Symbols) SetIsMarginTradingAllowed(v bool) {
	o.IsMarginTradingAllowed = &v
}

// GetFilters returns the Filters field value if set, zero value otherwise.
func (o *InlineResponse2001Symbols) GetFilters() []InlineResponse2001Filters {
	if o == nil || o.Filters == nil {
		var ret []InlineResponse2001Filters
		return ret
	}
	return *o.Filters
}

// GetFiltersOk returns a tuple with the Filters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2001Symbols) GetFiltersOk() (*[]InlineResponse2001Filters, bool) {
	if o == nil || o.Filters == nil {
		return nil, false
	}
	return o.Filters, true
}

// HasFilters returns a boolean if a field has been set.
func (o *InlineResponse2001Symbols) HasFilters() bool {
	if o != nil && o.Filters != nil {
		return true
	}

	return false
}

// SetFilters gets a reference to the given []InlineResponse2001Filters and assigns it to the Filters field.
func (o *InlineResponse2001Symbols) SetFilters(v []InlineResponse2001Filters) {
	o.Filters = &v
}

// GetPermissions returns the Permissions field value if set, zero value otherwise.
func (o *InlineResponse2001Symbols) GetPermissions() []string {
	if o == nil || o.Permissions == nil {
		var ret []string
		return ret
	}
	return *o.Permissions
}

// GetPermissionsOk returns a tuple with the Permissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2001Symbols) GetPermissionsOk() (*[]string, bool) {
	if o == nil || o.Permissions == nil {
		return nil, false
	}
	return o.Permissions, true
}

// HasPermissions returns a boolean if a field has been set.
func (o *InlineResponse2001Symbols) HasPermissions() bool {
	if o != nil && o.Permissions != nil {
		return true
	}

	return false
}

// SetPermissions gets a reference to the given []string and assigns it to the Permissions field.
func (o *InlineResponse2001Symbols) SetPermissions(v []string) {
	o.Permissions = &v
}

func (o InlineResponse2001Symbols) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Symbol != nil {
		toSerialize["symbol"] = o.Symbol
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.BaseAsset != nil {
		toSerialize["baseAsset"] = o.BaseAsset
	}
	if o.BaseAssetPrecision != nil {
		toSerialize["baseAssetPrecision"] = o.BaseAssetPrecision
	}
	if o.QuoteAsset != nil {
		toSerialize["quoteAsset"] = o.QuoteAsset
	}
	if o.QuoteAssetPrecision != nil {
		toSerialize["quoteAssetPrecision"] = o.QuoteAssetPrecision
	}
	if o.BaseCommissionPrecision != nil {
		toSerialize["baseCommissionPrecision"] = o.BaseCommissionPrecision
	}
	if o.QuoteCommissionPrecision != nil {
		toSerialize["quoteCommissionPrecision"] = o.QuoteCommissionPrecision
	}
	if o.OrderTypes != nil {
		toSerialize["orderTypes"] = o.OrderTypes
	}
	if o.IcebergAllowed != nil {
		toSerialize["icebergAllowed"] = o.IcebergAllowed
	}
	if o.OcoAllowed != nil {
		toSerialize["ocoAllowed"] = o.OcoAllowed
	}
	if o.QuoteOrderQtyMarketAllowed != nil {
		toSerialize["quoteOrderQtyMarketAllowed"] = o.QuoteOrderQtyMarketAllowed
	}
	if o.IsSpotTradingAllowed != nil {
		toSerialize["isSpotTradingAllowed"] = o.IsSpotTradingAllowed
	}
	if o.IsMarginTradingAllowed != nil {
		toSerialize["isMarginTradingAllowed"] = o.IsMarginTradingAllowed
	}
	if o.Filters != nil {
		toSerialize["filters"] = o.Filters
	}
	if o.Permissions != nil {
		toSerialize["permissions"] = o.Permissions
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse2001Symbols struct {
	value *InlineResponse2001Symbols
	isSet bool
}

func (v NullableInlineResponse2001Symbols) Get() *InlineResponse2001Symbols {
	return v.value
}

func (v *NullableInlineResponse2001Symbols) Set(val *InlineResponse2001Symbols) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse2001Symbols) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse2001Symbols) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse2001Symbols(val *InlineResponse2001Symbols) *NullableInlineResponse2001Symbols {
	return &NullableInlineResponse2001Symbols{value: val, isSet: true}
}

func (v NullableInlineResponse2001Symbols) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse2001Symbols) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
