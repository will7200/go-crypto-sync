/*
 * Binance SPOT Public API
 *
 * The swagger file of Binance Public API  API documents:   - [https://github.com/binance/binance-spot-api-docs](https://github.com/binance/binance-spot-api-docs)   - [https://binance-docs.github.io/apidocs/spot/en](https://binance-docs.github.io/apidocs/spot/en)
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package binance

import (
	"encoding/json"
)

//
// InlineResponse2002 struct for InlineResponse2002
type InlineResponse2002 struct {
	LastUpdateId *int32        `json:"lastUpdateId,omitempty"`
	Bids         *[][][]string `json:"bids,omitempty"`
	Asks         *[][][]string `json:"asks,omitempty"`
}

// NewInlineResponse2002 instantiates a new InlineResponse2002 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse2002() *InlineResponse2002 {
	this := InlineResponse2002{}
	return &this
}

// NewInlineResponse2002WithDefaults instantiates a new InlineResponse2002 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse2002WithDefaults() *InlineResponse2002 {
	this := InlineResponse2002{}
	return &this
}

// GetLastUpdateId returns the LastUpdateId field value if set, zero value otherwise.
func (o *InlineResponse2002) GetLastUpdateId() int32 {
	if o == nil || o.LastUpdateId == nil {
		var ret int32
		return ret
	}
	return *o.LastUpdateId
}

// GetLastUpdateIdOk returns a tuple with the LastUpdateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2002) GetLastUpdateIdOk() (*int32, bool) {
	if o == nil || o.LastUpdateId == nil {
		return nil, false
	}
	return o.LastUpdateId, true
}

// HasLastUpdateId returns a boolean if a field has been set.
func (o *InlineResponse2002) HasLastUpdateId() bool {
	if o != nil && o.LastUpdateId != nil {
		return true
	}

	return false
}

// SetLastUpdateId gets a reference to the given int32 and assigns it to the LastUpdateId field.
func (o *InlineResponse2002) SetLastUpdateId(v int32) {
	o.LastUpdateId = &v
}

// GetBids returns the Bids field value if set, zero value otherwise.
func (o *InlineResponse2002) GetBids() [][][]string {
	if o == nil || o.Bids == nil {
		var ret [][][]string
		return ret
	}
	return *o.Bids
}

// GetBidsOk returns a tuple with the Bids field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2002) GetBidsOk() (*[][][]string, bool) {
	if o == nil || o.Bids == nil {
		return nil, false
	}
	return o.Bids, true
}

// HasBids returns a boolean if a field has been set.
func (o *InlineResponse2002) HasBids() bool {
	if o != nil && o.Bids != nil {
		return true
	}

	return false
}

// SetBids gets a reference to the given [][][]string and assigns it to the Bids field.
func (o *InlineResponse2002) SetBids(v [][][]string) {
	o.Bids = &v
}

// GetAsks returns the Asks field value if set, zero value otherwise.
func (o *InlineResponse2002) GetAsks() [][][]string {
	if o == nil || o.Asks == nil {
		var ret [][][]string
		return ret
	}
	return *o.Asks
}

// GetAsksOk returns a tuple with the Asks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2002) GetAsksOk() (*[][][]string, bool) {
	if o == nil || o.Asks == nil {
		return nil, false
	}
	return o.Asks, true
}

// HasAsks returns a boolean if a field has been set.
func (o *InlineResponse2002) HasAsks() bool {
	if o != nil && o.Asks != nil {
		return true
	}

	return false
}

// SetAsks gets a reference to the given [][][]string and assigns it to the Asks field.
func (o *InlineResponse2002) SetAsks(v [][][]string) {
	o.Asks = &v
}

func (o InlineResponse2002) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.LastUpdateId != nil {
		toSerialize["lastUpdateId"] = o.LastUpdateId
	}
	if o.Bids != nil {
		toSerialize["bids"] = o.Bids
	}
	if o.Asks != nil {
		toSerialize["asks"] = o.Asks
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse2002 struct {
	value *InlineResponse2002
	isSet bool
}

func (v NullableInlineResponse2002) Get() *InlineResponse2002 {
	return v.value
}

func (v *NullableInlineResponse2002) Set(val *InlineResponse2002) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse2002) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse2002) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse2002(val *InlineResponse2002) *NullableInlineResponse2002 {
	return &NullableInlineResponse2002{value: val, isSet: true}
}

func (v NullableInlineResponse2002) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse2002) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
