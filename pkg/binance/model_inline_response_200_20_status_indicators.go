/*
 * Binance SPOT Public API
 *
 * The swagger file of Binance Public API  API documents:   - [https://github.com/binance/binance-spot-api-docs](https://github.com/binance/binance-spot-api-docs)   - [https://binance-docs.github.io/apidocs/spot/en](https://binance-docs.github.io/apidocs/spot/en)
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package binance

import (
	"encoding/json"
)

//
// InlineResponse20020StatusIndicators struct for InlineResponse20020StatusIndicators
type InlineResponse20020StatusIndicators struct {
	BTCUSDT *[]InlineResponse20020StatusIndicatorsBTCUSDT `json:"BTCUSDT,omitempty"`
}

// NewInlineResponse20020StatusIndicators instantiates a new InlineResponse20020StatusIndicators object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20020StatusIndicators() *InlineResponse20020StatusIndicators {
	this := InlineResponse20020StatusIndicators{}
	return &this
}

// NewInlineResponse20020StatusIndicatorsWithDefaults instantiates a new InlineResponse20020StatusIndicators object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20020StatusIndicatorsWithDefaults() *InlineResponse20020StatusIndicators {
	this := InlineResponse20020StatusIndicators{}
	return &this
}

// GetBTCUSDT returns the BTCUSDT field value if set, zero value otherwise.
func (o *InlineResponse20020StatusIndicators) GetBTCUSDT() []InlineResponse20020StatusIndicatorsBTCUSDT {
	if o == nil || o.BTCUSDT == nil {
		var ret []InlineResponse20020StatusIndicatorsBTCUSDT
		return ret
	}
	return *o.BTCUSDT
}

// GetBTCUSDTOk returns a tuple with the BTCUSDT field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20020StatusIndicators) GetBTCUSDTOk() (*[]InlineResponse20020StatusIndicatorsBTCUSDT, bool) {
	if o == nil || o.BTCUSDT == nil {
		return nil, false
	}
	return o.BTCUSDT, true
}

// HasBTCUSDT returns a boolean if a field has been set.
func (o *InlineResponse20020StatusIndicators) HasBTCUSDT() bool {
	if o != nil && o.BTCUSDT != nil {
		return true
	}

	return false
}

// SetBTCUSDT gets a reference to the given []InlineResponse20020StatusIndicatorsBTCUSDT and assigns it to the BTCUSDT field.
func (o *InlineResponse20020StatusIndicators) SetBTCUSDT(v []InlineResponse20020StatusIndicatorsBTCUSDT) {
	o.BTCUSDT = &v
}

func (o InlineResponse20020StatusIndicators) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BTCUSDT != nil {
		toSerialize["BTCUSDT"] = o.BTCUSDT
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20020StatusIndicators struct {
	value *InlineResponse20020StatusIndicators
	isSet bool
}

func (v NullableInlineResponse20020StatusIndicators) Get() *InlineResponse20020StatusIndicators {
	return v.value
}

func (v *NullableInlineResponse20020StatusIndicators) Set(val *InlineResponse20020StatusIndicators) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20020StatusIndicators) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20020StatusIndicators) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20020StatusIndicators(val *InlineResponse20020StatusIndicators) *NullableInlineResponse20020StatusIndicators {
	return &NullableInlineResponse20020StatusIndicators{value: val, isSet: true}
}

func (v NullableInlineResponse20020StatusIndicators) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20020StatusIndicators) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
