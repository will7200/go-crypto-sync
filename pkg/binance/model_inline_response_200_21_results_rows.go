/*
 * Binance SPOT Public API
 *
 * The swagger file of Binance Public API  API documents:   - [https://github.com/binance/binance-spot-api-docs](https://github.com/binance/binance-spot-api-docs)   - [https://binance-docs.github.io/apidocs/spot/en](https://binance-docs.github.io/apidocs/spot/en)
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package binance

import (
	"encoding/json"
)

//
// InlineResponse20021ResultsRows struct for InlineResponse20021ResultsRows
type InlineResponse20021ResultsRows struct {
	TransferedTotal    *string                           `json:"transfered_total,omitempty"`
	ServiceChargeTotal *string                           `json:"service_charge_total,omitempty"`
	TranId             *int32                            `json:"tran_id,omitempty"`
	Logs               *[]InlineResponse20021ResultsLogs `json:"logs,omitempty"`
	OperateItem        *string                           `json:"operate_item,omitempty"`
}

// NewInlineResponse20021ResultsRows instantiates a new InlineResponse20021ResultsRows object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20021ResultsRows() *InlineResponse20021ResultsRows {
	this := InlineResponse20021ResultsRows{}
	return &this
}

// NewInlineResponse20021ResultsRowsWithDefaults instantiates a new InlineResponse20021ResultsRows object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20021ResultsRowsWithDefaults() *InlineResponse20021ResultsRows {
	this := InlineResponse20021ResultsRows{}
	return &this
}

// GetTransferedTotal returns the TransferedTotal field value if set, zero value otherwise.
func (o *InlineResponse20021ResultsRows) GetTransferedTotal() string {
	if o == nil || o.TransferedTotal == nil {
		var ret string
		return ret
	}
	return *o.TransferedTotal
}

// GetTransferedTotalOk returns a tuple with the TransferedTotal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20021ResultsRows) GetTransferedTotalOk() (*string, bool) {
	if o == nil || o.TransferedTotal == nil {
		return nil, false
	}
	return o.TransferedTotal, true
}

// HasTransferedTotal returns a boolean if a field has been set.
func (o *InlineResponse20021ResultsRows) HasTransferedTotal() bool {
	if o != nil && o.TransferedTotal != nil {
		return true
	}

	return false
}

// SetTransferedTotal gets a reference to the given string and assigns it to the TransferedTotal field.
func (o *InlineResponse20021ResultsRows) SetTransferedTotal(v string) {
	o.TransferedTotal = &v
}

// GetServiceChargeTotal returns the ServiceChargeTotal field value if set, zero value otherwise.
func (o *InlineResponse20021ResultsRows) GetServiceChargeTotal() string {
	if o == nil || o.ServiceChargeTotal == nil {
		var ret string
		return ret
	}
	return *o.ServiceChargeTotal
}

// GetServiceChargeTotalOk returns a tuple with the ServiceChargeTotal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20021ResultsRows) GetServiceChargeTotalOk() (*string, bool) {
	if o == nil || o.ServiceChargeTotal == nil {
		return nil, false
	}
	return o.ServiceChargeTotal, true
}

// HasServiceChargeTotal returns a boolean if a field has been set.
func (o *InlineResponse20021ResultsRows) HasServiceChargeTotal() bool {
	if o != nil && o.ServiceChargeTotal != nil {
		return true
	}

	return false
}

// SetServiceChargeTotal gets a reference to the given string and assigns it to the ServiceChargeTotal field.
func (o *InlineResponse20021ResultsRows) SetServiceChargeTotal(v string) {
	o.ServiceChargeTotal = &v
}

// GetTranId returns the TranId field value if set, zero value otherwise.
func (o *InlineResponse20021ResultsRows) GetTranId() int32 {
	if o == nil || o.TranId == nil {
		var ret int32
		return ret
	}
	return *o.TranId
}

// GetTranIdOk returns a tuple with the TranId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20021ResultsRows) GetTranIdOk() (*int32, bool) {
	if o == nil || o.TranId == nil {
		return nil, false
	}
	return o.TranId, true
}

// HasTranId returns a boolean if a field has been set.
func (o *InlineResponse20021ResultsRows) HasTranId() bool {
	if o != nil && o.TranId != nil {
		return true
	}

	return false
}

// SetTranId gets a reference to the given int32 and assigns it to the TranId field.
func (o *InlineResponse20021ResultsRows) SetTranId(v int32) {
	o.TranId = &v
}

// GetLogs returns the Logs field value if set, zero value otherwise.
func (o *InlineResponse20021ResultsRows) GetLogs() []InlineResponse20021ResultsLogs {
	if o == nil || o.Logs == nil {
		var ret []InlineResponse20021ResultsLogs
		return ret
	}
	return *o.Logs
}

// GetLogsOk returns a tuple with the Logs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20021ResultsRows) GetLogsOk() (*[]InlineResponse20021ResultsLogs, bool) {
	if o == nil || o.Logs == nil {
		return nil, false
	}
	return o.Logs, true
}

// HasLogs returns a boolean if a field has been set.
func (o *InlineResponse20021ResultsRows) HasLogs() bool {
	if o != nil && o.Logs != nil {
		return true
	}

	return false
}

// SetLogs gets a reference to the given []InlineResponse20021ResultsLogs and assigns it to the Logs field.
func (o *InlineResponse20021ResultsRows) SetLogs(v []InlineResponse20021ResultsLogs) {
	o.Logs = &v
}

// GetOperateItem returns the OperateItem field value if set, zero value otherwise.
func (o *InlineResponse20021ResultsRows) GetOperateItem() string {
	if o == nil || o.OperateItem == nil {
		var ret string
		return ret
	}
	return *o.OperateItem
}

// GetOperateItemOk returns a tuple with the OperateItem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20021ResultsRows) GetOperateItemOk() (*string, bool) {
	if o == nil || o.OperateItem == nil {
		return nil, false
	}
	return o.OperateItem, true
}

// HasOperateItem returns a boolean if a field has been set.
func (o *InlineResponse20021ResultsRows) HasOperateItem() bool {
	if o != nil && o.OperateItem != nil {
		return true
	}

	return false
}

// SetOperateItem gets a reference to the given string and assigns it to the OperateItem field.
func (o *InlineResponse20021ResultsRows) SetOperateItem(v string) {
	o.OperateItem = &v
}

func (o InlineResponse20021ResultsRows) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.TransferedTotal != nil {
		toSerialize["transfered_total"] = o.TransferedTotal
	}
	if o.ServiceChargeTotal != nil {
		toSerialize["service_charge_total"] = o.ServiceChargeTotal
	}
	if o.TranId != nil {
		toSerialize["tran_id"] = o.TranId
	}
	if o.Logs != nil {
		toSerialize["logs"] = o.Logs
	}
	if o.OperateItem != nil {
		toSerialize["operate_item"] = o.OperateItem
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20021ResultsRows struct {
	value *InlineResponse20021ResultsRows
	isSet bool
}

func (v NullableInlineResponse20021ResultsRows) Get() *InlineResponse20021ResultsRows {
	return v.value
}

func (v *NullableInlineResponse20021ResultsRows) Set(val *InlineResponse20021ResultsRows) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20021ResultsRows) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20021ResultsRows) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20021ResultsRows(val *InlineResponse20021ResultsRows) *NullableInlineResponse20021ResultsRows {
	return &NullableInlineResponse20021ResultsRows{value: val, isSet: true}
}

func (v NullableInlineResponse20021ResultsRows) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20021ResultsRows) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
