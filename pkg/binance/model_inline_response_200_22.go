/*
 * Binance SPOT Public API
 *
 * The swagger file of Binance Public API  API documents:   - [https://github.com/binance/binance-spot-api-docs](https://github.com/binance/binance-spot-api-docs)   - [https://binance-docs.github.io/apidocs/spot/en](https://binance-docs.github.io/apidocs/spot/en)
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package binance

import (
	"encoding/json"
)

//
// InlineResponse20022 struct for InlineResponse20022
type InlineResponse20022 struct {
	TotalServiceCharge *string                              `json:"totalServiceCharge,omitempty"`
	TotalTransfered    *string                              `json:"totalTransfered,omitempty"`
	TransferResult     *[]InlineResponse20022TransferResult `json:"transferResult,omitempty"`
}

// NewInlineResponse20022 instantiates a new InlineResponse20022 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20022() *InlineResponse20022 {
	this := InlineResponse20022{}
	return &this
}

// NewInlineResponse20022WithDefaults instantiates a new InlineResponse20022 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20022WithDefaults() *InlineResponse20022 {
	this := InlineResponse20022{}
	return &this
}

// GetTotalServiceCharge returns the TotalServiceCharge field value if set, zero value otherwise.
func (o *InlineResponse20022) GetTotalServiceCharge() string {
	if o == nil || o.TotalServiceCharge == nil {
		var ret string
		return ret
	}
	return *o.TotalServiceCharge
}

// GetTotalServiceChargeOk returns a tuple with the TotalServiceCharge field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20022) GetTotalServiceChargeOk() (*string, bool) {
	if o == nil || o.TotalServiceCharge == nil {
		return nil, false
	}
	return o.TotalServiceCharge, true
}

// HasTotalServiceCharge returns a boolean if a field has been set.
func (o *InlineResponse20022) HasTotalServiceCharge() bool {
	if o != nil && o.TotalServiceCharge != nil {
		return true
	}

	return false
}

// SetTotalServiceCharge gets a reference to the given string and assigns it to the TotalServiceCharge field.
func (o *InlineResponse20022) SetTotalServiceCharge(v string) {
	o.TotalServiceCharge = &v
}

// GetTotalTransfered returns the TotalTransfered field value if set, zero value otherwise.
func (o *InlineResponse20022) GetTotalTransfered() string {
	if o == nil || o.TotalTransfered == nil {
		var ret string
		return ret
	}
	return *o.TotalTransfered
}

// GetTotalTransferedOk returns a tuple with the TotalTransfered field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20022) GetTotalTransferedOk() (*string, bool) {
	if o == nil || o.TotalTransfered == nil {
		return nil, false
	}
	return o.TotalTransfered, true
}

// HasTotalTransfered returns a boolean if a field has been set.
func (o *InlineResponse20022) HasTotalTransfered() bool {
	if o != nil && o.TotalTransfered != nil {
		return true
	}

	return false
}

// SetTotalTransfered gets a reference to the given string and assigns it to the TotalTransfered field.
func (o *InlineResponse20022) SetTotalTransfered(v string) {
	o.TotalTransfered = &v
}

// GetTransferResult returns the TransferResult field value if set, zero value otherwise.
func (o *InlineResponse20022) GetTransferResult() []InlineResponse20022TransferResult {
	if o == nil || o.TransferResult == nil {
		var ret []InlineResponse20022TransferResult
		return ret
	}
	return *o.TransferResult
}

// GetTransferResultOk returns a tuple with the TransferResult field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20022) GetTransferResultOk() (*[]InlineResponse20022TransferResult, bool) {
	if o == nil || o.TransferResult == nil {
		return nil, false
	}
	return o.TransferResult, true
}

// HasTransferResult returns a boolean if a field has been set.
func (o *InlineResponse20022) HasTransferResult() bool {
	if o != nil && o.TransferResult != nil {
		return true
	}

	return false
}

// SetTransferResult gets a reference to the given []InlineResponse20022TransferResult and assigns it to the TransferResult field.
func (o *InlineResponse20022) SetTransferResult(v []InlineResponse20022TransferResult) {
	o.TransferResult = &v
}

func (o InlineResponse20022) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.TotalServiceCharge != nil {
		toSerialize["totalServiceCharge"] = o.TotalServiceCharge
	}
	if o.TotalTransfered != nil {
		toSerialize["totalTransfered"] = o.TotalTransfered
	}
	if o.TransferResult != nil {
		toSerialize["transferResult"] = o.TransferResult
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20022 struct {
	value *InlineResponse20022
	isSet bool
}

func (v NullableInlineResponse20022) Get() *InlineResponse20022 {
	return v.value
}

func (v *NullableInlineResponse20022) Set(val *InlineResponse20022) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20022) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20022) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20022(val *InlineResponse20022) *NullableInlineResponse20022 {
	return &NullableInlineResponse20022{value: val, isSet: true}
}

func (v NullableInlineResponse20022) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20022) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
