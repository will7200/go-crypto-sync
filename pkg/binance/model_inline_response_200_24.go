/*
 * Binance SPOT Public API
 *
 * The swagger file of Binance Public API  API documents:   - [https://github.com/binance/binance-spot-api-docs](https://github.com/binance/binance-spot-api-docs)   - [https://binance-docs.github.io/apidocs/spot/en](https://binance-docs.github.io/apidocs/spot/en)
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package binance

import (
	"encoding/json"
)

//
// InlineResponse20024 struct for InlineResponse20024
type InlineResponse20024 struct {
	Success     *bool                           `json:"success,omitempty"`
	AssetDetail *InlineResponse20024AssetDetail `json:"assetDetail,omitempty"`
}

// NewInlineResponse20024 instantiates a new InlineResponse20024 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse20024() *InlineResponse20024 {
	this := InlineResponse20024{}
	return &this
}

// NewInlineResponse20024WithDefaults instantiates a new InlineResponse20024 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse20024WithDefaults() *InlineResponse20024 {
	this := InlineResponse20024{}
	return &this
}

// GetSuccess returns the Success field value if set, zero value otherwise.
func (o *InlineResponse20024) GetSuccess() bool {
	if o == nil || o.Success == nil {
		var ret bool
		return ret
	}
	return *o.Success
}

// GetSuccessOk returns a tuple with the Success field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20024) GetSuccessOk() (*bool, bool) {
	if o == nil || o.Success == nil {
		return nil, false
	}
	return o.Success, true
}

// HasSuccess returns a boolean if a field has been set.
func (o *InlineResponse20024) HasSuccess() bool {
	if o != nil && o.Success != nil {
		return true
	}

	return false
}

// SetSuccess gets a reference to the given bool and assigns it to the Success field.
func (o *InlineResponse20024) SetSuccess(v bool) {
	o.Success = &v
}

// GetAssetDetail returns the AssetDetail field value if set, zero value otherwise.
func (o *InlineResponse20024) GetAssetDetail() InlineResponse20024AssetDetail {
	if o == nil || o.AssetDetail == nil {
		var ret InlineResponse20024AssetDetail
		return ret
	}
	return *o.AssetDetail
}

// GetAssetDetailOk returns a tuple with the AssetDetail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse20024) GetAssetDetailOk() (*InlineResponse20024AssetDetail, bool) {
	if o == nil || o.AssetDetail == nil {
		return nil, false
	}
	return o.AssetDetail, true
}

// HasAssetDetail returns a boolean if a field has been set.
func (o *InlineResponse20024) HasAssetDetail() bool {
	if o != nil && o.AssetDetail != nil {
		return true
	}

	return false
}

// SetAssetDetail gets a reference to the given InlineResponse20024AssetDetail and assigns it to the AssetDetail field.
func (o *InlineResponse20024) SetAssetDetail(v InlineResponse20024AssetDetail) {
	o.AssetDetail = &v
}

func (o InlineResponse20024) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Success != nil {
		toSerialize["success"] = o.Success
	}
	if o.AssetDetail != nil {
		toSerialize["assetDetail"] = o.AssetDetail
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse20024 struct {
	value *InlineResponse20024
	isSet bool
}

func (v NullableInlineResponse20024) Get() *InlineResponse20024 {
	return v.value
}

func (v *NullableInlineResponse20024) Set(val *InlineResponse20024) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse20024) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse20024) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse20024(val *InlineResponse20024) *NullableInlineResponse20024 {
	return &NullableInlineResponse20024{value: val, isSet: true}
}

func (v NullableInlineResponse20024) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse20024) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
