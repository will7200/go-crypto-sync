/*
 * Binance SPOT Public API
 *
 * The swagger file of Binance Public API  API documents:   - [https://github.com/binance/binance-spot-api-docs](https://github.com/binance/binance-spot-api-docs)   - [https://binance-docs.github.io/apidocs/spot/en](https://binance-docs.github.io/apidocs/spot/en)
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package binance

import (
	"encoding/json"
)

//
// InlineResponse2006 struct for InlineResponse2006
type InlineResponse2006 struct {
	AssetFullName  *string `json:"assetFullName,omitempty"`
	AssetName      *string `json:"assetName,omitempty"`
	IsBorrowable   *bool   `json:"isBorrowable,omitempty"`
	IsMortgageable *bool   `json:"isMortgageable,omitempty"`
	UserMinBorrow  *string `json:"userMinBorrow,omitempty"`
	UserMinRepay   *string `json:"userMinRepay,omitempty"`
}

// NewInlineResponse2006 instantiates a new InlineResponse2006 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse2006() *InlineResponse2006 {
	this := InlineResponse2006{}
	return &this
}

// NewInlineResponse2006WithDefaults instantiates a new InlineResponse2006 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse2006WithDefaults() *InlineResponse2006 {
	this := InlineResponse2006{}
	return &this
}

// GetAssetFullName returns the AssetFullName field value if set, zero value otherwise.
func (o *InlineResponse2006) GetAssetFullName() string {
	if o == nil || o.AssetFullName == nil {
		var ret string
		return ret
	}
	return *o.AssetFullName
}

// GetAssetFullNameOk returns a tuple with the AssetFullName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2006) GetAssetFullNameOk() (*string, bool) {
	if o == nil || o.AssetFullName == nil {
		return nil, false
	}
	return o.AssetFullName, true
}

// HasAssetFullName returns a boolean if a field has been set.
func (o *InlineResponse2006) HasAssetFullName() bool {
	if o != nil && o.AssetFullName != nil {
		return true
	}

	return false
}

// SetAssetFullName gets a reference to the given string and assigns it to the AssetFullName field.
func (o *InlineResponse2006) SetAssetFullName(v string) {
	o.AssetFullName = &v
}

// GetAssetName returns the AssetName field value if set, zero value otherwise.
func (o *InlineResponse2006) GetAssetName() string {
	if o == nil || o.AssetName == nil {
		var ret string
		return ret
	}
	return *o.AssetName
}

// GetAssetNameOk returns a tuple with the AssetName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2006) GetAssetNameOk() (*string, bool) {
	if o == nil || o.AssetName == nil {
		return nil, false
	}
	return o.AssetName, true
}

// HasAssetName returns a boolean if a field has been set.
func (o *InlineResponse2006) HasAssetName() bool {
	if o != nil && o.AssetName != nil {
		return true
	}

	return false
}

// SetAssetName gets a reference to the given string and assigns it to the AssetName field.
func (o *InlineResponse2006) SetAssetName(v string) {
	o.AssetName = &v
}

// GetIsBorrowable returns the IsBorrowable field value if set, zero value otherwise.
func (o *InlineResponse2006) GetIsBorrowable() bool {
	if o == nil || o.IsBorrowable == nil {
		var ret bool
		return ret
	}
	return *o.IsBorrowable
}

// GetIsBorrowableOk returns a tuple with the IsBorrowable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2006) GetIsBorrowableOk() (*bool, bool) {
	if o == nil || o.IsBorrowable == nil {
		return nil, false
	}
	return o.IsBorrowable, true
}

// HasIsBorrowable returns a boolean if a field has been set.
func (o *InlineResponse2006) HasIsBorrowable() bool {
	if o != nil && o.IsBorrowable != nil {
		return true
	}

	return false
}

// SetIsBorrowable gets a reference to the given bool and assigns it to the IsBorrowable field.
func (o *InlineResponse2006) SetIsBorrowable(v bool) {
	o.IsBorrowable = &v
}

// GetIsMortgageable returns the IsMortgageable field value if set, zero value otherwise.
func (o *InlineResponse2006) GetIsMortgageable() bool {
	if o == nil || o.IsMortgageable == nil {
		var ret bool
		return ret
	}
	return *o.IsMortgageable
}

// GetIsMortgageableOk returns a tuple with the IsMortgageable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2006) GetIsMortgageableOk() (*bool, bool) {
	if o == nil || o.IsMortgageable == nil {
		return nil, false
	}
	return o.IsMortgageable, true
}

// HasIsMortgageable returns a boolean if a field has been set.
func (o *InlineResponse2006) HasIsMortgageable() bool {
	if o != nil && o.IsMortgageable != nil {
		return true
	}

	return false
}

// SetIsMortgageable gets a reference to the given bool and assigns it to the IsMortgageable field.
func (o *InlineResponse2006) SetIsMortgageable(v bool) {
	o.IsMortgageable = &v
}

// GetUserMinBorrow returns the UserMinBorrow field value if set, zero value otherwise.
func (o *InlineResponse2006) GetUserMinBorrow() string {
	if o == nil || o.UserMinBorrow == nil {
		var ret string
		return ret
	}
	return *o.UserMinBorrow
}

// GetUserMinBorrowOk returns a tuple with the UserMinBorrow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2006) GetUserMinBorrowOk() (*string, bool) {
	if o == nil || o.UserMinBorrow == nil {
		return nil, false
	}
	return o.UserMinBorrow, true
}

// HasUserMinBorrow returns a boolean if a field has been set.
func (o *InlineResponse2006) HasUserMinBorrow() bool {
	if o != nil && o.UserMinBorrow != nil {
		return true
	}

	return false
}

// SetUserMinBorrow gets a reference to the given string and assigns it to the UserMinBorrow field.
func (o *InlineResponse2006) SetUserMinBorrow(v string) {
	o.UserMinBorrow = &v
}

// GetUserMinRepay returns the UserMinRepay field value if set, zero value otherwise.
func (o *InlineResponse2006) GetUserMinRepay() string {
	if o == nil || o.UserMinRepay == nil {
		var ret string
		return ret
	}
	return *o.UserMinRepay
}

// GetUserMinRepayOk returns a tuple with the UserMinRepay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2006) GetUserMinRepayOk() (*string, bool) {
	if o == nil || o.UserMinRepay == nil {
		return nil, false
	}
	return o.UserMinRepay, true
}

// HasUserMinRepay returns a boolean if a field has been set.
func (o *InlineResponse2006) HasUserMinRepay() bool {
	if o != nil && o.UserMinRepay != nil {
		return true
	}

	return false
}

// SetUserMinRepay gets a reference to the given string and assigns it to the UserMinRepay field.
func (o *InlineResponse2006) SetUserMinRepay(v string) {
	o.UserMinRepay = &v
}

func (o InlineResponse2006) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AssetFullName != nil {
		toSerialize["assetFullName"] = o.AssetFullName
	}
	if o.AssetName != nil {
		toSerialize["assetName"] = o.AssetName
	}
	if o.IsBorrowable != nil {
		toSerialize["isBorrowable"] = o.IsBorrowable
	}
	if o.IsMortgageable != nil {
		toSerialize["isMortgageable"] = o.IsMortgageable
	}
	if o.UserMinBorrow != nil {
		toSerialize["userMinBorrow"] = o.UserMinBorrow
	}
	if o.UserMinRepay != nil {
		toSerialize["userMinRepay"] = o.UserMinRepay
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse2006 struct {
	value *InlineResponse2006
	isSet bool
}

func (v NullableInlineResponse2006) Get() *InlineResponse2006 {
	return v.value
}

func (v *NullableInlineResponse2006) Set(val *InlineResponse2006) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse2006) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse2006) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse2006(val *InlineResponse2006) *NullableInlineResponse2006 {
	return &NullableInlineResponse2006{value: val, isSet: true}
}

func (v NullableInlineResponse2006) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse2006) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
