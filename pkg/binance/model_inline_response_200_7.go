/*
 * Binance SPOT Public API
 *
 * The swagger file of Binance Public API  API documents:   - [https://github.com/binance/binance-spot-api-docs](https://github.com/binance/binance-spot-api-docs)   - [https://binance-docs.github.io/apidocs/spot/en](https://binance-docs.github.io/apidocs/spot/en)
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package binance

import (
	"encoding/json"
)

//
// InlineResponse2007 struct for InlineResponse2007
type InlineResponse2007 struct {
	Id            *int32  `json:"id,omitempty"`
	Symbol        *string `json:"symbol,omitempty"`
	Base          *string `json:"base,omitempty"`
	Quote         *string `json:"quote,omitempty"`
	IsMarginTrade *bool   `json:"isMarginTrade,omitempty"`
	IsBuyAllowed  *bool   `json:"isBuyAllowed,omitempty"`
	IsSellAllowed *bool   `json:"isSellAllowed,omitempty"`
}

// NewInlineResponse2007 instantiates a new InlineResponse2007 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse2007() *InlineResponse2007 {
	this := InlineResponse2007{}
	return &this
}

// NewInlineResponse2007WithDefaults instantiates a new InlineResponse2007 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse2007WithDefaults() *InlineResponse2007 {
	this := InlineResponse2007{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *InlineResponse2007) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2007) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *InlineResponse2007) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *InlineResponse2007) SetId(v int32) {
	o.Id = &v
}

// GetSymbol returns the Symbol field value if set, zero value otherwise.
func (o *InlineResponse2007) GetSymbol() string {
	if o == nil || o.Symbol == nil {
		var ret string
		return ret
	}
	return *o.Symbol
}

// GetSymbolOk returns a tuple with the Symbol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2007) GetSymbolOk() (*string, bool) {
	if o == nil || o.Symbol == nil {
		return nil, false
	}
	return o.Symbol, true
}

// HasSymbol returns a boolean if a field has been set.
func (o *InlineResponse2007) HasSymbol() bool {
	if o != nil && o.Symbol != nil {
		return true
	}

	return false
}

// SetSymbol gets a reference to the given string and assigns it to the Symbol field.
func (o *InlineResponse2007) SetSymbol(v string) {
	o.Symbol = &v
}

// GetBase returns the Base field value if set, zero value otherwise.
func (o *InlineResponse2007) GetBase() string {
	if o == nil || o.Base == nil {
		var ret string
		return ret
	}
	return *o.Base
}

// GetBaseOk returns a tuple with the Base field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2007) GetBaseOk() (*string, bool) {
	if o == nil || o.Base == nil {
		return nil, false
	}
	return o.Base, true
}

// HasBase returns a boolean if a field has been set.
func (o *InlineResponse2007) HasBase() bool {
	if o != nil && o.Base != nil {
		return true
	}

	return false
}

// SetBase gets a reference to the given string and assigns it to the Base field.
func (o *InlineResponse2007) SetBase(v string) {
	o.Base = &v
}

// GetQuote returns the Quote field value if set, zero value otherwise.
func (o *InlineResponse2007) GetQuote() string {
	if o == nil || o.Quote == nil {
		var ret string
		return ret
	}
	return *o.Quote
}

// GetQuoteOk returns a tuple with the Quote field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2007) GetQuoteOk() (*string, bool) {
	if o == nil || o.Quote == nil {
		return nil, false
	}
	return o.Quote, true
}

// HasQuote returns a boolean if a field has been set.
func (o *InlineResponse2007) HasQuote() bool {
	if o != nil && o.Quote != nil {
		return true
	}

	return false
}

// SetQuote gets a reference to the given string and assigns it to the Quote field.
func (o *InlineResponse2007) SetQuote(v string) {
	o.Quote = &v
}

// GetIsMarginTrade returns the IsMarginTrade field value if set, zero value otherwise.
func (o *InlineResponse2007) GetIsMarginTrade() bool {
	if o == nil || o.IsMarginTrade == nil {
		var ret bool
		return ret
	}
	return *o.IsMarginTrade
}

// GetIsMarginTradeOk returns a tuple with the IsMarginTrade field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2007) GetIsMarginTradeOk() (*bool, bool) {
	if o == nil || o.IsMarginTrade == nil {
		return nil, false
	}
	return o.IsMarginTrade, true
}

// HasIsMarginTrade returns a boolean if a field has been set.
func (o *InlineResponse2007) HasIsMarginTrade() bool {
	if o != nil && o.IsMarginTrade != nil {
		return true
	}

	return false
}

// SetIsMarginTrade gets a reference to the given bool and assigns it to the IsMarginTrade field.
func (o *InlineResponse2007) SetIsMarginTrade(v bool) {
	o.IsMarginTrade = &v
}

// GetIsBuyAllowed returns the IsBuyAllowed field value if set, zero value otherwise.
func (o *InlineResponse2007) GetIsBuyAllowed() bool {
	if o == nil || o.IsBuyAllowed == nil {
		var ret bool
		return ret
	}
	return *o.IsBuyAllowed
}

// GetIsBuyAllowedOk returns a tuple with the IsBuyAllowed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2007) GetIsBuyAllowedOk() (*bool, bool) {
	if o == nil || o.IsBuyAllowed == nil {
		return nil, false
	}
	return o.IsBuyAllowed, true
}

// HasIsBuyAllowed returns a boolean if a field has been set.
func (o *InlineResponse2007) HasIsBuyAllowed() bool {
	if o != nil && o.IsBuyAllowed != nil {
		return true
	}

	return false
}

// SetIsBuyAllowed gets a reference to the given bool and assigns it to the IsBuyAllowed field.
func (o *InlineResponse2007) SetIsBuyAllowed(v bool) {
	o.IsBuyAllowed = &v
}

// GetIsSellAllowed returns the IsSellAllowed field value if set, zero value otherwise.
func (o *InlineResponse2007) GetIsSellAllowed() bool {
	if o == nil || o.IsSellAllowed == nil {
		var ret bool
		return ret
	}
	return *o.IsSellAllowed
}

// GetIsSellAllowedOk returns a tuple with the IsSellAllowed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse2007) GetIsSellAllowedOk() (*bool, bool) {
	if o == nil || o.IsSellAllowed == nil {
		return nil, false
	}
	return o.IsSellAllowed, true
}

// HasIsSellAllowed returns a boolean if a field has been set.
func (o *InlineResponse2007) HasIsSellAllowed() bool {
	if o != nil && o.IsSellAllowed != nil {
		return true
	}

	return false
}

// SetIsSellAllowed gets a reference to the given bool and assigns it to the IsSellAllowed field.
func (o *InlineResponse2007) SetIsSellAllowed(v bool) {
	o.IsSellAllowed = &v
}

func (o InlineResponse2007) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Symbol != nil {
		toSerialize["symbol"] = o.Symbol
	}
	if o.Base != nil {
		toSerialize["base"] = o.Base
	}
	if o.Quote != nil {
		toSerialize["quote"] = o.Quote
	}
	if o.IsMarginTrade != nil {
		toSerialize["isMarginTrade"] = o.IsMarginTrade
	}
	if o.IsBuyAllowed != nil {
		toSerialize["isBuyAllowed"] = o.IsBuyAllowed
	}
	if o.IsSellAllowed != nil {
		toSerialize["isSellAllowed"] = o.IsSellAllowed
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse2007 struct {
	value *InlineResponse2007
	isSet bool
}

func (v NullableInlineResponse2007) Get() *InlineResponse2007 {
	return v.value
}

func (v *NullableInlineResponse2007) Set(val *InlineResponse2007) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse2007) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse2007) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse2007(val *InlineResponse2007) *NullableInlineResponse2007 {
	return &NullableInlineResponse2007{value: val, isSet: true}
}

func (v NullableInlineResponse2007) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse2007) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
