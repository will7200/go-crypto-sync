/*
 * Binance SPOT Public API
 *
 * The swagger file of Binance Public API  API documents:   - [https://github.com/binance/binance-spot-api-docs](https://github.com/binance/binance-spot-api-docs)   - [https://binance-docs.github.io/apidocs/spot/en](https://binance-docs.github.io/apidocs/spot/en)
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package binance

import (
	"encoding/json"
)

//
// MarginTrade struct for MarginTrade
type MarginTrade struct {
	Commission      *string `json:"commission,omitempty"`
	CommissionAsset *string `json:"commissionAsset,omitempty"`
	Id              *int32  `json:"id,omitempty"`
	IsBestMatch     *bool   `json:"isBestMatch,omitempty"`
	IsBuyer         *bool   `json:"isBuyer,omitempty"`
	IsMaker         *bool   `json:"isMaker,omitempty"`
	OrderId         *int32  `json:"orderId,omitempty"`
	Price           *string `json:"price,omitempty"`
	Qty             *string `json:"qty,omitempty"`
	Symbol          *string `json:"symbol,omitempty"`
	Time            *int32  `json:"time,omitempty"`
}

// NewMarginTrade instantiates a new MarginTrade object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMarginTrade() *MarginTrade {
	this := MarginTrade{}
	return &this
}

// NewMarginTradeWithDefaults instantiates a new MarginTrade object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMarginTradeWithDefaults() *MarginTrade {
	this := MarginTrade{}
	return &this
}

// GetCommission returns the Commission field value if set, zero value otherwise.
func (o *MarginTrade) GetCommission() string {
	if o == nil || o.Commission == nil {
		var ret string
		return ret
	}
	return *o.Commission
}

// GetCommissionOk returns a tuple with the Commission field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarginTrade) GetCommissionOk() (*string, bool) {
	if o == nil || o.Commission == nil {
		return nil, false
	}
	return o.Commission, true
}

// HasCommission returns a boolean if a field has been set.
func (o *MarginTrade) HasCommission() bool {
	if o != nil && o.Commission != nil {
		return true
	}

	return false
}

// SetCommission gets a reference to the given string and assigns it to the Commission field.
func (o *MarginTrade) SetCommission(v string) {
	o.Commission = &v
}

// GetCommissionAsset returns the CommissionAsset field value if set, zero value otherwise.
func (o *MarginTrade) GetCommissionAsset() string {
	if o == nil || o.CommissionAsset == nil {
		var ret string
		return ret
	}
	return *o.CommissionAsset
}

// GetCommissionAssetOk returns a tuple with the CommissionAsset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarginTrade) GetCommissionAssetOk() (*string, bool) {
	if o == nil || o.CommissionAsset == nil {
		return nil, false
	}
	return o.CommissionAsset, true
}

// HasCommissionAsset returns a boolean if a field has been set.
func (o *MarginTrade) HasCommissionAsset() bool {
	if o != nil && o.CommissionAsset != nil {
		return true
	}

	return false
}

// SetCommissionAsset gets a reference to the given string and assigns it to the CommissionAsset field.
func (o *MarginTrade) SetCommissionAsset(v string) {
	o.CommissionAsset = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MarginTrade) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarginTrade) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MarginTrade) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *MarginTrade) SetId(v int32) {
	o.Id = &v
}

// GetIsBestMatch returns the IsBestMatch field value if set, zero value otherwise.
func (o *MarginTrade) GetIsBestMatch() bool {
	if o == nil || o.IsBestMatch == nil {
		var ret bool
		return ret
	}
	return *o.IsBestMatch
}

// GetIsBestMatchOk returns a tuple with the IsBestMatch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarginTrade) GetIsBestMatchOk() (*bool, bool) {
	if o == nil || o.IsBestMatch == nil {
		return nil, false
	}
	return o.IsBestMatch, true
}

// HasIsBestMatch returns a boolean if a field has been set.
func (o *MarginTrade) HasIsBestMatch() bool {
	if o != nil && o.IsBestMatch != nil {
		return true
	}

	return false
}

// SetIsBestMatch gets a reference to the given bool and assigns it to the IsBestMatch field.
func (o *MarginTrade) SetIsBestMatch(v bool) {
	o.IsBestMatch = &v
}

// GetIsBuyer returns the IsBuyer field value if set, zero value otherwise.
func (o *MarginTrade) GetIsBuyer() bool {
	if o == nil || o.IsBuyer == nil {
		var ret bool
		return ret
	}
	return *o.IsBuyer
}

// GetIsBuyerOk returns a tuple with the IsBuyer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarginTrade) GetIsBuyerOk() (*bool, bool) {
	if o == nil || o.IsBuyer == nil {
		return nil, false
	}
	return o.IsBuyer, true
}

// HasIsBuyer returns a boolean if a field has been set.
func (o *MarginTrade) HasIsBuyer() bool {
	if o != nil && o.IsBuyer != nil {
		return true
	}

	return false
}

// SetIsBuyer gets a reference to the given bool and assigns it to the IsBuyer field.
func (o *MarginTrade) SetIsBuyer(v bool) {
	o.IsBuyer = &v
}

// GetIsMaker returns the IsMaker field value if set, zero value otherwise.
func (o *MarginTrade) GetIsMaker() bool {
	if o == nil || o.IsMaker == nil {
		var ret bool
		return ret
	}
	return *o.IsMaker
}

// GetIsMakerOk returns a tuple with the IsMaker field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarginTrade) GetIsMakerOk() (*bool, bool) {
	if o == nil || o.IsMaker == nil {
		return nil, false
	}
	return o.IsMaker, true
}

// HasIsMaker returns a boolean if a field has been set.
func (o *MarginTrade) HasIsMaker() bool {
	if o != nil && o.IsMaker != nil {
		return true
	}

	return false
}

// SetIsMaker gets a reference to the given bool and assigns it to the IsMaker field.
func (o *MarginTrade) SetIsMaker(v bool) {
	o.IsMaker = &v
}

// GetOrderId returns the OrderId field value if set, zero value otherwise.
func (o *MarginTrade) GetOrderId() int32 {
	if o == nil || o.OrderId == nil {
		var ret int32
		return ret
	}
	return *o.OrderId
}

// GetOrderIdOk returns a tuple with the OrderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarginTrade) GetOrderIdOk() (*int32, bool) {
	if o == nil || o.OrderId == nil {
		return nil, false
	}
	return o.OrderId, true
}

// HasOrderId returns a boolean if a field has been set.
func (o *MarginTrade) HasOrderId() bool {
	if o != nil && o.OrderId != nil {
		return true
	}

	return false
}

// SetOrderId gets a reference to the given int32 and assigns it to the OrderId field.
func (o *MarginTrade) SetOrderId(v int32) {
	o.OrderId = &v
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *MarginTrade) GetPrice() string {
	if o == nil || o.Price == nil {
		var ret string
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarginTrade) GetPriceOk() (*string, bool) {
	if o == nil || o.Price == nil {
		return nil, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *MarginTrade) HasPrice() bool {
	if o != nil && o.Price != nil {
		return true
	}

	return false
}

// SetPrice gets a reference to the given string and assigns it to the Price field.
func (o *MarginTrade) SetPrice(v string) {
	o.Price = &v
}

// GetQty returns the Qty field value if set, zero value otherwise.
func (o *MarginTrade) GetQty() string {
	if o == nil || o.Qty == nil {
		var ret string
		return ret
	}
	return *o.Qty
}

// GetQtyOk returns a tuple with the Qty field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarginTrade) GetQtyOk() (*string, bool) {
	if o == nil || o.Qty == nil {
		return nil, false
	}
	return o.Qty, true
}

// HasQty returns a boolean if a field has been set.
func (o *MarginTrade) HasQty() bool {
	if o != nil && o.Qty != nil {
		return true
	}

	return false
}

// SetQty gets a reference to the given string and assigns it to the Qty field.
func (o *MarginTrade) SetQty(v string) {
	o.Qty = &v
}

// GetSymbol returns the Symbol field value if set, zero value otherwise.
func (o *MarginTrade) GetSymbol() string {
	if o == nil || o.Symbol == nil {
		var ret string
		return ret
	}
	return *o.Symbol
}

// GetSymbolOk returns a tuple with the Symbol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarginTrade) GetSymbolOk() (*string, bool) {
	if o == nil || o.Symbol == nil {
		return nil, false
	}
	return o.Symbol, true
}

// HasSymbol returns a boolean if a field has been set.
func (o *MarginTrade) HasSymbol() bool {
	if o != nil && o.Symbol != nil {
		return true
	}

	return false
}

// SetSymbol gets a reference to the given string and assigns it to the Symbol field.
func (o *MarginTrade) SetSymbol(v string) {
	o.Symbol = &v
}

// GetTime returns the Time field value if set, zero value otherwise.
func (o *MarginTrade) GetTime() int32 {
	if o == nil || o.Time == nil {
		var ret int32
		return ret
	}
	return *o.Time
}

// GetTimeOk returns a tuple with the Time field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarginTrade) GetTimeOk() (*int32, bool) {
	if o == nil || o.Time == nil {
		return nil, false
	}
	return o.Time, true
}

// HasTime returns a boolean if a field has been set.
func (o *MarginTrade) HasTime() bool {
	if o != nil && o.Time != nil {
		return true
	}

	return false
}

// SetTime gets a reference to the given int32 and assigns it to the Time field.
func (o *MarginTrade) SetTime(v int32) {
	o.Time = &v
}

func (o MarginTrade) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Commission != nil {
		toSerialize["commission"] = o.Commission
	}
	if o.CommissionAsset != nil {
		toSerialize["commissionAsset"] = o.CommissionAsset
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.IsBestMatch != nil {
		toSerialize["isBestMatch"] = o.IsBestMatch
	}
	if o.IsBuyer != nil {
		toSerialize["isBuyer"] = o.IsBuyer
	}
	if o.IsMaker != nil {
		toSerialize["isMaker"] = o.IsMaker
	}
	if o.OrderId != nil {
		toSerialize["orderId"] = o.OrderId
	}
	if o.Price != nil {
		toSerialize["price"] = o.Price
	}
	if o.Qty != nil {
		toSerialize["qty"] = o.Qty
	}
	if o.Symbol != nil {
		toSerialize["symbol"] = o.Symbol
	}
	if o.Time != nil {
		toSerialize["time"] = o.Time
	}
	return json.Marshal(toSerialize)
}

type NullableMarginTrade struct {
	value *MarginTrade
	isSet bool
}

func (v NullableMarginTrade) Get() *MarginTrade {
	return v.value
}

func (v *NullableMarginTrade) Set(val *MarginTrade) {
	v.value = val
	v.isSet = true
}

func (v NullableMarginTrade) IsSet() bool {
	return v.isSet
}

func (v *NullableMarginTrade) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMarginTrade(val *MarginTrade) *NullableMarginTrade {
	return &NullableMarginTrade{value: val, isSet: true}
}

func (v NullableMarginTrade) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMarginTrade) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
