/*
 * Binance SPOT Public API
 *
 * The swagger file of Binance Public API  API documents:   - [https://github.com/binance/binance-spot-api-docs](https://github.com/binance/binance-spot-api-docs)   - [https://binance-docs.github.io/apidocs/spot/en](https://binance-docs.github.io/apidocs/spot/en)
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package binance

import (
	"encoding/json"
)

//
// TickerList struct for TickerList
type TickerList struct {
	Items []Ticker
}

// NewTickerList instantiates a new TickerList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTickerList() *TickerList {
	this := TickerList{}
	return &this
}

// NewTickerListWithDefaults instantiates a new TickerList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTickerListWithDefaults() *TickerList {
	this := TickerList{}
	return &this
}

func (o TickerList) MarshalJSON() ([]byte, error) {
	toSerialize := make([]interface{}, len(o.Items))
	for i, item := range o.Items {
		toSerialize[i] = item
	}
	return json.Marshal(toSerialize)
}

func (o *TickerList) UnmarshalJSON(bytes []byte) (err error) {
	return json.Unmarshal(bytes, &o.Items)
}

type NullableTickerList struct {
	value *TickerList
	isSet bool
}

func (v NullableTickerList) Get() *TickerList {
	return v.value
}

func (v *NullableTickerList) Set(val *TickerList) {
	v.value = val
	v.isSet = true
}

func (v NullableTickerList) IsSet() bool {
	return v.isSet
}

func (v *NullableTickerList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTickerList(val *TickerList) *NullableTickerList {
	return &NullableTickerList{value: val, isSet: true}
}

func (v NullableTickerList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTickerList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
