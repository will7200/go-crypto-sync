/*
 * CoinEx API
 *
 * Coinex doesn't have a openapi docs sadville  Open and simple, CoinEx API makes sure that you can build your own trading tools to achieve a more effective trading strategy. CoinEx API is now available for these features:
 *
 * API version: 2021-05-29
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package coinex

import (
	"encoding/json"
)

// AcquireExecutedOrderDetailResponse AcquireExecutedOrderDetail Response Value
type AcquireExecutedOrderDetailResponse struct {
	// executed amount
	Amount *string `json:"amount,omitempty"`
	// executed time
	CreateTime *int64 `json:"create_time,omitempty"`
	// executed value
	DealMoney *string `json:"deal_money,omitempty"`
	// transaction fee
	Fee *string `json:"fee,omitempty"`
	// order no.
	Id *int64 `json:"id,omitempty"`
	// order price
	Price *string `json:"price,omitempty"`
	// order role
	Role *string `json:"role,omitempty"`
}

// NewAcquireExecutedOrderDetailResponse instantiates a new AcquireExecutedOrderDetailResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAcquireExecutedOrderDetailResponse() *AcquireExecutedOrderDetailResponse {
	this := AcquireExecutedOrderDetailResponse{}
	return &this
}

// NewAcquireExecutedOrderDetailResponseWithDefaults instantiates a new AcquireExecutedOrderDetailResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAcquireExecutedOrderDetailResponseWithDefaults() *AcquireExecutedOrderDetailResponse {
	this := AcquireExecutedOrderDetailResponse{}
	return &this
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *AcquireExecutedOrderDetailResponse) GetAmount() string {
	if o == nil || o.Amount == nil {
		var ret string
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AcquireExecutedOrderDetailResponse) GetAmountOk() (*string, bool) {
	if o == nil || o.Amount == nil {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *AcquireExecutedOrderDetailResponse) HasAmount() bool {
	if o != nil && o.Amount != nil {
		return true
	}

	return false
}

// SetAmount gets a reference to the given string and assigns it to the Amount field.
func (o *AcquireExecutedOrderDetailResponse) SetAmount(v string) {
	o.Amount = &v
}

// GetCreateTime returns the CreateTime field value if set, zero value otherwise.
func (o *AcquireExecutedOrderDetailResponse) GetCreateTime() int64 {
	if o == nil || o.CreateTime == nil {
		var ret int64
		return ret
	}
	return *o.CreateTime
}

// GetCreateTimeOk returns a tuple with the CreateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AcquireExecutedOrderDetailResponse) GetCreateTimeOk() (*int64, bool) {
	if o == nil || o.CreateTime == nil {
		return nil, false
	}
	return o.CreateTime, true
}

// HasCreateTime returns a boolean if a field has been set.
func (o *AcquireExecutedOrderDetailResponse) HasCreateTime() bool {
	if o != nil && o.CreateTime != nil {
		return true
	}

	return false
}

// SetCreateTime gets a reference to the given int64 and assigns it to the CreateTime field.
func (o *AcquireExecutedOrderDetailResponse) SetCreateTime(v int64) {
	o.CreateTime = &v
}

// GetDealMoney returns the DealMoney field value if set, zero value otherwise.
func (o *AcquireExecutedOrderDetailResponse) GetDealMoney() string {
	if o == nil || o.DealMoney == nil {
		var ret string
		return ret
	}
	return *o.DealMoney
}

// GetDealMoneyOk returns a tuple with the DealMoney field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AcquireExecutedOrderDetailResponse) GetDealMoneyOk() (*string, bool) {
	if o == nil || o.DealMoney == nil {
		return nil, false
	}
	return o.DealMoney, true
}

// HasDealMoney returns a boolean if a field has been set.
func (o *AcquireExecutedOrderDetailResponse) HasDealMoney() bool {
	if o != nil && o.DealMoney != nil {
		return true
	}

	return false
}

// SetDealMoney gets a reference to the given string and assigns it to the DealMoney field.
func (o *AcquireExecutedOrderDetailResponse) SetDealMoney(v string) {
	o.DealMoney = &v
}

// GetFee returns the Fee field value if set, zero value otherwise.
func (o *AcquireExecutedOrderDetailResponse) GetFee() string {
	if o == nil || o.Fee == nil {
		var ret string
		return ret
	}
	return *o.Fee
}

// GetFeeOk returns a tuple with the Fee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AcquireExecutedOrderDetailResponse) GetFeeOk() (*string, bool) {
	if o == nil || o.Fee == nil {
		return nil, false
	}
	return o.Fee, true
}

// HasFee returns a boolean if a field has been set.
func (o *AcquireExecutedOrderDetailResponse) HasFee() bool {
	if o != nil && o.Fee != nil {
		return true
	}

	return false
}

// SetFee gets a reference to the given string and assigns it to the Fee field.
func (o *AcquireExecutedOrderDetailResponse) SetFee(v string) {
	o.Fee = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AcquireExecutedOrderDetailResponse) GetId() int64 {
	if o == nil || o.Id == nil {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AcquireExecutedOrderDetailResponse) GetIdOk() (*int64, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AcquireExecutedOrderDetailResponse) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *AcquireExecutedOrderDetailResponse) SetId(v int64) {
	o.Id = &v
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *AcquireExecutedOrderDetailResponse) GetPrice() string {
	if o == nil || o.Price == nil {
		var ret string
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AcquireExecutedOrderDetailResponse) GetPriceOk() (*string, bool) {
	if o == nil || o.Price == nil {
		return nil, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *AcquireExecutedOrderDetailResponse) HasPrice() bool {
	if o != nil && o.Price != nil {
		return true
	}

	return false
}

// SetPrice gets a reference to the given string and assigns it to the Price field.
func (o *AcquireExecutedOrderDetailResponse) SetPrice(v string) {
	o.Price = &v
}

// GetRole returns the Role field value if set, zero value otherwise.
func (o *AcquireExecutedOrderDetailResponse) GetRole() string {
	if o == nil || o.Role == nil {
		var ret string
		return ret
	}
	return *o.Role
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AcquireExecutedOrderDetailResponse) GetRoleOk() (*string, bool) {
	if o == nil || o.Role == nil {
		return nil, false
	}
	return o.Role, true
}

// HasRole returns a boolean if a field has been set.
func (o *AcquireExecutedOrderDetailResponse) HasRole() bool {
	if o != nil && o.Role != nil {
		return true
	}

	return false
}

// SetRole gets a reference to the given string and assigns it to the Role field.
func (o *AcquireExecutedOrderDetailResponse) SetRole(v string) {
	o.Role = &v
}

func (o AcquireExecutedOrderDetailResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Amount != nil {
		toSerialize["amount"] = o.Amount
	}
	if o.CreateTime != nil {
		toSerialize["create_time"] = o.CreateTime
	}
	if o.DealMoney != nil {
		toSerialize["deal_money"] = o.DealMoney
	}
	if o.Fee != nil {
		toSerialize["fee"] = o.Fee
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Price != nil {
		toSerialize["price"] = o.Price
	}
	if o.Role != nil {
		toSerialize["role"] = o.Role
	}
	return json.Marshal(toSerialize)
}

type NullableAcquireExecutedOrderDetailResponse struct {
	value *AcquireExecutedOrderDetailResponse
	isSet bool
}

func (v NullableAcquireExecutedOrderDetailResponse) Get() *AcquireExecutedOrderDetailResponse {
	return v.value
}

func (v *NullableAcquireExecutedOrderDetailResponse) Set(val *AcquireExecutedOrderDetailResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableAcquireExecutedOrderDetailResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableAcquireExecutedOrderDetailResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAcquireExecutedOrderDetailResponse(val *AcquireExecutedOrderDetailResponse) *NullableAcquireExecutedOrderDetailResponse {
	return &NullableAcquireExecutedOrderDetailResponse{value: val, isSet: true}
}

func (v NullableAcquireExecutedOrderDetailResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAcquireExecutedOrderDetailResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
