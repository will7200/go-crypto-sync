/*
 * CoinEx API
 *
 * Coinex doesn't have a openapi docs sadville  Open and simple, CoinEx API makes sure that you can build your own trading tools to achieve a more effective trading strategy. CoinEx API is now available for these features:
 *
 * API version: 2021-05-29
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package coinex

import (
	"encoding/json"
)

// AcquireMarginAccountSettingsResponse AcquireMarginAccountSettings Response Value
type AcquireMarginAccountSettingsResponse struct {
	// maximum loan amount
	Amount *string `json:"amount,omitempty"`
	// daily interest rate
	DayRate *string `json:"day_rate,omitempty"`
	// maximum leverage
	Leverage *int64 `json:"leverage,omitempty"`
}

// NewAcquireMarginAccountSettingsResponse instantiates a new AcquireMarginAccountSettingsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAcquireMarginAccountSettingsResponse() *AcquireMarginAccountSettingsResponse {
	this := AcquireMarginAccountSettingsResponse{}
	return &this
}

// NewAcquireMarginAccountSettingsResponseWithDefaults instantiates a new AcquireMarginAccountSettingsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAcquireMarginAccountSettingsResponseWithDefaults() *AcquireMarginAccountSettingsResponse {
	this := AcquireMarginAccountSettingsResponse{}
	return &this
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *AcquireMarginAccountSettingsResponse) GetAmount() string {
	if o == nil || o.Amount == nil {
		var ret string
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AcquireMarginAccountSettingsResponse) GetAmountOk() (*string, bool) {
	if o == nil || o.Amount == nil {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *AcquireMarginAccountSettingsResponse) HasAmount() bool {
	if o != nil && o.Amount != nil {
		return true
	}

	return false
}

// SetAmount gets a reference to the given string and assigns it to the Amount field.
func (o *AcquireMarginAccountSettingsResponse) SetAmount(v string) {
	o.Amount = &v
}

// GetDayRate returns the DayRate field value if set, zero value otherwise.
func (o *AcquireMarginAccountSettingsResponse) GetDayRate() string {
	if o == nil || o.DayRate == nil {
		var ret string
		return ret
	}
	return *o.DayRate
}

// GetDayRateOk returns a tuple with the DayRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AcquireMarginAccountSettingsResponse) GetDayRateOk() (*string, bool) {
	if o == nil || o.DayRate == nil {
		return nil, false
	}
	return o.DayRate, true
}

// HasDayRate returns a boolean if a field has been set.
func (o *AcquireMarginAccountSettingsResponse) HasDayRate() bool {
	if o != nil && o.DayRate != nil {
		return true
	}

	return false
}

// SetDayRate gets a reference to the given string and assigns it to the DayRate field.
func (o *AcquireMarginAccountSettingsResponse) SetDayRate(v string) {
	o.DayRate = &v
}

// GetLeverage returns the Leverage field value if set, zero value otherwise.
func (o *AcquireMarginAccountSettingsResponse) GetLeverage() int64 {
	if o == nil || o.Leverage == nil {
		var ret int64
		return ret
	}
	return *o.Leverage
}

// GetLeverageOk returns a tuple with the Leverage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AcquireMarginAccountSettingsResponse) GetLeverageOk() (*int64, bool) {
	if o == nil || o.Leverage == nil {
		return nil, false
	}
	return o.Leverage, true
}

// HasLeverage returns a boolean if a field has been set.
func (o *AcquireMarginAccountSettingsResponse) HasLeverage() bool {
	if o != nil && o.Leverage != nil {
		return true
	}

	return false
}

// SetLeverage gets a reference to the given int64 and assigns it to the Leverage field.
func (o *AcquireMarginAccountSettingsResponse) SetLeverage(v int64) {
	o.Leverage = &v
}

func (o AcquireMarginAccountSettingsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Amount != nil {
		toSerialize["amount"] = o.Amount
	}
	if o.DayRate != nil {
		toSerialize["day_rate"] = o.DayRate
	}
	if o.Leverage != nil {
		toSerialize["leverage"] = o.Leverage
	}
	return json.Marshal(toSerialize)
}

type NullableAcquireMarginAccountSettingsResponse struct {
	value *AcquireMarginAccountSettingsResponse
	isSet bool
}

func (v NullableAcquireMarginAccountSettingsResponse) Get() *AcquireMarginAccountSettingsResponse {
	return v.value
}

func (v *NullableAcquireMarginAccountSettingsResponse) Set(val *AcquireMarginAccountSettingsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableAcquireMarginAccountSettingsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableAcquireMarginAccountSettingsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAcquireMarginAccountSettingsResponse(val *AcquireMarginAccountSettingsResponse) *NullableAcquireMarginAccountSettingsResponse {
	return &NullableAcquireMarginAccountSettingsResponse{value: val, isSet: true}
}

func (v NullableAcquireMarginAccountSettingsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAcquireMarginAccountSettingsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
