/*
 * CoinEx API
 *
 * Coinex doesn't have a openapi docs sadville  Open and simple, CoinEx API makes sure that you can build your own trading tools to achieve a more effective trading strategy. CoinEx API is now available for these features:
 *
 * API version: 2021-05-29
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package coinex

import (
	"encoding/json"
)

// AcquireUserDealsResponse AcquireUserDeals Response Value
type AcquireUserDealsResponse struct {
	// executed amount
	Amount *string `json:"amount,omitempty"`
	// executed time
	CreateTime *int64 `json:"create_time,omitempty"`
	// executed value
	DealMoney *string `json:"deal_money,omitempty"`
	// transaction fee
	Fee *string `json:"fee,omitempty"`
	// transaction fee asset
	FeeAsset *string `json:"fee_asset,omitempty"`
	// executed id
	Id *int64 `json:"id,omitempty"`
	// order no.
	OrderId *int64 `json:"order_id,omitempty"`
	// order price
	Price *string `json:"price,omitempty"`
	// order role
	Role *string `json:"role,omitempty"`
	// sell:sell;<br>buy:buy
	Type *string `json:"type,omitempty"`
}

// NewAcquireUserDealsResponse instantiates a new AcquireUserDealsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAcquireUserDealsResponse() *AcquireUserDealsResponse {
	this := AcquireUserDealsResponse{}
	return &this
}

// NewAcquireUserDealsResponseWithDefaults instantiates a new AcquireUserDealsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAcquireUserDealsResponseWithDefaults() *AcquireUserDealsResponse {
	this := AcquireUserDealsResponse{}
	return &this
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *AcquireUserDealsResponse) GetAmount() string {
	if o == nil || o.Amount == nil {
		var ret string
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AcquireUserDealsResponse) GetAmountOk() (*string, bool) {
	if o == nil || o.Amount == nil {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *AcquireUserDealsResponse) HasAmount() bool {
	if o != nil && o.Amount != nil {
		return true
	}

	return false
}

// SetAmount gets a reference to the given string and assigns it to the Amount field.
func (o *AcquireUserDealsResponse) SetAmount(v string) {
	o.Amount = &v
}

// GetCreateTime returns the CreateTime field value if set, zero value otherwise.
func (o *AcquireUserDealsResponse) GetCreateTime() int64 {
	if o == nil || o.CreateTime == nil {
		var ret int64
		return ret
	}
	return *o.CreateTime
}

// GetCreateTimeOk returns a tuple with the CreateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AcquireUserDealsResponse) GetCreateTimeOk() (*int64, bool) {
	if o == nil || o.CreateTime == nil {
		return nil, false
	}
	return o.CreateTime, true
}

// HasCreateTime returns a boolean if a field has been set.
func (o *AcquireUserDealsResponse) HasCreateTime() bool {
	if o != nil && o.CreateTime != nil {
		return true
	}

	return false
}

// SetCreateTime gets a reference to the given int64 and assigns it to the CreateTime field.
func (o *AcquireUserDealsResponse) SetCreateTime(v int64) {
	o.CreateTime = &v
}

// GetDealMoney returns the DealMoney field value if set, zero value otherwise.
func (o *AcquireUserDealsResponse) GetDealMoney() string {
	if o == nil || o.DealMoney == nil {
		var ret string
		return ret
	}
	return *o.DealMoney
}

// GetDealMoneyOk returns a tuple with the DealMoney field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AcquireUserDealsResponse) GetDealMoneyOk() (*string, bool) {
	if o == nil || o.DealMoney == nil {
		return nil, false
	}
	return o.DealMoney, true
}

// HasDealMoney returns a boolean if a field has been set.
func (o *AcquireUserDealsResponse) HasDealMoney() bool {
	if o != nil && o.DealMoney != nil {
		return true
	}

	return false
}

// SetDealMoney gets a reference to the given string and assigns it to the DealMoney field.
func (o *AcquireUserDealsResponse) SetDealMoney(v string) {
	o.DealMoney = &v
}

// GetFee returns the Fee field value if set, zero value otherwise.
func (o *AcquireUserDealsResponse) GetFee() string {
	if o == nil || o.Fee == nil {
		var ret string
		return ret
	}
	return *o.Fee
}

// GetFeeOk returns a tuple with the Fee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AcquireUserDealsResponse) GetFeeOk() (*string, bool) {
	if o == nil || o.Fee == nil {
		return nil, false
	}
	return o.Fee, true
}

// HasFee returns a boolean if a field has been set.
func (o *AcquireUserDealsResponse) HasFee() bool {
	if o != nil && o.Fee != nil {
		return true
	}

	return false
}

// SetFee gets a reference to the given string and assigns it to the Fee field.
func (o *AcquireUserDealsResponse) SetFee(v string) {
	o.Fee = &v
}

// GetFeeAsset returns the FeeAsset field value if set, zero value otherwise.
func (o *AcquireUserDealsResponse) GetFeeAsset() string {
	if o == nil || o.FeeAsset == nil {
		var ret string
		return ret
	}
	return *o.FeeAsset
}

// GetFeeAssetOk returns a tuple with the FeeAsset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AcquireUserDealsResponse) GetFeeAssetOk() (*string, bool) {
	if o == nil || o.FeeAsset == nil {
		return nil, false
	}
	return o.FeeAsset, true
}

// HasFeeAsset returns a boolean if a field has been set.
func (o *AcquireUserDealsResponse) HasFeeAsset() bool {
	if o != nil && o.FeeAsset != nil {
		return true
	}

	return false
}

// SetFeeAsset gets a reference to the given string and assigns it to the FeeAsset field.
func (o *AcquireUserDealsResponse) SetFeeAsset(v string) {
	o.FeeAsset = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AcquireUserDealsResponse) GetId() int64 {
	if o == nil || o.Id == nil {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AcquireUserDealsResponse) GetIdOk() (*int64, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AcquireUserDealsResponse) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *AcquireUserDealsResponse) SetId(v int64) {
	o.Id = &v
}

// GetOrderId returns the OrderId field value if set, zero value otherwise.
func (o *AcquireUserDealsResponse) GetOrderId() int64 {
	if o == nil || o.OrderId == nil {
		var ret int64
		return ret
	}
	return *o.OrderId
}

// GetOrderIdOk returns a tuple with the OrderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AcquireUserDealsResponse) GetOrderIdOk() (*int64, bool) {
	if o == nil || o.OrderId == nil {
		return nil, false
	}
	return o.OrderId, true
}

// HasOrderId returns a boolean if a field has been set.
func (o *AcquireUserDealsResponse) HasOrderId() bool {
	if o != nil && o.OrderId != nil {
		return true
	}

	return false
}

// SetOrderId gets a reference to the given int64 and assigns it to the OrderId field.
func (o *AcquireUserDealsResponse) SetOrderId(v int64) {
	o.OrderId = &v
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *AcquireUserDealsResponse) GetPrice() string {
	if o == nil || o.Price == nil {
		var ret string
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AcquireUserDealsResponse) GetPriceOk() (*string, bool) {
	if o == nil || o.Price == nil {
		return nil, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *AcquireUserDealsResponse) HasPrice() bool {
	if o != nil && o.Price != nil {
		return true
	}

	return false
}

// SetPrice gets a reference to the given string and assigns it to the Price field.
func (o *AcquireUserDealsResponse) SetPrice(v string) {
	o.Price = &v
}

// GetRole returns the Role field value if set, zero value otherwise.
func (o *AcquireUserDealsResponse) GetRole() string {
	if o == nil || o.Role == nil {
		var ret string
		return ret
	}
	return *o.Role
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AcquireUserDealsResponse) GetRoleOk() (*string, bool) {
	if o == nil || o.Role == nil {
		return nil, false
	}
	return o.Role, true
}

// HasRole returns a boolean if a field has been set.
func (o *AcquireUserDealsResponse) HasRole() bool {
	if o != nil && o.Role != nil {
		return true
	}

	return false
}

// SetRole gets a reference to the given string and assigns it to the Role field.
func (o *AcquireUserDealsResponse) SetRole(v string) {
	o.Role = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *AcquireUserDealsResponse) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AcquireUserDealsResponse) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *AcquireUserDealsResponse) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *AcquireUserDealsResponse) SetType(v string) {
	o.Type = &v
}

func (o AcquireUserDealsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Amount != nil {
		toSerialize["amount"] = o.Amount
	}
	if o.CreateTime != nil {
		toSerialize["create_time"] = o.CreateTime
	}
	if o.DealMoney != nil {
		toSerialize["deal_money"] = o.DealMoney
	}
	if o.Fee != nil {
		toSerialize["fee"] = o.Fee
	}
	if o.FeeAsset != nil {
		toSerialize["fee_asset"] = o.FeeAsset
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.OrderId != nil {
		toSerialize["order_id"] = o.OrderId
	}
	if o.Price != nil {
		toSerialize["price"] = o.Price
	}
	if o.Role != nil {
		toSerialize["role"] = o.Role
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableAcquireUserDealsResponse struct {
	value *AcquireUserDealsResponse
	isSet bool
}

func (v NullableAcquireUserDealsResponse) Get() *AcquireUserDealsResponse {
	return v.value
}

func (v *NullableAcquireUserDealsResponse) Set(val *AcquireUserDealsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableAcquireUserDealsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableAcquireUserDealsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAcquireUserDealsResponse(val *AcquireUserDealsResponse) *NullableAcquireUserDealsResponse {
	return &NullableAcquireUserDealsResponse{value: val, isSet: true}
}

func (v NullableAcquireUserDealsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAcquireUserDealsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
