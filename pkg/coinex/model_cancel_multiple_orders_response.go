/*
 * CoinEx API
 *
 * Coinex doesn't have a openapi docs sadville  Open and simple, CoinEx API makes sure that you can build your own trading tools to achieve a more effective trading strategy. CoinEx API is now available for these features:
 *
 * API version: 2021-05-29
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package coinex

import (
	"encoding/json"
)

// CancelMultipleOrdersResponse CancelMultipleOrders Response Value
type CancelMultipleOrdersResponse struct {
	// order count
	Amount *string `json:"amount,omitempty"`
	// average price
	AvgPrice *string `json:"avg_price,omitempty"`
	// time when placing order
	CreateTime *int64 `json:"create_time,omitempty"`
	// count
	DealAmount *string `json:"deal_amount,omitempty"`
	// transaction fee
	DealFee *string `json:"deal_fee,omitempty"`
	// executed value
	DealMoney *string `json:"deal_money,omitempty"`
	// complete time
	FinishedTime *int64 `json:"finished_time,omitempty"`
	// Order No.
	Id *int64 `json:"id,omitempty"`
	// maker fee
	MakerFeeRate *string `json:"maker_fee_rate,omitempty"`
	// See <API invocation description market>
	Market *string `json:"market,omitempty"`
	// limit:limit order;<br>market:market order;
	OrderType *string `json:"order_type,omitempty"`
	// order price
	Price *string `json:"price,omitempty"`
	// cancel: unexecuted;<br>part\\_deal: partly executed;<br>done: executed;
	Status *string `json:"status,omitempty"`
	// taker fee
	TakerFeeRate *string `json:"taker_fee_rate,omitempty"`
	// sell: sell order;<br>buy: buy order;
	Type *string `json:"type,omitempty"`
	// order client id
	ClientId *string `json:"client_id,omitempty"`
}

// NewCancelMultipleOrdersResponse instantiates a new CancelMultipleOrdersResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCancelMultipleOrdersResponse() *CancelMultipleOrdersResponse {
	this := CancelMultipleOrdersResponse{}
	return &this
}

// NewCancelMultipleOrdersResponseWithDefaults instantiates a new CancelMultipleOrdersResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCancelMultipleOrdersResponseWithDefaults() *CancelMultipleOrdersResponse {
	this := CancelMultipleOrdersResponse{}
	return &this
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *CancelMultipleOrdersResponse) GetAmount() string {
	if o == nil || o.Amount == nil {
		var ret string
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CancelMultipleOrdersResponse) GetAmountOk() (*string, bool) {
	if o == nil || o.Amount == nil {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *CancelMultipleOrdersResponse) HasAmount() bool {
	if o != nil && o.Amount != nil {
		return true
	}

	return false
}

// SetAmount gets a reference to the given string and assigns it to the Amount field.
func (o *CancelMultipleOrdersResponse) SetAmount(v string) {
	o.Amount = &v
}

// GetAvgPrice returns the AvgPrice field value if set, zero value otherwise.
func (o *CancelMultipleOrdersResponse) GetAvgPrice() string {
	if o == nil || o.AvgPrice == nil {
		var ret string
		return ret
	}
	return *o.AvgPrice
}

// GetAvgPriceOk returns a tuple with the AvgPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CancelMultipleOrdersResponse) GetAvgPriceOk() (*string, bool) {
	if o == nil || o.AvgPrice == nil {
		return nil, false
	}
	return o.AvgPrice, true
}

// HasAvgPrice returns a boolean if a field has been set.
func (o *CancelMultipleOrdersResponse) HasAvgPrice() bool {
	if o != nil && o.AvgPrice != nil {
		return true
	}

	return false
}

// SetAvgPrice gets a reference to the given string and assigns it to the AvgPrice field.
func (o *CancelMultipleOrdersResponse) SetAvgPrice(v string) {
	o.AvgPrice = &v
}

// GetCreateTime returns the CreateTime field value if set, zero value otherwise.
func (o *CancelMultipleOrdersResponse) GetCreateTime() int64 {
	if o == nil || o.CreateTime == nil {
		var ret int64
		return ret
	}
	return *o.CreateTime
}

// GetCreateTimeOk returns a tuple with the CreateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CancelMultipleOrdersResponse) GetCreateTimeOk() (*int64, bool) {
	if o == nil || o.CreateTime == nil {
		return nil, false
	}
	return o.CreateTime, true
}

// HasCreateTime returns a boolean if a field has been set.
func (o *CancelMultipleOrdersResponse) HasCreateTime() bool {
	if o != nil && o.CreateTime != nil {
		return true
	}

	return false
}

// SetCreateTime gets a reference to the given int64 and assigns it to the CreateTime field.
func (o *CancelMultipleOrdersResponse) SetCreateTime(v int64) {
	o.CreateTime = &v
}

// GetDealAmount returns the DealAmount field value if set, zero value otherwise.
func (o *CancelMultipleOrdersResponse) GetDealAmount() string {
	if o == nil || o.DealAmount == nil {
		var ret string
		return ret
	}
	return *o.DealAmount
}

// GetDealAmountOk returns a tuple with the DealAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CancelMultipleOrdersResponse) GetDealAmountOk() (*string, bool) {
	if o == nil || o.DealAmount == nil {
		return nil, false
	}
	return o.DealAmount, true
}

// HasDealAmount returns a boolean if a field has been set.
func (o *CancelMultipleOrdersResponse) HasDealAmount() bool {
	if o != nil && o.DealAmount != nil {
		return true
	}

	return false
}

// SetDealAmount gets a reference to the given string and assigns it to the DealAmount field.
func (o *CancelMultipleOrdersResponse) SetDealAmount(v string) {
	o.DealAmount = &v
}

// GetDealFee returns the DealFee field value if set, zero value otherwise.
func (o *CancelMultipleOrdersResponse) GetDealFee() string {
	if o == nil || o.DealFee == nil {
		var ret string
		return ret
	}
	return *o.DealFee
}

// GetDealFeeOk returns a tuple with the DealFee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CancelMultipleOrdersResponse) GetDealFeeOk() (*string, bool) {
	if o == nil || o.DealFee == nil {
		return nil, false
	}
	return o.DealFee, true
}

// HasDealFee returns a boolean if a field has been set.
func (o *CancelMultipleOrdersResponse) HasDealFee() bool {
	if o != nil && o.DealFee != nil {
		return true
	}

	return false
}

// SetDealFee gets a reference to the given string and assigns it to the DealFee field.
func (o *CancelMultipleOrdersResponse) SetDealFee(v string) {
	o.DealFee = &v
}

// GetDealMoney returns the DealMoney field value if set, zero value otherwise.
func (o *CancelMultipleOrdersResponse) GetDealMoney() string {
	if o == nil || o.DealMoney == nil {
		var ret string
		return ret
	}
	return *o.DealMoney
}

// GetDealMoneyOk returns a tuple with the DealMoney field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CancelMultipleOrdersResponse) GetDealMoneyOk() (*string, bool) {
	if o == nil || o.DealMoney == nil {
		return nil, false
	}
	return o.DealMoney, true
}

// HasDealMoney returns a boolean if a field has been set.
func (o *CancelMultipleOrdersResponse) HasDealMoney() bool {
	if o != nil && o.DealMoney != nil {
		return true
	}

	return false
}

// SetDealMoney gets a reference to the given string and assigns it to the DealMoney field.
func (o *CancelMultipleOrdersResponse) SetDealMoney(v string) {
	o.DealMoney = &v
}

// GetFinishedTime returns the FinishedTime field value if set, zero value otherwise.
func (o *CancelMultipleOrdersResponse) GetFinishedTime() int64 {
	if o == nil || o.FinishedTime == nil {
		var ret int64
		return ret
	}
	return *o.FinishedTime
}

// GetFinishedTimeOk returns a tuple with the FinishedTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CancelMultipleOrdersResponse) GetFinishedTimeOk() (*int64, bool) {
	if o == nil || o.FinishedTime == nil {
		return nil, false
	}
	return o.FinishedTime, true
}

// HasFinishedTime returns a boolean if a field has been set.
func (o *CancelMultipleOrdersResponse) HasFinishedTime() bool {
	if o != nil && o.FinishedTime != nil {
		return true
	}

	return false
}

// SetFinishedTime gets a reference to the given int64 and assigns it to the FinishedTime field.
func (o *CancelMultipleOrdersResponse) SetFinishedTime(v int64) {
	o.FinishedTime = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CancelMultipleOrdersResponse) GetId() int64 {
	if o == nil || o.Id == nil {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CancelMultipleOrdersResponse) GetIdOk() (*int64, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CancelMultipleOrdersResponse) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *CancelMultipleOrdersResponse) SetId(v int64) {
	o.Id = &v
}

// GetMakerFeeRate returns the MakerFeeRate field value if set, zero value otherwise.
func (o *CancelMultipleOrdersResponse) GetMakerFeeRate() string {
	if o == nil || o.MakerFeeRate == nil {
		var ret string
		return ret
	}
	return *o.MakerFeeRate
}

// GetMakerFeeRateOk returns a tuple with the MakerFeeRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CancelMultipleOrdersResponse) GetMakerFeeRateOk() (*string, bool) {
	if o == nil || o.MakerFeeRate == nil {
		return nil, false
	}
	return o.MakerFeeRate, true
}

// HasMakerFeeRate returns a boolean if a field has been set.
func (o *CancelMultipleOrdersResponse) HasMakerFeeRate() bool {
	if o != nil && o.MakerFeeRate != nil {
		return true
	}

	return false
}

// SetMakerFeeRate gets a reference to the given string and assigns it to the MakerFeeRate field.
func (o *CancelMultipleOrdersResponse) SetMakerFeeRate(v string) {
	o.MakerFeeRate = &v
}

// GetMarket returns the Market field value if set, zero value otherwise.
func (o *CancelMultipleOrdersResponse) GetMarket() string {
	if o == nil || o.Market == nil {
		var ret string
		return ret
	}
	return *o.Market
}

// GetMarketOk returns a tuple with the Market field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CancelMultipleOrdersResponse) GetMarketOk() (*string, bool) {
	if o == nil || o.Market == nil {
		return nil, false
	}
	return o.Market, true
}

// HasMarket returns a boolean if a field has been set.
func (o *CancelMultipleOrdersResponse) HasMarket() bool {
	if o != nil && o.Market != nil {
		return true
	}

	return false
}

// SetMarket gets a reference to the given string and assigns it to the Market field.
func (o *CancelMultipleOrdersResponse) SetMarket(v string) {
	o.Market = &v
}

// GetOrderType returns the OrderType field value if set, zero value otherwise.
func (o *CancelMultipleOrdersResponse) GetOrderType() string {
	if o == nil || o.OrderType == nil {
		var ret string
		return ret
	}
	return *o.OrderType
}

// GetOrderTypeOk returns a tuple with the OrderType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CancelMultipleOrdersResponse) GetOrderTypeOk() (*string, bool) {
	if o == nil || o.OrderType == nil {
		return nil, false
	}
	return o.OrderType, true
}

// HasOrderType returns a boolean if a field has been set.
func (o *CancelMultipleOrdersResponse) HasOrderType() bool {
	if o != nil && o.OrderType != nil {
		return true
	}

	return false
}

// SetOrderType gets a reference to the given string and assigns it to the OrderType field.
func (o *CancelMultipleOrdersResponse) SetOrderType(v string) {
	o.OrderType = &v
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *CancelMultipleOrdersResponse) GetPrice() string {
	if o == nil || o.Price == nil {
		var ret string
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CancelMultipleOrdersResponse) GetPriceOk() (*string, bool) {
	if o == nil || o.Price == nil {
		return nil, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *CancelMultipleOrdersResponse) HasPrice() bool {
	if o != nil && o.Price != nil {
		return true
	}

	return false
}

// SetPrice gets a reference to the given string and assigns it to the Price field.
func (o *CancelMultipleOrdersResponse) SetPrice(v string) {
	o.Price = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *CancelMultipleOrdersResponse) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CancelMultipleOrdersResponse) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *CancelMultipleOrdersResponse) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *CancelMultipleOrdersResponse) SetStatus(v string) {
	o.Status = &v
}

// GetTakerFeeRate returns the TakerFeeRate field value if set, zero value otherwise.
func (o *CancelMultipleOrdersResponse) GetTakerFeeRate() string {
	if o == nil || o.TakerFeeRate == nil {
		var ret string
		return ret
	}
	return *o.TakerFeeRate
}

// GetTakerFeeRateOk returns a tuple with the TakerFeeRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CancelMultipleOrdersResponse) GetTakerFeeRateOk() (*string, bool) {
	if o == nil || o.TakerFeeRate == nil {
		return nil, false
	}
	return o.TakerFeeRate, true
}

// HasTakerFeeRate returns a boolean if a field has been set.
func (o *CancelMultipleOrdersResponse) HasTakerFeeRate() bool {
	if o != nil && o.TakerFeeRate != nil {
		return true
	}

	return false
}

// SetTakerFeeRate gets a reference to the given string and assigns it to the TakerFeeRate field.
func (o *CancelMultipleOrdersResponse) SetTakerFeeRate(v string) {
	o.TakerFeeRate = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *CancelMultipleOrdersResponse) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CancelMultipleOrdersResponse) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *CancelMultipleOrdersResponse) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *CancelMultipleOrdersResponse) SetType(v string) {
	o.Type = &v
}

// GetClientId returns the ClientId field value if set, zero value otherwise.
func (o *CancelMultipleOrdersResponse) GetClientId() string {
	if o == nil || o.ClientId == nil {
		var ret string
		return ret
	}
	return *o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CancelMultipleOrdersResponse) GetClientIdOk() (*string, bool) {
	if o == nil || o.ClientId == nil {
		return nil, false
	}
	return o.ClientId, true
}

// HasClientId returns a boolean if a field has been set.
func (o *CancelMultipleOrdersResponse) HasClientId() bool {
	if o != nil && o.ClientId != nil {
		return true
	}

	return false
}

// SetClientId gets a reference to the given string and assigns it to the ClientId field.
func (o *CancelMultipleOrdersResponse) SetClientId(v string) {
	o.ClientId = &v
}

func (o CancelMultipleOrdersResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Amount != nil {
		toSerialize["amount"] = o.Amount
	}
	if o.AvgPrice != nil {
		toSerialize["avg_price"] = o.AvgPrice
	}
	if o.CreateTime != nil {
		toSerialize["create_time"] = o.CreateTime
	}
	if o.DealAmount != nil {
		toSerialize["deal_amount"] = o.DealAmount
	}
	if o.DealFee != nil {
		toSerialize["deal_fee"] = o.DealFee
	}
	if o.DealMoney != nil {
		toSerialize["deal_money"] = o.DealMoney
	}
	if o.FinishedTime != nil {
		toSerialize["finished_time"] = o.FinishedTime
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.MakerFeeRate != nil {
		toSerialize["maker_fee_rate"] = o.MakerFeeRate
	}
	if o.Market != nil {
		toSerialize["market"] = o.Market
	}
	if o.OrderType != nil {
		toSerialize["order_type"] = o.OrderType
	}
	if o.Price != nil {
		toSerialize["price"] = o.Price
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.TakerFeeRate != nil {
		toSerialize["taker_fee_rate"] = o.TakerFeeRate
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.ClientId != nil {
		toSerialize["client_id"] = o.ClientId
	}
	return json.Marshal(toSerialize)
}

type NullableCancelMultipleOrdersResponse struct {
	value *CancelMultipleOrdersResponse
	isSet bool
}

func (v NullableCancelMultipleOrdersResponse) Get() *CancelMultipleOrdersResponse {
	return v.value
}

func (v *NullableCancelMultipleOrdersResponse) Set(val *CancelMultipleOrdersResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCancelMultipleOrdersResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCancelMultipleOrdersResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCancelMultipleOrdersResponse(val *CancelMultipleOrdersResponse) *NullableCancelMultipleOrdersResponse {
	return &NullableCancelMultipleOrdersResponse{value: val, isSet: true}
}

func (v NullableCancelMultipleOrdersResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCancelMultipleOrdersResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
