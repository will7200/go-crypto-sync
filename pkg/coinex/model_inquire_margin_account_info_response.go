/*
 * CoinEx API
 *
 * Coinex doesn't have a openapi docs sadville  Open and simple, CoinEx API makes sure that you can build your own trading tools to achieve a more effective trading strategy. CoinEx API is now available for these features:
 *
 * API version: 2021-05-29
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package coinex

import (
	"encoding/json"
)

// InquireMarginAccountInfoResponse InquireMarginAccountInfo Response Value
type InquireMarginAccountInfoResponse struct {
	// market account ID, See <  Inquire Margin Account Market Info>
	AccountId *int64 `json:"account_id,omitempty"`
	// maximum leverage
	Leverage *int64 `json:"leverage,omitempty"`
	// <API invocation description market>
	MarketType *string `json:"market_type,omitempty"`
	// sell coin name, equal \"sell_type\"
	SellAssetType *string `json:"sell_asset_type,omitempty"`
	// buy coin name, equal \"buy_type\"
	BuyAssetType *string `json:"buy_asset_type,omitempty"`
	// balance
	Balance *map[string]interface{} `json:"balance,omitempty"`
	// amount frozen(not available)
	Frozen *map[string]interface{} `json:"frozen,omitempty"`
	// amount loaned info
	Loan *map[string]interface{} `json:"loan,omitempty"`
	// interest info
	Interest *map[string]interface{} `json:"interest,omitempty"`
	// available transfer amount
	CanTransfer *map[string]interface{} `json:"can_transfer,omitempty"`
	// warn rate
	WarnRate *string `json:"warn_rate,omitempty"`
	// burst price
	LiquidationPrice *string `json:"liquidation_price,omitempty"`
}

// NewInquireMarginAccountInfoResponse instantiates a new InquireMarginAccountInfoResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInquireMarginAccountInfoResponse() *InquireMarginAccountInfoResponse {
	this := InquireMarginAccountInfoResponse{}
	return &this
}

// NewInquireMarginAccountInfoResponseWithDefaults instantiates a new InquireMarginAccountInfoResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInquireMarginAccountInfoResponseWithDefaults() *InquireMarginAccountInfoResponse {
	this := InquireMarginAccountInfoResponse{}
	return &this
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *InquireMarginAccountInfoResponse) GetAccountId() int64 {
	if o == nil || o.AccountId == nil {
		var ret int64
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InquireMarginAccountInfoResponse) GetAccountIdOk() (*int64, bool) {
	if o == nil || o.AccountId == nil {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *InquireMarginAccountInfoResponse) HasAccountId() bool {
	if o != nil && o.AccountId != nil {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given int64 and assigns it to the AccountId field.
func (o *InquireMarginAccountInfoResponse) SetAccountId(v int64) {
	o.AccountId = &v
}

// GetLeverage returns the Leverage field value if set, zero value otherwise.
func (o *InquireMarginAccountInfoResponse) GetLeverage() int64 {
	if o == nil || o.Leverage == nil {
		var ret int64
		return ret
	}
	return *o.Leverage
}

// GetLeverageOk returns a tuple with the Leverage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InquireMarginAccountInfoResponse) GetLeverageOk() (*int64, bool) {
	if o == nil || o.Leverage == nil {
		return nil, false
	}
	return o.Leverage, true
}

// HasLeverage returns a boolean if a field has been set.
func (o *InquireMarginAccountInfoResponse) HasLeverage() bool {
	if o != nil && o.Leverage != nil {
		return true
	}

	return false
}

// SetLeverage gets a reference to the given int64 and assigns it to the Leverage field.
func (o *InquireMarginAccountInfoResponse) SetLeverage(v int64) {
	o.Leverage = &v
}

// GetMarketType returns the MarketType field value if set, zero value otherwise.
func (o *InquireMarginAccountInfoResponse) GetMarketType() string {
	if o == nil || o.MarketType == nil {
		var ret string
		return ret
	}
	return *o.MarketType
}

// GetMarketTypeOk returns a tuple with the MarketType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InquireMarginAccountInfoResponse) GetMarketTypeOk() (*string, bool) {
	if o == nil || o.MarketType == nil {
		return nil, false
	}
	return o.MarketType, true
}

// HasMarketType returns a boolean if a field has been set.
func (o *InquireMarginAccountInfoResponse) HasMarketType() bool {
	if o != nil && o.MarketType != nil {
		return true
	}

	return false
}

// SetMarketType gets a reference to the given string and assigns it to the MarketType field.
func (o *InquireMarginAccountInfoResponse) SetMarketType(v string) {
	o.MarketType = &v
}

// GetSellAssetType returns the SellAssetType field value if set, zero value otherwise.
func (o *InquireMarginAccountInfoResponse) GetSellAssetType() string {
	if o == nil || o.SellAssetType == nil {
		var ret string
		return ret
	}
	return *o.SellAssetType
}

// GetSellAssetTypeOk returns a tuple with the SellAssetType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InquireMarginAccountInfoResponse) GetSellAssetTypeOk() (*string, bool) {
	if o == nil || o.SellAssetType == nil {
		return nil, false
	}
	return o.SellAssetType, true
}

// HasSellAssetType returns a boolean if a field has been set.
func (o *InquireMarginAccountInfoResponse) HasSellAssetType() bool {
	if o != nil && o.SellAssetType != nil {
		return true
	}

	return false
}

// SetSellAssetType gets a reference to the given string and assigns it to the SellAssetType field.
func (o *InquireMarginAccountInfoResponse) SetSellAssetType(v string) {
	o.SellAssetType = &v
}

// GetBuyAssetType returns the BuyAssetType field value if set, zero value otherwise.
func (o *InquireMarginAccountInfoResponse) GetBuyAssetType() string {
	if o == nil || o.BuyAssetType == nil {
		var ret string
		return ret
	}
	return *o.BuyAssetType
}

// GetBuyAssetTypeOk returns a tuple with the BuyAssetType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InquireMarginAccountInfoResponse) GetBuyAssetTypeOk() (*string, bool) {
	if o == nil || o.BuyAssetType == nil {
		return nil, false
	}
	return o.BuyAssetType, true
}

// HasBuyAssetType returns a boolean if a field has been set.
func (o *InquireMarginAccountInfoResponse) HasBuyAssetType() bool {
	if o != nil && o.BuyAssetType != nil {
		return true
	}

	return false
}

// SetBuyAssetType gets a reference to the given string and assigns it to the BuyAssetType field.
func (o *InquireMarginAccountInfoResponse) SetBuyAssetType(v string) {
	o.BuyAssetType = &v
}

// GetBalance returns the Balance field value if set, zero value otherwise.
func (o *InquireMarginAccountInfoResponse) GetBalance() map[string]interface{} {
	if o == nil || o.Balance == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.Balance
}

// GetBalanceOk returns a tuple with the Balance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InquireMarginAccountInfoResponse) GetBalanceOk() (*map[string]interface{}, bool) {
	if o == nil || o.Balance == nil {
		return nil, false
	}
	return o.Balance, true
}

// HasBalance returns a boolean if a field has been set.
func (o *InquireMarginAccountInfoResponse) HasBalance() bool {
	if o != nil && o.Balance != nil {
		return true
	}

	return false
}

// SetBalance gets a reference to the given map[string]interface{} and assigns it to the Balance field.
func (o *InquireMarginAccountInfoResponse) SetBalance(v map[string]interface{}) {
	o.Balance = &v
}

// GetFrozen returns the Frozen field value if set, zero value otherwise.
func (o *InquireMarginAccountInfoResponse) GetFrozen() map[string]interface{} {
	if o == nil || o.Frozen == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.Frozen
}

// GetFrozenOk returns a tuple with the Frozen field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InquireMarginAccountInfoResponse) GetFrozenOk() (*map[string]interface{}, bool) {
	if o == nil || o.Frozen == nil {
		return nil, false
	}
	return o.Frozen, true
}

// HasFrozen returns a boolean if a field has been set.
func (o *InquireMarginAccountInfoResponse) HasFrozen() bool {
	if o != nil && o.Frozen != nil {
		return true
	}

	return false
}

// SetFrozen gets a reference to the given map[string]interface{} and assigns it to the Frozen field.
func (o *InquireMarginAccountInfoResponse) SetFrozen(v map[string]interface{}) {
	o.Frozen = &v
}

// GetLoan returns the Loan field value if set, zero value otherwise.
func (o *InquireMarginAccountInfoResponse) GetLoan() map[string]interface{} {
	if o == nil || o.Loan == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.Loan
}

// GetLoanOk returns a tuple with the Loan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InquireMarginAccountInfoResponse) GetLoanOk() (*map[string]interface{}, bool) {
	if o == nil || o.Loan == nil {
		return nil, false
	}
	return o.Loan, true
}

// HasLoan returns a boolean if a field has been set.
func (o *InquireMarginAccountInfoResponse) HasLoan() bool {
	if o != nil && o.Loan != nil {
		return true
	}

	return false
}

// SetLoan gets a reference to the given map[string]interface{} and assigns it to the Loan field.
func (o *InquireMarginAccountInfoResponse) SetLoan(v map[string]interface{}) {
	o.Loan = &v
}

// GetInterest returns the Interest field value if set, zero value otherwise.
func (o *InquireMarginAccountInfoResponse) GetInterest() map[string]interface{} {
	if o == nil || o.Interest == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.Interest
}

// GetInterestOk returns a tuple with the Interest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InquireMarginAccountInfoResponse) GetInterestOk() (*map[string]interface{}, bool) {
	if o == nil || o.Interest == nil {
		return nil, false
	}
	return o.Interest, true
}

// HasInterest returns a boolean if a field has been set.
func (o *InquireMarginAccountInfoResponse) HasInterest() bool {
	if o != nil && o.Interest != nil {
		return true
	}

	return false
}

// SetInterest gets a reference to the given map[string]interface{} and assigns it to the Interest field.
func (o *InquireMarginAccountInfoResponse) SetInterest(v map[string]interface{}) {
	o.Interest = &v
}

// GetCanTransfer returns the CanTransfer field value if set, zero value otherwise.
func (o *InquireMarginAccountInfoResponse) GetCanTransfer() map[string]interface{} {
	if o == nil || o.CanTransfer == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.CanTransfer
}

// GetCanTransferOk returns a tuple with the CanTransfer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InquireMarginAccountInfoResponse) GetCanTransferOk() (*map[string]interface{}, bool) {
	if o == nil || o.CanTransfer == nil {
		return nil, false
	}
	return o.CanTransfer, true
}

// HasCanTransfer returns a boolean if a field has been set.
func (o *InquireMarginAccountInfoResponse) HasCanTransfer() bool {
	if o != nil && o.CanTransfer != nil {
		return true
	}

	return false
}

// SetCanTransfer gets a reference to the given map[string]interface{} and assigns it to the CanTransfer field.
func (o *InquireMarginAccountInfoResponse) SetCanTransfer(v map[string]interface{}) {
	o.CanTransfer = &v
}

// GetWarnRate returns the WarnRate field value if set, zero value otherwise.
func (o *InquireMarginAccountInfoResponse) GetWarnRate() string {
	if o == nil || o.WarnRate == nil {
		var ret string
		return ret
	}
	return *o.WarnRate
}

// GetWarnRateOk returns a tuple with the WarnRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InquireMarginAccountInfoResponse) GetWarnRateOk() (*string, bool) {
	if o == nil || o.WarnRate == nil {
		return nil, false
	}
	return o.WarnRate, true
}

// HasWarnRate returns a boolean if a field has been set.
func (o *InquireMarginAccountInfoResponse) HasWarnRate() bool {
	if o != nil && o.WarnRate != nil {
		return true
	}

	return false
}

// SetWarnRate gets a reference to the given string and assigns it to the WarnRate field.
func (o *InquireMarginAccountInfoResponse) SetWarnRate(v string) {
	o.WarnRate = &v
}

// GetLiquidationPrice returns the LiquidationPrice field value if set, zero value otherwise.
func (o *InquireMarginAccountInfoResponse) GetLiquidationPrice() string {
	if o == nil || o.LiquidationPrice == nil {
		var ret string
		return ret
	}
	return *o.LiquidationPrice
}

// GetLiquidationPriceOk returns a tuple with the LiquidationPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InquireMarginAccountInfoResponse) GetLiquidationPriceOk() (*string, bool) {
	if o == nil || o.LiquidationPrice == nil {
		return nil, false
	}
	return o.LiquidationPrice, true
}

// HasLiquidationPrice returns a boolean if a field has been set.
func (o *InquireMarginAccountInfoResponse) HasLiquidationPrice() bool {
	if o != nil && o.LiquidationPrice != nil {
		return true
	}

	return false
}

// SetLiquidationPrice gets a reference to the given string and assigns it to the LiquidationPrice field.
func (o *InquireMarginAccountInfoResponse) SetLiquidationPrice(v string) {
	o.LiquidationPrice = &v
}

func (o InquireMarginAccountInfoResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AccountId != nil {
		toSerialize["account_id"] = o.AccountId
	}
	if o.Leverage != nil {
		toSerialize["leverage"] = o.Leverage
	}
	if o.MarketType != nil {
		toSerialize["market_type"] = o.MarketType
	}
	if o.SellAssetType != nil {
		toSerialize["sell_asset_type"] = o.SellAssetType
	}
	if o.BuyAssetType != nil {
		toSerialize["buy_asset_type"] = o.BuyAssetType
	}
	if o.Balance != nil {
		toSerialize["balance"] = o.Balance
	}
	if o.Frozen != nil {
		toSerialize["frozen"] = o.Frozen
	}
	if o.Loan != nil {
		toSerialize["loan"] = o.Loan
	}
	if o.Interest != nil {
		toSerialize["interest"] = o.Interest
	}
	if o.CanTransfer != nil {
		toSerialize["can_transfer"] = o.CanTransfer
	}
	if o.WarnRate != nil {
		toSerialize["warn_rate"] = o.WarnRate
	}
	if o.LiquidationPrice != nil {
		toSerialize["liquidation_price"] = o.LiquidationPrice
	}
	return json.Marshal(toSerialize)
}

type NullableInquireMarginAccountInfoResponse struct {
	value *InquireMarginAccountInfoResponse
	isSet bool
}

func (v NullableInquireMarginAccountInfoResponse) Get() *InquireMarginAccountInfoResponse {
	return v.value
}

func (v *NullableInquireMarginAccountInfoResponse) Set(val *InquireMarginAccountInfoResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableInquireMarginAccountInfoResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableInquireMarginAccountInfoResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInquireMarginAccountInfoResponse(val *InquireMarginAccountInfoResponse) *NullableInquireMarginAccountInfoResponse {
	return &NullableInquireMarginAccountInfoResponse{value: val, isSet: true}
}

func (v NullableInquireMarginAccountInfoResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInquireMarginAccountInfoResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
