/*
 * CoinEx API
 *
 * Coinex doesn't have a openapi docs sadville  Open and simple, CoinEx API makes sure that you can build your own trading tools to achieve a more effective trading strategy. CoinEx API is now available for these features:
 *
 * API version: 2021-05-29
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package coinex

import (
	"encoding/json"
)

// PlaceLoanResponse PlaceLoan Response Value
type PlaceLoanResponse struct {
	// loan record ID
	LoanId *int64 `json:"loan_id,omitempty"`
}

// NewPlaceLoanResponse instantiates a new PlaceLoanResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPlaceLoanResponse() *PlaceLoanResponse {
	this := PlaceLoanResponse{}
	return &this
}

// NewPlaceLoanResponseWithDefaults instantiates a new PlaceLoanResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPlaceLoanResponseWithDefaults() *PlaceLoanResponse {
	this := PlaceLoanResponse{}
	return &this
}

// GetLoanId returns the LoanId field value if set, zero value otherwise.
func (o *PlaceLoanResponse) GetLoanId() int64 {
	if o == nil || o.LoanId == nil {
		var ret int64
		return ret
	}
	return *o.LoanId
}

// GetLoanIdOk returns a tuple with the LoanId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlaceLoanResponse) GetLoanIdOk() (*int64, bool) {
	if o == nil || o.LoanId == nil {
		return nil, false
	}
	return o.LoanId, true
}

// HasLoanId returns a boolean if a field has been set.
func (o *PlaceLoanResponse) HasLoanId() bool {
	if o != nil && o.LoanId != nil {
		return true
	}

	return false
}

// SetLoanId gets a reference to the given int64 and assigns it to the LoanId field.
func (o *PlaceLoanResponse) SetLoanId(v int64) {
	o.LoanId = &v
}

func (o PlaceLoanResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.LoanId != nil {
		toSerialize["loan_id"] = o.LoanId
	}
	return json.Marshal(toSerialize)
}

type NullablePlaceLoanResponse struct {
	value *PlaceLoanResponse
	isSet bool
}

func (v NullablePlaceLoanResponse) Get() *PlaceLoanResponse {
	return v.value
}

func (v *NullablePlaceLoanResponse) Set(val *PlaceLoanResponse) {
	v.value = val
	v.isSet = true
}

func (v NullablePlaceLoanResponse) IsSet() bool {
	return v.isSet
}

func (v *NullablePlaceLoanResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePlaceLoanResponse(val *PlaceLoanResponse) *NullablePlaceLoanResponse {
	return &NullablePlaceLoanResponse{value: val, isSet: true}
}

func (v NullablePlaceLoanResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePlaceLoanResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
