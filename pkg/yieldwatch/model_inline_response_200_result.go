/*
 * Yieldwatch API
 *
 * Yieldwatch doesn't have a openapi docs sadville
 *
 * API version: 2021-05-29
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package yieldwatch

import (
	"encoding/json"
)

// InlineResponse200Result struct for InlineResponse200Result
type InlineResponse200Result struct {
	WatchBalance  *InlineResponse200ResultWatchBalance  `json:"watchBalance,omitempty"`
	Currencies    *InlineResponse200ResultCurrencies    `json:"currencies,omitempty"`
	Alpha         *map[string]interface{}               `json:"Alpha,omitempty"`
	ApeSwap       *map[string]interface{}               `json:"ApeSwap,omitempty"`
	HyperJump     *map[string]interface{}               `json:"HyperJump,omitempty"`
	BeefyFinance  *map[string]interface{}               `json:"BeefyFinance,omitempty"`
	Blizzard      *map[string]interface{}               `json:"Blizzard,omitempty"`
	MDex          *map[string]interface{}               `json:"MDex,omitempty"`
	PancakeSwap   *InlineResponse200ResultPancakeSwap   `json:"PancakeSwap,omitempty"`
	Jetfuel       *map[string]interface{}               `json:"Jetfuel,omitempty"`
	BDollar       *map[string]interface{}               `json:"bDollar,omitempty"`
	Autofarm      *map[string]interface{}               `json:"Autofarm,omitempty"`
	Acryptos      *map[string]interface{}               `json:"Acryptos,omitempty"`
	Bunny         *map[string]interface{}               `json:"bunny,omitempty"`
	CreamFinance  *map[string]interface{}               `json:"CreamFinance,omitempty"`
	Venus         *map[string]interface{}               `json:"Venus,omitempty"`
	WalletBalance *InlineResponse200ResultWalletBalance `json:"walletBalance,omitempty"`
}

// NewInlineResponse200Result instantiates a new InlineResponse200Result object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200Result() *InlineResponse200Result {
	this := InlineResponse200Result{}
	return &this
}

// NewInlineResponse200ResultWithDefaults instantiates a new InlineResponse200Result object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200ResultWithDefaults() *InlineResponse200Result {
	this := InlineResponse200Result{}
	return &this
}

// GetWatchBalance returns the WatchBalance field value if set, zero value otherwise.
func (o *InlineResponse200Result) GetWatchBalance() InlineResponse200ResultWatchBalance {
	if o == nil || o.WatchBalance == nil {
		var ret InlineResponse200ResultWatchBalance
		return ret
	}
	return *o.WatchBalance
}

// GetWatchBalanceOk returns a tuple with the WatchBalance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200Result) GetWatchBalanceOk() (*InlineResponse200ResultWatchBalance, bool) {
	if o == nil || o.WatchBalance == nil {
		return nil, false
	}
	return o.WatchBalance, true
}

// HasWatchBalance returns a boolean if a field has been set.
func (o *InlineResponse200Result) HasWatchBalance() bool {
	if o != nil && o.WatchBalance != nil {
		return true
	}

	return false
}

// SetWatchBalance gets a reference to the given InlineResponse200ResultWatchBalance and assigns it to the WatchBalance field.
func (o *InlineResponse200Result) SetWatchBalance(v InlineResponse200ResultWatchBalance) {
	o.WatchBalance = &v
}

// GetCurrencies returns the Currencies field value if set, zero value otherwise.
func (o *InlineResponse200Result) GetCurrencies() InlineResponse200ResultCurrencies {
	if o == nil || o.Currencies == nil {
		var ret InlineResponse200ResultCurrencies
		return ret
	}
	return *o.Currencies
}

// GetCurrenciesOk returns a tuple with the Currencies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200Result) GetCurrenciesOk() (*InlineResponse200ResultCurrencies, bool) {
	if o == nil || o.Currencies == nil {
		return nil, false
	}
	return o.Currencies, true
}

// HasCurrencies returns a boolean if a field has been set.
func (o *InlineResponse200Result) HasCurrencies() bool {
	if o != nil && o.Currencies != nil {
		return true
	}

	return false
}

// SetCurrencies gets a reference to the given InlineResponse200ResultCurrencies and assigns it to the Currencies field.
func (o *InlineResponse200Result) SetCurrencies(v InlineResponse200ResultCurrencies) {
	o.Currencies = &v
}

// GetAlpha returns the Alpha field value if set, zero value otherwise.
func (o *InlineResponse200Result) GetAlpha() map[string]interface{} {
	if o == nil || o.Alpha == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.Alpha
}

// GetAlphaOk returns a tuple with the Alpha field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200Result) GetAlphaOk() (*map[string]interface{}, bool) {
	if o == nil || o.Alpha == nil {
		return nil, false
	}
	return o.Alpha, true
}

// HasAlpha returns a boolean if a field has been set.
func (o *InlineResponse200Result) HasAlpha() bool {
	if o != nil && o.Alpha != nil {
		return true
	}

	return false
}

// SetAlpha gets a reference to the given map[string]interface{} and assigns it to the Alpha field.
func (o *InlineResponse200Result) SetAlpha(v map[string]interface{}) {
	o.Alpha = &v
}

// GetApeSwap returns the ApeSwap field value if set, zero value otherwise.
func (o *InlineResponse200Result) GetApeSwap() map[string]interface{} {
	if o == nil || o.ApeSwap == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.ApeSwap
}

// GetApeSwapOk returns a tuple with the ApeSwap field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200Result) GetApeSwapOk() (*map[string]interface{}, bool) {
	if o == nil || o.ApeSwap == nil {
		return nil, false
	}
	return o.ApeSwap, true
}

// HasApeSwap returns a boolean if a field has been set.
func (o *InlineResponse200Result) HasApeSwap() bool {
	if o != nil && o.ApeSwap != nil {
		return true
	}

	return false
}

// SetApeSwap gets a reference to the given map[string]interface{} and assigns it to the ApeSwap field.
func (o *InlineResponse200Result) SetApeSwap(v map[string]interface{}) {
	o.ApeSwap = &v
}

// GetHyperJump returns the HyperJump field value if set, zero value otherwise.
func (o *InlineResponse200Result) GetHyperJump() map[string]interface{} {
	if o == nil || o.HyperJump == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.HyperJump
}

// GetHyperJumpOk returns a tuple with the HyperJump field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200Result) GetHyperJumpOk() (*map[string]interface{}, bool) {
	if o == nil || o.HyperJump == nil {
		return nil, false
	}
	return o.HyperJump, true
}

// HasHyperJump returns a boolean if a field has been set.
func (o *InlineResponse200Result) HasHyperJump() bool {
	if o != nil && o.HyperJump != nil {
		return true
	}

	return false
}

// SetHyperJump gets a reference to the given map[string]interface{} and assigns it to the HyperJump field.
func (o *InlineResponse200Result) SetHyperJump(v map[string]interface{}) {
	o.HyperJump = &v
}

// GetBeefyFinance returns the BeefyFinance field value if set, zero value otherwise.
func (o *InlineResponse200Result) GetBeefyFinance() map[string]interface{} {
	if o == nil || o.BeefyFinance == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.BeefyFinance
}

// GetBeefyFinanceOk returns a tuple with the BeefyFinance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200Result) GetBeefyFinanceOk() (*map[string]interface{}, bool) {
	if o == nil || o.BeefyFinance == nil {
		return nil, false
	}
	return o.BeefyFinance, true
}

// HasBeefyFinance returns a boolean if a field has been set.
func (o *InlineResponse200Result) HasBeefyFinance() bool {
	if o != nil && o.BeefyFinance != nil {
		return true
	}

	return false
}

// SetBeefyFinance gets a reference to the given map[string]interface{} and assigns it to the BeefyFinance field.
func (o *InlineResponse200Result) SetBeefyFinance(v map[string]interface{}) {
	o.BeefyFinance = &v
}

// GetBlizzard returns the Blizzard field value if set, zero value otherwise.
func (o *InlineResponse200Result) GetBlizzard() map[string]interface{} {
	if o == nil || o.Blizzard == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.Blizzard
}

// GetBlizzardOk returns a tuple with the Blizzard field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200Result) GetBlizzardOk() (*map[string]interface{}, bool) {
	if o == nil || o.Blizzard == nil {
		return nil, false
	}
	return o.Blizzard, true
}

// HasBlizzard returns a boolean if a field has been set.
func (o *InlineResponse200Result) HasBlizzard() bool {
	if o != nil && o.Blizzard != nil {
		return true
	}

	return false
}

// SetBlizzard gets a reference to the given map[string]interface{} and assigns it to the Blizzard field.
func (o *InlineResponse200Result) SetBlizzard(v map[string]interface{}) {
	o.Blizzard = &v
}

// GetMDex returns the MDex field value if set, zero value otherwise.
func (o *InlineResponse200Result) GetMDex() map[string]interface{} {
	if o == nil || o.MDex == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.MDex
}

// GetMDexOk returns a tuple with the MDex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200Result) GetMDexOk() (*map[string]interface{}, bool) {
	if o == nil || o.MDex == nil {
		return nil, false
	}
	return o.MDex, true
}

// HasMDex returns a boolean if a field has been set.
func (o *InlineResponse200Result) HasMDex() bool {
	if o != nil && o.MDex != nil {
		return true
	}

	return false
}

// SetMDex gets a reference to the given map[string]interface{} and assigns it to the MDex field.
func (o *InlineResponse200Result) SetMDex(v map[string]interface{}) {
	o.MDex = &v
}

// GetPancakeSwap returns the PancakeSwap field value if set, zero value otherwise.
func (o *InlineResponse200Result) GetPancakeSwap() InlineResponse200ResultPancakeSwap {
	if o == nil || o.PancakeSwap == nil {
		var ret InlineResponse200ResultPancakeSwap
		return ret
	}
	return *o.PancakeSwap
}

// GetPancakeSwapOk returns a tuple with the PancakeSwap field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200Result) GetPancakeSwapOk() (*InlineResponse200ResultPancakeSwap, bool) {
	if o == nil || o.PancakeSwap == nil {
		return nil, false
	}
	return o.PancakeSwap, true
}

// HasPancakeSwap returns a boolean if a field has been set.
func (o *InlineResponse200Result) HasPancakeSwap() bool {
	if o != nil && o.PancakeSwap != nil {
		return true
	}

	return false
}

// SetPancakeSwap gets a reference to the given InlineResponse200ResultPancakeSwap and assigns it to the PancakeSwap field.
func (o *InlineResponse200Result) SetPancakeSwap(v InlineResponse200ResultPancakeSwap) {
	o.PancakeSwap = &v
}

// GetJetfuel returns the Jetfuel field value if set, zero value otherwise.
func (o *InlineResponse200Result) GetJetfuel() map[string]interface{} {
	if o == nil || o.Jetfuel == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.Jetfuel
}

// GetJetfuelOk returns a tuple with the Jetfuel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200Result) GetJetfuelOk() (*map[string]interface{}, bool) {
	if o == nil || o.Jetfuel == nil {
		return nil, false
	}
	return o.Jetfuel, true
}

// HasJetfuel returns a boolean if a field has been set.
func (o *InlineResponse200Result) HasJetfuel() bool {
	if o != nil && o.Jetfuel != nil {
		return true
	}

	return false
}

// SetJetfuel gets a reference to the given map[string]interface{} and assigns it to the Jetfuel field.
func (o *InlineResponse200Result) SetJetfuel(v map[string]interface{}) {
	o.Jetfuel = &v
}

// GetBDollar returns the BDollar field value if set, zero value otherwise.
func (o *InlineResponse200Result) GetBDollar() map[string]interface{} {
	if o == nil || o.BDollar == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.BDollar
}

// GetBDollarOk returns a tuple with the BDollar field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200Result) GetBDollarOk() (*map[string]interface{}, bool) {
	if o == nil || o.BDollar == nil {
		return nil, false
	}
	return o.BDollar, true
}

// HasBDollar returns a boolean if a field has been set.
func (o *InlineResponse200Result) HasBDollar() bool {
	if o != nil && o.BDollar != nil {
		return true
	}

	return false
}

// SetBDollar gets a reference to the given map[string]interface{} and assigns it to the BDollar field.
func (o *InlineResponse200Result) SetBDollar(v map[string]interface{}) {
	o.BDollar = &v
}

// GetAutofarm returns the Autofarm field value if set, zero value otherwise.
func (o *InlineResponse200Result) GetAutofarm() map[string]interface{} {
	if o == nil || o.Autofarm == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.Autofarm
}

// GetAutofarmOk returns a tuple with the Autofarm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200Result) GetAutofarmOk() (*map[string]interface{}, bool) {
	if o == nil || o.Autofarm == nil {
		return nil, false
	}
	return o.Autofarm, true
}

// HasAutofarm returns a boolean if a field has been set.
func (o *InlineResponse200Result) HasAutofarm() bool {
	if o != nil && o.Autofarm != nil {
		return true
	}

	return false
}

// SetAutofarm gets a reference to the given map[string]interface{} and assigns it to the Autofarm field.
func (o *InlineResponse200Result) SetAutofarm(v map[string]interface{}) {
	o.Autofarm = &v
}

// GetAcryptos returns the Acryptos field value if set, zero value otherwise.
func (o *InlineResponse200Result) GetAcryptos() map[string]interface{} {
	if o == nil || o.Acryptos == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.Acryptos
}

// GetAcryptosOk returns a tuple with the Acryptos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200Result) GetAcryptosOk() (*map[string]interface{}, bool) {
	if o == nil || o.Acryptos == nil {
		return nil, false
	}
	return o.Acryptos, true
}

// HasAcryptos returns a boolean if a field has been set.
func (o *InlineResponse200Result) HasAcryptos() bool {
	if o != nil && o.Acryptos != nil {
		return true
	}

	return false
}

// SetAcryptos gets a reference to the given map[string]interface{} and assigns it to the Acryptos field.
func (o *InlineResponse200Result) SetAcryptos(v map[string]interface{}) {
	o.Acryptos = &v
}

// GetBunny returns the Bunny field value if set, zero value otherwise.
func (o *InlineResponse200Result) GetBunny() map[string]interface{} {
	if o == nil || o.Bunny == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.Bunny
}

// GetBunnyOk returns a tuple with the Bunny field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200Result) GetBunnyOk() (*map[string]interface{}, bool) {
	if o == nil || o.Bunny == nil {
		return nil, false
	}
	return o.Bunny, true
}

// HasBunny returns a boolean if a field has been set.
func (o *InlineResponse200Result) HasBunny() bool {
	if o != nil && o.Bunny != nil {
		return true
	}

	return false
}

// SetBunny gets a reference to the given map[string]interface{} and assigns it to the Bunny field.
func (o *InlineResponse200Result) SetBunny(v map[string]interface{}) {
	o.Bunny = &v
}

// GetCreamFinance returns the CreamFinance field value if set, zero value otherwise.
func (o *InlineResponse200Result) GetCreamFinance() map[string]interface{} {
	if o == nil || o.CreamFinance == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.CreamFinance
}

// GetCreamFinanceOk returns a tuple with the CreamFinance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200Result) GetCreamFinanceOk() (*map[string]interface{}, bool) {
	if o == nil || o.CreamFinance == nil {
		return nil, false
	}
	return o.CreamFinance, true
}

// HasCreamFinance returns a boolean if a field has been set.
func (o *InlineResponse200Result) HasCreamFinance() bool {
	if o != nil && o.CreamFinance != nil {
		return true
	}

	return false
}

// SetCreamFinance gets a reference to the given map[string]interface{} and assigns it to the CreamFinance field.
func (o *InlineResponse200Result) SetCreamFinance(v map[string]interface{}) {
	o.CreamFinance = &v
}

// GetVenus returns the Venus field value if set, zero value otherwise.
func (o *InlineResponse200Result) GetVenus() map[string]interface{} {
	if o == nil || o.Venus == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.Venus
}

// GetVenusOk returns a tuple with the Venus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200Result) GetVenusOk() (*map[string]interface{}, bool) {
	if o == nil || o.Venus == nil {
		return nil, false
	}
	return o.Venus, true
}

// HasVenus returns a boolean if a field has been set.
func (o *InlineResponse200Result) HasVenus() bool {
	if o != nil && o.Venus != nil {
		return true
	}

	return false
}

// SetVenus gets a reference to the given map[string]interface{} and assigns it to the Venus field.
func (o *InlineResponse200Result) SetVenus(v map[string]interface{}) {
	o.Venus = &v
}

// GetWalletBalance returns the WalletBalance field value if set, zero value otherwise.
func (o *InlineResponse200Result) GetWalletBalance() InlineResponse200ResultWalletBalance {
	if o == nil || o.WalletBalance == nil {
		var ret InlineResponse200ResultWalletBalance
		return ret
	}
	return *o.WalletBalance
}

// GetWalletBalanceOk returns a tuple with the WalletBalance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200Result) GetWalletBalanceOk() (*InlineResponse200ResultWalletBalance, bool) {
	if o == nil || o.WalletBalance == nil {
		return nil, false
	}
	return o.WalletBalance, true
}

// HasWalletBalance returns a boolean if a field has been set.
func (o *InlineResponse200Result) HasWalletBalance() bool {
	if o != nil && o.WalletBalance != nil {
		return true
	}

	return false
}

// SetWalletBalance gets a reference to the given InlineResponse200ResultWalletBalance and assigns it to the WalletBalance field.
func (o *InlineResponse200Result) SetWalletBalance(v InlineResponse200ResultWalletBalance) {
	o.WalletBalance = &v
}

func (o InlineResponse200Result) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.WatchBalance != nil {
		toSerialize["watchBalance"] = o.WatchBalance
	}
	if o.Currencies != nil {
		toSerialize["currencies"] = o.Currencies
	}
	if o.Alpha != nil {
		toSerialize["Alpha"] = o.Alpha
	}
	if o.ApeSwap != nil {
		toSerialize["ApeSwap"] = o.ApeSwap
	}
	if o.HyperJump != nil {
		toSerialize["HyperJump"] = o.HyperJump
	}
	if o.BeefyFinance != nil {
		toSerialize["BeefyFinance"] = o.BeefyFinance
	}
	if o.Blizzard != nil {
		toSerialize["Blizzard"] = o.Blizzard
	}
	if o.MDex != nil {
		toSerialize["MDex"] = o.MDex
	}
	if o.PancakeSwap != nil {
		toSerialize["PancakeSwap"] = o.PancakeSwap
	}
	if o.Jetfuel != nil {
		toSerialize["Jetfuel"] = o.Jetfuel
	}
	if o.BDollar != nil {
		toSerialize["bDollar"] = o.BDollar
	}
	if o.Autofarm != nil {
		toSerialize["Autofarm"] = o.Autofarm
	}
	if o.Acryptos != nil {
		toSerialize["Acryptos"] = o.Acryptos
	}
	if o.Bunny != nil {
		toSerialize["bunny"] = o.Bunny
	}
	if o.CreamFinance != nil {
		toSerialize["CreamFinance"] = o.CreamFinance
	}
	if o.Venus != nil {
		toSerialize["Venus"] = o.Venus
	}
	if o.WalletBalance != nil {
		toSerialize["walletBalance"] = o.WalletBalance
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200Result struct {
	value *InlineResponse200Result
	isSet bool
}

func (v NullableInlineResponse200Result) Get() *InlineResponse200Result {
	return v.value
}

func (v *NullableInlineResponse200Result) Set(val *InlineResponse200Result) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200Result) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200Result) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200Result(val *InlineResponse200Result) *NullableInlineResponse200Result {
	return &NullableInlineResponse200Result{value: val, isSet: true}
}

func (v NullableInlineResponse200Result) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200Result) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
