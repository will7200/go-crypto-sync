/*
 * Yieldwatch API
 *
 * Yieldwatch doesn't have a openapi docs sadville
 *
 * API version: 2021-05-29
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package yieldwatch

import (
	"encoding/json"
)

// InlineResponse200ResultCurrencies struct for InlineResponse200ResultCurrencies
type InlineResponse200ResultCurrencies struct {
	EUR  *float32 `json:"EUR,omitempty"`
	RMB  *float32 `json:"RMB,omitempty"`
	JPY  *float32 `json:"JPY,omitempty"`
	GBP  *float32 `json:"GBP,omitempty"`
	BTCB *float32 `json:"BTCB,omitempty"`
	WBNB *float32 `json:"WBNB,omitempty"`
	BRL  *float32 `json:"BRL,omitempty"`
	AUD  *float32 `json:"AUD,omitempty"`
	HKD  *float32 `json:"HKD,omitempty"`
	SGD  *float32 `json:"SGD,omitempty"`
	RUB  *float32 `json:"RUB,omitempty"`
	KRW  *float32 `json:"KRW,omitempty"`
	CAD  *float32 `json:"CAD,omitempty"`
	THB  *float32 `json:"THB,omitempty"`
	CHF  *float32 `json:"CHF,omitempty"`
	IDR  *float32 `json:"IDR,omitempty"`
	TRY  *float32 `json:"TRY,omitempty"`
	TWD  *float32 `json:"TWD,omitempty"`
}

// NewInlineResponse200ResultCurrencies instantiates a new InlineResponse200ResultCurrencies object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200ResultCurrencies() *InlineResponse200ResultCurrencies {
	this := InlineResponse200ResultCurrencies{}
	return &this
}

// NewInlineResponse200ResultCurrenciesWithDefaults instantiates a new InlineResponse200ResultCurrencies object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200ResultCurrenciesWithDefaults() *InlineResponse200ResultCurrencies {
	this := InlineResponse200ResultCurrencies{}
	return &this
}

// GetEUR returns the EUR field value if set, zero value otherwise.
func (o *InlineResponse200ResultCurrencies) GetEUR() float32 {
	if o == nil || o.EUR == nil {
		var ret float32
		return ret
	}
	return *o.EUR
}

// GetEUROk returns a tuple with the EUR field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200ResultCurrencies) GetEUROk() (*float32, bool) {
	if o == nil || o.EUR == nil {
		return nil, false
	}
	return o.EUR, true
}

// HasEUR returns a boolean if a field has been set.
func (o *InlineResponse200ResultCurrencies) HasEUR() bool {
	if o != nil && o.EUR != nil {
		return true
	}

	return false
}

// SetEUR gets a reference to the given float32 and assigns it to the EUR field.
func (o *InlineResponse200ResultCurrencies) SetEUR(v float32) {
	o.EUR = &v
}

// GetRMB returns the RMB field value if set, zero value otherwise.
func (o *InlineResponse200ResultCurrencies) GetRMB() float32 {
	if o == nil || o.RMB == nil {
		var ret float32
		return ret
	}
	return *o.RMB
}

// GetRMBOk returns a tuple with the RMB field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200ResultCurrencies) GetRMBOk() (*float32, bool) {
	if o == nil || o.RMB == nil {
		return nil, false
	}
	return o.RMB, true
}

// HasRMB returns a boolean if a field has been set.
func (o *InlineResponse200ResultCurrencies) HasRMB() bool {
	if o != nil && o.RMB != nil {
		return true
	}

	return false
}

// SetRMB gets a reference to the given float32 and assigns it to the RMB field.
func (o *InlineResponse200ResultCurrencies) SetRMB(v float32) {
	o.RMB = &v
}

// GetJPY returns the JPY field value if set, zero value otherwise.
func (o *InlineResponse200ResultCurrencies) GetJPY() float32 {
	if o == nil || o.JPY == nil {
		var ret float32
		return ret
	}
	return *o.JPY
}

// GetJPYOk returns a tuple with the JPY field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200ResultCurrencies) GetJPYOk() (*float32, bool) {
	if o == nil || o.JPY == nil {
		return nil, false
	}
	return o.JPY, true
}

// HasJPY returns a boolean if a field has been set.
func (o *InlineResponse200ResultCurrencies) HasJPY() bool {
	if o != nil && o.JPY != nil {
		return true
	}

	return false
}

// SetJPY gets a reference to the given float32 and assigns it to the JPY field.
func (o *InlineResponse200ResultCurrencies) SetJPY(v float32) {
	o.JPY = &v
}

// GetGBP returns the GBP field value if set, zero value otherwise.
func (o *InlineResponse200ResultCurrencies) GetGBP() float32 {
	if o == nil || o.GBP == nil {
		var ret float32
		return ret
	}
	return *o.GBP
}

// GetGBPOk returns a tuple with the GBP field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200ResultCurrencies) GetGBPOk() (*float32, bool) {
	if o == nil || o.GBP == nil {
		return nil, false
	}
	return o.GBP, true
}

// HasGBP returns a boolean if a field has been set.
func (o *InlineResponse200ResultCurrencies) HasGBP() bool {
	if o != nil && o.GBP != nil {
		return true
	}

	return false
}

// SetGBP gets a reference to the given float32 and assigns it to the GBP field.
func (o *InlineResponse200ResultCurrencies) SetGBP(v float32) {
	o.GBP = &v
}

// GetBTCB returns the BTCB field value if set, zero value otherwise.
func (o *InlineResponse200ResultCurrencies) GetBTCB() float32 {
	if o == nil || o.BTCB == nil {
		var ret float32
		return ret
	}
	return *o.BTCB
}

// GetBTCBOk returns a tuple with the BTCB field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200ResultCurrencies) GetBTCBOk() (*float32, bool) {
	if o == nil || o.BTCB == nil {
		return nil, false
	}
	return o.BTCB, true
}

// HasBTCB returns a boolean if a field has been set.
func (o *InlineResponse200ResultCurrencies) HasBTCB() bool {
	if o != nil && o.BTCB != nil {
		return true
	}

	return false
}

// SetBTCB gets a reference to the given float32 and assigns it to the BTCB field.
func (o *InlineResponse200ResultCurrencies) SetBTCB(v float32) {
	o.BTCB = &v
}

// GetWBNB returns the WBNB field value if set, zero value otherwise.
func (o *InlineResponse200ResultCurrencies) GetWBNB() float32 {
	if o == nil || o.WBNB == nil {
		var ret float32
		return ret
	}
	return *o.WBNB
}

// GetWBNBOk returns a tuple with the WBNB field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200ResultCurrencies) GetWBNBOk() (*float32, bool) {
	if o == nil || o.WBNB == nil {
		return nil, false
	}
	return o.WBNB, true
}

// HasWBNB returns a boolean if a field has been set.
func (o *InlineResponse200ResultCurrencies) HasWBNB() bool {
	if o != nil && o.WBNB != nil {
		return true
	}

	return false
}

// SetWBNB gets a reference to the given float32 and assigns it to the WBNB field.
func (o *InlineResponse200ResultCurrencies) SetWBNB(v float32) {
	o.WBNB = &v
}

// GetBRL returns the BRL field value if set, zero value otherwise.
func (o *InlineResponse200ResultCurrencies) GetBRL() float32 {
	if o == nil || o.BRL == nil {
		var ret float32
		return ret
	}
	return *o.BRL
}

// GetBRLOk returns a tuple with the BRL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200ResultCurrencies) GetBRLOk() (*float32, bool) {
	if o == nil || o.BRL == nil {
		return nil, false
	}
	return o.BRL, true
}

// HasBRL returns a boolean if a field has been set.
func (o *InlineResponse200ResultCurrencies) HasBRL() bool {
	if o != nil && o.BRL != nil {
		return true
	}

	return false
}

// SetBRL gets a reference to the given float32 and assigns it to the BRL field.
func (o *InlineResponse200ResultCurrencies) SetBRL(v float32) {
	o.BRL = &v
}

// GetAUD returns the AUD field value if set, zero value otherwise.
func (o *InlineResponse200ResultCurrencies) GetAUD() float32 {
	if o == nil || o.AUD == nil {
		var ret float32
		return ret
	}
	return *o.AUD
}

// GetAUDOk returns a tuple with the AUD field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200ResultCurrencies) GetAUDOk() (*float32, bool) {
	if o == nil || o.AUD == nil {
		return nil, false
	}
	return o.AUD, true
}

// HasAUD returns a boolean if a field has been set.
func (o *InlineResponse200ResultCurrencies) HasAUD() bool {
	if o != nil && o.AUD != nil {
		return true
	}

	return false
}

// SetAUD gets a reference to the given float32 and assigns it to the AUD field.
func (o *InlineResponse200ResultCurrencies) SetAUD(v float32) {
	o.AUD = &v
}

// GetHKD returns the HKD field value if set, zero value otherwise.
func (o *InlineResponse200ResultCurrencies) GetHKD() float32 {
	if o == nil || o.HKD == nil {
		var ret float32
		return ret
	}
	return *o.HKD
}

// GetHKDOk returns a tuple with the HKD field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200ResultCurrencies) GetHKDOk() (*float32, bool) {
	if o == nil || o.HKD == nil {
		return nil, false
	}
	return o.HKD, true
}

// HasHKD returns a boolean if a field has been set.
func (o *InlineResponse200ResultCurrencies) HasHKD() bool {
	if o != nil && o.HKD != nil {
		return true
	}

	return false
}

// SetHKD gets a reference to the given float32 and assigns it to the HKD field.
func (o *InlineResponse200ResultCurrencies) SetHKD(v float32) {
	o.HKD = &v
}

// GetSGD returns the SGD field value if set, zero value otherwise.
func (o *InlineResponse200ResultCurrencies) GetSGD() float32 {
	if o == nil || o.SGD == nil {
		var ret float32
		return ret
	}
	return *o.SGD
}

// GetSGDOk returns a tuple with the SGD field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200ResultCurrencies) GetSGDOk() (*float32, bool) {
	if o == nil || o.SGD == nil {
		return nil, false
	}
	return o.SGD, true
}

// HasSGD returns a boolean if a field has been set.
func (o *InlineResponse200ResultCurrencies) HasSGD() bool {
	if o != nil && o.SGD != nil {
		return true
	}

	return false
}

// SetSGD gets a reference to the given float32 and assigns it to the SGD field.
func (o *InlineResponse200ResultCurrencies) SetSGD(v float32) {
	o.SGD = &v
}

// GetRUB returns the RUB field value if set, zero value otherwise.
func (o *InlineResponse200ResultCurrencies) GetRUB() float32 {
	if o == nil || o.RUB == nil {
		var ret float32
		return ret
	}
	return *o.RUB
}

// GetRUBOk returns a tuple with the RUB field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200ResultCurrencies) GetRUBOk() (*float32, bool) {
	if o == nil || o.RUB == nil {
		return nil, false
	}
	return o.RUB, true
}

// HasRUB returns a boolean if a field has been set.
func (o *InlineResponse200ResultCurrencies) HasRUB() bool {
	if o != nil && o.RUB != nil {
		return true
	}

	return false
}

// SetRUB gets a reference to the given float32 and assigns it to the RUB field.
func (o *InlineResponse200ResultCurrencies) SetRUB(v float32) {
	o.RUB = &v
}

// GetKRW returns the KRW field value if set, zero value otherwise.
func (o *InlineResponse200ResultCurrencies) GetKRW() float32 {
	if o == nil || o.KRW == nil {
		var ret float32
		return ret
	}
	return *o.KRW
}

// GetKRWOk returns a tuple with the KRW field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200ResultCurrencies) GetKRWOk() (*float32, bool) {
	if o == nil || o.KRW == nil {
		return nil, false
	}
	return o.KRW, true
}

// HasKRW returns a boolean if a field has been set.
func (o *InlineResponse200ResultCurrencies) HasKRW() bool {
	if o != nil && o.KRW != nil {
		return true
	}

	return false
}

// SetKRW gets a reference to the given float32 and assigns it to the KRW field.
func (o *InlineResponse200ResultCurrencies) SetKRW(v float32) {
	o.KRW = &v
}

// GetCAD returns the CAD field value if set, zero value otherwise.
func (o *InlineResponse200ResultCurrencies) GetCAD() float32 {
	if o == nil || o.CAD == nil {
		var ret float32
		return ret
	}
	return *o.CAD
}

// GetCADOk returns a tuple with the CAD field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200ResultCurrencies) GetCADOk() (*float32, bool) {
	if o == nil || o.CAD == nil {
		return nil, false
	}
	return o.CAD, true
}

// HasCAD returns a boolean if a field has been set.
func (o *InlineResponse200ResultCurrencies) HasCAD() bool {
	if o != nil && o.CAD != nil {
		return true
	}

	return false
}

// SetCAD gets a reference to the given float32 and assigns it to the CAD field.
func (o *InlineResponse200ResultCurrencies) SetCAD(v float32) {
	o.CAD = &v
}

// GetTHB returns the THB field value if set, zero value otherwise.
func (o *InlineResponse200ResultCurrencies) GetTHB() float32 {
	if o == nil || o.THB == nil {
		var ret float32
		return ret
	}
	return *o.THB
}

// GetTHBOk returns a tuple with the THB field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200ResultCurrencies) GetTHBOk() (*float32, bool) {
	if o == nil || o.THB == nil {
		return nil, false
	}
	return o.THB, true
}

// HasTHB returns a boolean if a field has been set.
func (o *InlineResponse200ResultCurrencies) HasTHB() bool {
	if o != nil && o.THB != nil {
		return true
	}

	return false
}

// SetTHB gets a reference to the given float32 and assigns it to the THB field.
func (o *InlineResponse200ResultCurrencies) SetTHB(v float32) {
	o.THB = &v
}

// GetCHF returns the CHF field value if set, zero value otherwise.
func (o *InlineResponse200ResultCurrencies) GetCHF() float32 {
	if o == nil || o.CHF == nil {
		var ret float32
		return ret
	}
	return *o.CHF
}

// GetCHFOk returns a tuple with the CHF field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200ResultCurrencies) GetCHFOk() (*float32, bool) {
	if o == nil || o.CHF == nil {
		return nil, false
	}
	return o.CHF, true
}

// HasCHF returns a boolean if a field has been set.
func (o *InlineResponse200ResultCurrencies) HasCHF() bool {
	if o != nil && o.CHF != nil {
		return true
	}

	return false
}

// SetCHF gets a reference to the given float32 and assigns it to the CHF field.
func (o *InlineResponse200ResultCurrencies) SetCHF(v float32) {
	o.CHF = &v
}

// GetIDR returns the IDR field value if set, zero value otherwise.
func (o *InlineResponse200ResultCurrencies) GetIDR() float32 {
	if o == nil || o.IDR == nil {
		var ret float32
		return ret
	}
	return *o.IDR
}

// GetIDROk returns a tuple with the IDR field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200ResultCurrencies) GetIDROk() (*float32, bool) {
	if o == nil || o.IDR == nil {
		return nil, false
	}
	return o.IDR, true
}

// HasIDR returns a boolean if a field has been set.
func (o *InlineResponse200ResultCurrencies) HasIDR() bool {
	if o != nil && o.IDR != nil {
		return true
	}

	return false
}

// SetIDR gets a reference to the given float32 and assigns it to the IDR field.
func (o *InlineResponse200ResultCurrencies) SetIDR(v float32) {
	o.IDR = &v
}

// GetTRY returns the TRY field value if set, zero value otherwise.
func (o *InlineResponse200ResultCurrencies) GetTRY() float32 {
	if o == nil || o.TRY == nil {
		var ret float32
		return ret
	}
	return *o.TRY
}

// GetTRYOk returns a tuple with the TRY field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200ResultCurrencies) GetTRYOk() (*float32, bool) {
	if o == nil || o.TRY == nil {
		return nil, false
	}
	return o.TRY, true
}

// HasTRY returns a boolean if a field has been set.
func (o *InlineResponse200ResultCurrencies) HasTRY() bool {
	if o != nil && o.TRY != nil {
		return true
	}

	return false
}

// SetTRY gets a reference to the given float32 and assigns it to the TRY field.
func (o *InlineResponse200ResultCurrencies) SetTRY(v float32) {
	o.TRY = &v
}

// GetTWD returns the TWD field value if set, zero value otherwise.
func (o *InlineResponse200ResultCurrencies) GetTWD() float32 {
	if o == nil || o.TWD == nil {
		var ret float32
		return ret
	}
	return *o.TWD
}

// GetTWDOk returns a tuple with the TWD field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200ResultCurrencies) GetTWDOk() (*float32, bool) {
	if o == nil || o.TWD == nil {
		return nil, false
	}
	return o.TWD, true
}

// HasTWD returns a boolean if a field has been set.
func (o *InlineResponse200ResultCurrencies) HasTWD() bool {
	if o != nil && o.TWD != nil {
		return true
	}

	return false
}

// SetTWD gets a reference to the given float32 and assigns it to the TWD field.
func (o *InlineResponse200ResultCurrencies) SetTWD(v float32) {
	o.TWD = &v
}

func (o InlineResponse200ResultCurrencies) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.EUR != nil {
		toSerialize["EUR"] = o.EUR
	}
	if o.RMB != nil {
		toSerialize["RMB"] = o.RMB
	}
	if o.JPY != nil {
		toSerialize["JPY"] = o.JPY
	}
	if o.GBP != nil {
		toSerialize["GBP"] = o.GBP
	}
	if o.BTCB != nil {
		toSerialize["BTCB"] = o.BTCB
	}
	if o.WBNB != nil {
		toSerialize["WBNB"] = o.WBNB
	}
	if o.BRL != nil {
		toSerialize["BRL"] = o.BRL
	}
	if o.AUD != nil {
		toSerialize["AUD"] = o.AUD
	}
	if o.HKD != nil {
		toSerialize["HKD"] = o.HKD
	}
	if o.SGD != nil {
		toSerialize["SGD"] = o.SGD
	}
	if o.RUB != nil {
		toSerialize["RUB"] = o.RUB
	}
	if o.KRW != nil {
		toSerialize["KRW"] = o.KRW
	}
	if o.CAD != nil {
		toSerialize["CAD"] = o.CAD
	}
	if o.THB != nil {
		toSerialize["THB"] = o.THB
	}
	if o.CHF != nil {
		toSerialize["CHF"] = o.CHF
	}
	if o.IDR != nil {
		toSerialize["IDR"] = o.IDR
	}
	if o.TRY != nil {
		toSerialize["TRY"] = o.TRY
	}
	if o.TWD != nil {
		toSerialize["TWD"] = o.TWD
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200ResultCurrencies struct {
	value *InlineResponse200ResultCurrencies
	isSet bool
}

func (v NullableInlineResponse200ResultCurrencies) Get() *InlineResponse200ResultCurrencies {
	return v.value
}

func (v *NullableInlineResponse200ResultCurrencies) Set(val *InlineResponse200ResultCurrencies) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200ResultCurrencies) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200ResultCurrencies) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200ResultCurrencies(val *InlineResponse200ResultCurrencies) *NullableInlineResponse200ResultCurrencies {
	return &NullableInlineResponse200ResultCurrencies{value: val, isSet: true}
}

func (v NullableInlineResponse200ResultCurrencies) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200ResultCurrencies) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
