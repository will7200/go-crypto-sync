/*
 * Yieldwatch API
 *
 * Yieldwatch doesn't have a openapi docs sadville
 *
 * API version: 2021-05-29
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package yieldwatch

import (
	"encoding/json"
)

// InlineResponse200ResultPancakeSwap struct for InlineResponse200ResultPancakeSwap
type InlineResponse200ResultPancakeSwap struct {
	Vaults    *InlineResponse200ResultPancakeSwapVaults    `json:"vaults,omitempty"`
	LPStaking *InlineResponse200ResultPancakeSwapLPStaking `json:"LPStaking,omitempty"`
	Staking   *InlineResponse200ResultPancakeSwapStaking   `json:"staking,omitempty"`
}

// NewInlineResponse200ResultPancakeSwap instantiates a new InlineResponse200ResultPancakeSwap object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200ResultPancakeSwap() *InlineResponse200ResultPancakeSwap {
	this := InlineResponse200ResultPancakeSwap{}
	return &this
}

// NewInlineResponse200ResultPancakeSwapWithDefaults instantiates a new InlineResponse200ResultPancakeSwap object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200ResultPancakeSwapWithDefaults() *InlineResponse200ResultPancakeSwap {
	this := InlineResponse200ResultPancakeSwap{}
	return &this
}

// GetVaults returns the Vaults field value if set, zero value otherwise.
func (o *InlineResponse200ResultPancakeSwap) GetVaults() InlineResponse200ResultPancakeSwapVaults {
	if o == nil || o.Vaults == nil {
		var ret InlineResponse200ResultPancakeSwapVaults
		return ret
	}
	return *o.Vaults
}

// GetVaultsOk returns a tuple with the Vaults field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200ResultPancakeSwap) GetVaultsOk() (*InlineResponse200ResultPancakeSwapVaults, bool) {
	if o == nil || o.Vaults == nil {
		return nil, false
	}
	return o.Vaults, true
}

// HasVaults returns a boolean if a field has been set.
func (o *InlineResponse200ResultPancakeSwap) HasVaults() bool {
	if o != nil && o.Vaults != nil {
		return true
	}

	return false
}

// SetVaults gets a reference to the given InlineResponse200ResultPancakeSwapVaults and assigns it to the Vaults field.
func (o *InlineResponse200ResultPancakeSwap) SetVaults(v InlineResponse200ResultPancakeSwapVaults) {
	o.Vaults = &v
}

// GetLPStaking returns the LPStaking field value if set, zero value otherwise.
func (o *InlineResponse200ResultPancakeSwap) GetLPStaking() InlineResponse200ResultPancakeSwapLPStaking {
	if o == nil || o.LPStaking == nil {
		var ret InlineResponse200ResultPancakeSwapLPStaking
		return ret
	}
	return *o.LPStaking
}

// GetLPStakingOk returns a tuple with the LPStaking field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200ResultPancakeSwap) GetLPStakingOk() (*InlineResponse200ResultPancakeSwapLPStaking, bool) {
	if o == nil || o.LPStaking == nil {
		return nil, false
	}
	return o.LPStaking, true
}

// HasLPStaking returns a boolean if a field has been set.
func (o *InlineResponse200ResultPancakeSwap) HasLPStaking() bool {
	if o != nil && o.LPStaking != nil {
		return true
	}

	return false
}

// SetLPStaking gets a reference to the given InlineResponse200ResultPancakeSwapLPStaking and assigns it to the LPStaking field.
func (o *InlineResponse200ResultPancakeSwap) SetLPStaking(v InlineResponse200ResultPancakeSwapLPStaking) {
	o.LPStaking = &v
}

// GetStaking returns the Staking field value if set, zero value otherwise.
func (o *InlineResponse200ResultPancakeSwap) GetStaking() InlineResponse200ResultPancakeSwapStaking {
	if o == nil || o.Staking == nil {
		var ret InlineResponse200ResultPancakeSwapStaking
		return ret
	}
	return *o.Staking
}

// GetStakingOk returns a tuple with the Staking field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200ResultPancakeSwap) GetStakingOk() (*InlineResponse200ResultPancakeSwapStaking, bool) {
	if o == nil || o.Staking == nil {
		return nil, false
	}
	return o.Staking, true
}

// HasStaking returns a boolean if a field has been set.
func (o *InlineResponse200ResultPancakeSwap) HasStaking() bool {
	if o != nil && o.Staking != nil {
		return true
	}

	return false
}

// SetStaking gets a reference to the given InlineResponse200ResultPancakeSwapStaking and assigns it to the Staking field.
func (o *InlineResponse200ResultPancakeSwap) SetStaking(v InlineResponse200ResultPancakeSwapStaking) {
	o.Staking = &v
}

func (o InlineResponse200ResultPancakeSwap) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Vaults != nil {
		toSerialize["vaults"] = o.Vaults
	}
	if o.LPStaking != nil {
		toSerialize["LPStaking"] = o.LPStaking
	}
	if o.Staking != nil {
		toSerialize["staking"] = o.Staking
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200ResultPancakeSwap struct {
	value *InlineResponse200ResultPancakeSwap
	isSet bool
}

func (v NullableInlineResponse200ResultPancakeSwap) Get() *InlineResponse200ResultPancakeSwap {
	return v.value
}

func (v *NullableInlineResponse200ResultPancakeSwap) Set(val *InlineResponse200ResultPancakeSwap) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200ResultPancakeSwap) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200ResultPancakeSwap) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200ResultPancakeSwap(val *InlineResponse200ResultPancakeSwap) *NullableInlineResponse200ResultPancakeSwap {
	return &NullableInlineResponse200ResultPancakeSwap{value: val, isSet: true}
}

func (v NullableInlineResponse200ResultPancakeSwap) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200ResultPancakeSwap) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
