/*
 * Yieldwatch API
 *
 * Yieldwatch doesn't have a openapi docs sadville
 *
 * API version: 2021-05-29
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package yieldwatch

import (
	"encoding/json"
)

// InlineResponse200ResultPancakeSwapStaking struct for InlineResponse200ResultPancakeSwapStaking
type InlineResponse200ResultPancakeSwapStaking struct {
	TotalUSDValues *InlineResponse200ResultPancakeSwapVaultsTotalUSDValues `json:"totalUSDValues,omitempty"`
	Vaults         *[]map[string]interface{}                               `json:"vaults,omitempty"`
}

// NewInlineResponse200ResultPancakeSwapStaking instantiates a new InlineResponse200ResultPancakeSwapStaking object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200ResultPancakeSwapStaking() *InlineResponse200ResultPancakeSwapStaking {
	this := InlineResponse200ResultPancakeSwapStaking{}
	return &this
}

// NewInlineResponse200ResultPancakeSwapStakingWithDefaults instantiates a new InlineResponse200ResultPancakeSwapStaking object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200ResultPancakeSwapStakingWithDefaults() *InlineResponse200ResultPancakeSwapStaking {
	this := InlineResponse200ResultPancakeSwapStaking{}
	return &this
}

// GetTotalUSDValues returns the TotalUSDValues field value if set, zero value otherwise.
func (o *InlineResponse200ResultPancakeSwapStaking) GetTotalUSDValues() InlineResponse200ResultPancakeSwapVaultsTotalUSDValues {
	if o == nil || o.TotalUSDValues == nil {
		var ret InlineResponse200ResultPancakeSwapVaultsTotalUSDValues
		return ret
	}
	return *o.TotalUSDValues
}

// GetTotalUSDValuesOk returns a tuple with the TotalUSDValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200ResultPancakeSwapStaking) GetTotalUSDValuesOk() (*InlineResponse200ResultPancakeSwapVaultsTotalUSDValues, bool) {
	if o == nil || o.TotalUSDValues == nil {
		return nil, false
	}
	return o.TotalUSDValues, true
}

// HasTotalUSDValues returns a boolean if a field has been set.
func (o *InlineResponse200ResultPancakeSwapStaking) HasTotalUSDValues() bool {
	if o != nil && o.TotalUSDValues != nil {
		return true
	}

	return false
}

// SetTotalUSDValues gets a reference to the given InlineResponse200ResultPancakeSwapVaultsTotalUSDValues and assigns it to the TotalUSDValues field.
func (o *InlineResponse200ResultPancakeSwapStaking) SetTotalUSDValues(v InlineResponse200ResultPancakeSwapVaultsTotalUSDValues) {
	o.TotalUSDValues = &v
}

// GetVaults returns the Vaults field value if set, zero value otherwise.
func (o *InlineResponse200ResultPancakeSwapStaking) GetVaults() []map[string]interface{} {
	if o == nil || o.Vaults == nil {
		var ret []map[string]interface{}
		return ret
	}
	return *o.Vaults
}

// GetVaultsOk returns a tuple with the Vaults field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200ResultPancakeSwapStaking) GetVaultsOk() (*[]map[string]interface{}, bool) {
	if o == nil || o.Vaults == nil {
		return nil, false
	}
	return o.Vaults, true
}

// HasVaults returns a boolean if a field has been set.
func (o *InlineResponse200ResultPancakeSwapStaking) HasVaults() bool {
	if o != nil && o.Vaults != nil {
		return true
	}

	return false
}

// SetVaults gets a reference to the given []map[string]interface{} and assigns it to the Vaults field.
func (o *InlineResponse200ResultPancakeSwapStaking) SetVaults(v []map[string]interface{}) {
	o.Vaults = &v
}

func (o InlineResponse200ResultPancakeSwapStaking) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.TotalUSDValues != nil {
		toSerialize["totalUSDValues"] = o.TotalUSDValues
	}
	if o.Vaults != nil {
		toSerialize["vaults"] = o.Vaults
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200ResultPancakeSwapStaking struct {
	value *InlineResponse200ResultPancakeSwapStaking
	isSet bool
}

func (v NullableInlineResponse200ResultPancakeSwapStaking) Get() *InlineResponse200ResultPancakeSwapStaking {
	return v.value
}

func (v *NullableInlineResponse200ResultPancakeSwapStaking) Set(val *InlineResponse200ResultPancakeSwapStaking) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200ResultPancakeSwapStaking) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200ResultPancakeSwapStaking) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200ResultPancakeSwapStaking(val *InlineResponse200ResultPancakeSwapStaking) *NullableInlineResponse200ResultPancakeSwapStaking {
	return &NullableInlineResponse200ResultPancakeSwapStaking{value: val, isSet: true}
}

func (v NullableInlineResponse200ResultPancakeSwapStaking) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200ResultPancakeSwapStaking) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
