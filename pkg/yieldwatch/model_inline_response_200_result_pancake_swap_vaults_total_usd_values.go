/*
 * Yieldwatch API
 *
 * Yieldwatch doesn't have a openapi docs sadville
 *
 * API version: 2021-05-29
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package yieldwatch

import (
	"encoding/json"
)

// InlineResponse200ResultPancakeSwapVaultsTotalUSDValues struct for InlineResponse200ResultPancakeSwapVaultsTotalUSDValues
type InlineResponse200ResultPancakeSwapVaultsTotalUSDValues struct {
	Deposit *float32 `json:"deposit,omitempty"`
	Yield   *float32 `json:"yield,omitempty"`
	Total   *float32 `json:"total,omitempty"`
}

// NewInlineResponse200ResultPancakeSwapVaultsTotalUSDValues instantiates a new InlineResponse200ResultPancakeSwapVaultsTotalUSDValues object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200ResultPancakeSwapVaultsTotalUSDValues() *InlineResponse200ResultPancakeSwapVaultsTotalUSDValues {
	this := InlineResponse200ResultPancakeSwapVaultsTotalUSDValues{}
	return &this
}

// NewInlineResponse200ResultPancakeSwapVaultsTotalUSDValuesWithDefaults instantiates a new InlineResponse200ResultPancakeSwapVaultsTotalUSDValues object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200ResultPancakeSwapVaultsTotalUSDValuesWithDefaults() *InlineResponse200ResultPancakeSwapVaultsTotalUSDValues {
	this := InlineResponse200ResultPancakeSwapVaultsTotalUSDValues{}
	return &this
}

// GetDeposit returns the Deposit field value if set, zero value otherwise.
func (o *InlineResponse200ResultPancakeSwapVaultsTotalUSDValues) GetDeposit() float32 {
	if o == nil || o.Deposit == nil {
		var ret float32
		return ret
	}
	return *o.Deposit
}

// GetDepositOk returns a tuple with the Deposit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200ResultPancakeSwapVaultsTotalUSDValues) GetDepositOk() (*float32, bool) {
	if o == nil || o.Deposit == nil {
		return nil, false
	}
	return o.Deposit, true
}

// HasDeposit returns a boolean if a field has been set.
func (o *InlineResponse200ResultPancakeSwapVaultsTotalUSDValues) HasDeposit() bool {
	if o != nil && o.Deposit != nil {
		return true
	}

	return false
}

// SetDeposit gets a reference to the given float32 and assigns it to the Deposit field.
func (o *InlineResponse200ResultPancakeSwapVaultsTotalUSDValues) SetDeposit(v float32) {
	o.Deposit = &v
}

// GetYield returns the Yield field value if set, zero value otherwise.
func (o *InlineResponse200ResultPancakeSwapVaultsTotalUSDValues) GetYield() float32 {
	if o == nil || o.Yield == nil {
		var ret float32
		return ret
	}
	return *o.Yield
}

// GetYieldOk returns a tuple with the Yield field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200ResultPancakeSwapVaultsTotalUSDValues) GetYieldOk() (*float32, bool) {
	if o == nil || o.Yield == nil {
		return nil, false
	}
	return o.Yield, true
}

// HasYield returns a boolean if a field has been set.
func (o *InlineResponse200ResultPancakeSwapVaultsTotalUSDValues) HasYield() bool {
	if o != nil && o.Yield != nil {
		return true
	}

	return false
}

// SetYield gets a reference to the given float32 and assigns it to the Yield field.
func (o *InlineResponse200ResultPancakeSwapVaultsTotalUSDValues) SetYield(v float32) {
	o.Yield = &v
}

// GetTotal returns the Total field value if set, zero value otherwise.
func (o *InlineResponse200ResultPancakeSwapVaultsTotalUSDValues) GetTotal() float32 {
	if o == nil || o.Total == nil {
		var ret float32
		return ret
	}
	return *o.Total
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200ResultPancakeSwapVaultsTotalUSDValues) GetTotalOk() (*float32, bool) {
	if o == nil || o.Total == nil {
		return nil, false
	}
	return o.Total, true
}

// HasTotal returns a boolean if a field has been set.
func (o *InlineResponse200ResultPancakeSwapVaultsTotalUSDValues) HasTotal() bool {
	if o != nil && o.Total != nil {
		return true
	}

	return false
}

// SetTotal gets a reference to the given float32 and assigns it to the Total field.
func (o *InlineResponse200ResultPancakeSwapVaultsTotalUSDValues) SetTotal(v float32) {
	o.Total = &v
}

func (o InlineResponse200ResultPancakeSwapVaultsTotalUSDValues) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Deposit != nil {
		toSerialize["deposit"] = o.Deposit
	}
	if o.Yield != nil {
		toSerialize["yield"] = o.Yield
	}
	if o.Total != nil {
		toSerialize["total"] = o.Total
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200ResultPancakeSwapVaultsTotalUSDValues struct {
	value *InlineResponse200ResultPancakeSwapVaultsTotalUSDValues
	isSet bool
}

func (v NullableInlineResponse200ResultPancakeSwapVaultsTotalUSDValues) Get() *InlineResponse200ResultPancakeSwapVaultsTotalUSDValues {
	return v.value
}

func (v *NullableInlineResponse200ResultPancakeSwapVaultsTotalUSDValues) Set(val *InlineResponse200ResultPancakeSwapVaultsTotalUSDValues) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200ResultPancakeSwapVaultsTotalUSDValues) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200ResultPancakeSwapVaultsTotalUSDValues) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200ResultPancakeSwapVaultsTotalUSDValues(val *InlineResponse200ResultPancakeSwapVaultsTotalUSDValues) *NullableInlineResponse200ResultPancakeSwapVaultsTotalUSDValues {
	return &NullableInlineResponse200ResultPancakeSwapVaultsTotalUSDValues{value: val, isSet: true}
}

func (v NullableInlineResponse200ResultPancakeSwapVaultsTotalUSDValues) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200ResultPancakeSwapVaultsTotalUSDValues) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
