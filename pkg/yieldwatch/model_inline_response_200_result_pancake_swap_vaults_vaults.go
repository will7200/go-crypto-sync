/*
 * Yieldwatch API
 *
 * Yieldwatch doesn't have a openapi docs sadville
 *
 * API version: 2021-05-29
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package yieldwatch

import (
	"encoding/json"
)

// InlineResponse200ResultPancakeSwapVaultsVaults struct for InlineResponse200ResultPancakeSwapVaultsVaults
type InlineResponse200ResultPancakeSwapVaultsVaults struct {
	Name                   *string                   `json:"name,omitempty"`
	Type                   *string                   `json:"type,omitempty"`
	ContractAddress        *string                   `json:"contractAddress,omitempty"`
	Platform               *string                   `json:"platform,omitempty"`
	DepositToken           *string                   `json:"depositToken,omitempty"`
	DepositedTokens        *float32                  `json:"depositedTokens,omitempty"`
	DepositTokenAddress    *string                   `json:"depositTokenAddress,omitempty"`
	PriceInUSDDepositToken *float32                  `json:"priceInUSDDepositToken,omitempty"`
	Apy                    *float32                  `json:"apy,omitempty"`
	CurrentTokens          *float32                  `json:"currentTokens,omitempty"`
	VaultSessions          *[]map[string]interface{} `json:"vaultSessions,omitempty"`
}

// NewInlineResponse200ResultPancakeSwapVaultsVaults instantiates a new InlineResponse200ResultPancakeSwapVaultsVaults object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200ResultPancakeSwapVaultsVaults() *InlineResponse200ResultPancakeSwapVaultsVaults {
	this := InlineResponse200ResultPancakeSwapVaultsVaults{}
	return &this
}

// NewInlineResponse200ResultPancakeSwapVaultsVaultsWithDefaults instantiates a new InlineResponse200ResultPancakeSwapVaultsVaults object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200ResultPancakeSwapVaultsVaultsWithDefaults() *InlineResponse200ResultPancakeSwapVaultsVaults {
	this := InlineResponse200ResultPancakeSwapVaultsVaults{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *InlineResponse200ResultPancakeSwapVaultsVaults) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200ResultPancakeSwapVaultsVaults) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *InlineResponse200ResultPancakeSwapVaultsVaults) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *InlineResponse200ResultPancakeSwapVaultsVaults) SetName(v string) {
	o.Name = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *InlineResponse200ResultPancakeSwapVaultsVaults) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200ResultPancakeSwapVaultsVaults) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *InlineResponse200ResultPancakeSwapVaultsVaults) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *InlineResponse200ResultPancakeSwapVaultsVaults) SetType(v string) {
	o.Type = &v
}

// GetContractAddress returns the ContractAddress field value if set, zero value otherwise.
func (o *InlineResponse200ResultPancakeSwapVaultsVaults) GetContractAddress() string {
	if o == nil || o.ContractAddress == nil {
		var ret string
		return ret
	}
	return *o.ContractAddress
}

// GetContractAddressOk returns a tuple with the ContractAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200ResultPancakeSwapVaultsVaults) GetContractAddressOk() (*string, bool) {
	if o == nil || o.ContractAddress == nil {
		return nil, false
	}
	return o.ContractAddress, true
}

// HasContractAddress returns a boolean if a field has been set.
func (o *InlineResponse200ResultPancakeSwapVaultsVaults) HasContractAddress() bool {
	if o != nil && o.ContractAddress != nil {
		return true
	}

	return false
}

// SetContractAddress gets a reference to the given string and assigns it to the ContractAddress field.
func (o *InlineResponse200ResultPancakeSwapVaultsVaults) SetContractAddress(v string) {
	o.ContractAddress = &v
}

// GetPlatform returns the Platform field value if set, zero value otherwise.
func (o *InlineResponse200ResultPancakeSwapVaultsVaults) GetPlatform() string {
	if o == nil || o.Platform == nil {
		var ret string
		return ret
	}
	return *o.Platform
}

// GetPlatformOk returns a tuple with the Platform field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200ResultPancakeSwapVaultsVaults) GetPlatformOk() (*string, bool) {
	if o == nil || o.Platform == nil {
		return nil, false
	}
	return o.Platform, true
}

// HasPlatform returns a boolean if a field has been set.
func (o *InlineResponse200ResultPancakeSwapVaultsVaults) HasPlatform() bool {
	if o != nil && o.Platform != nil {
		return true
	}

	return false
}

// SetPlatform gets a reference to the given string and assigns it to the Platform field.
func (o *InlineResponse200ResultPancakeSwapVaultsVaults) SetPlatform(v string) {
	o.Platform = &v
}

// GetDepositToken returns the DepositToken field value if set, zero value otherwise.
func (o *InlineResponse200ResultPancakeSwapVaultsVaults) GetDepositToken() string {
	if o == nil || o.DepositToken == nil {
		var ret string
		return ret
	}
	return *o.DepositToken
}

// GetDepositTokenOk returns a tuple with the DepositToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200ResultPancakeSwapVaultsVaults) GetDepositTokenOk() (*string, bool) {
	if o == nil || o.DepositToken == nil {
		return nil, false
	}
	return o.DepositToken, true
}

// HasDepositToken returns a boolean if a field has been set.
func (o *InlineResponse200ResultPancakeSwapVaultsVaults) HasDepositToken() bool {
	if o != nil && o.DepositToken != nil {
		return true
	}

	return false
}

// SetDepositToken gets a reference to the given string and assigns it to the DepositToken field.
func (o *InlineResponse200ResultPancakeSwapVaultsVaults) SetDepositToken(v string) {
	o.DepositToken = &v
}

// GetDepositedTokens returns the DepositedTokens field value if set, zero value otherwise.
func (o *InlineResponse200ResultPancakeSwapVaultsVaults) GetDepositedTokens() float32 {
	if o == nil || o.DepositedTokens == nil {
		var ret float32
		return ret
	}
	return *o.DepositedTokens
}

// GetDepositedTokensOk returns a tuple with the DepositedTokens field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200ResultPancakeSwapVaultsVaults) GetDepositedTokensOk() (*float32, bool) {
	if o == nil || o.DepositedTokens == nil {
		return nil, false
	}
	return o.DepositedTokens, true
}

// HasDepositedTokens returns a boolean if a field has been set.
func (o *InlineResponse200ResultPancakeSwapVaultsVaults) HasDepositedTokens() bool {
	if o != nil && o.DepositedTokens != nil {
		return true
	}

	return false
}

// SetDepositedTokens gets a reference to the given float32 and assigns it to the DepositedTokens field.
func (o *InlineResponse200ResultPancakeSwapVaultsVaults) SetDepositedTokens(v float32) {
	o.DepositedTokens = &v
}

// GetDepositTokenAddress returns the DepositTokenAddress field value if set, zero value otherwise.
func (o *InlineResponse200ResultPancakeSwapVaultsVaults) GetDepositTokenAddress() string {
	if o == nil || o.DepositTokenAddress == nil {
		var ret string
		return ret
	}
	return *o.DepositTokenAddress
}

// GetDepositTokenAddressOk returns a tuple with the DepositTokenAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200ResultPancakeSwapVaultsVaults) GetDepositTokenAddressOk() (*string, bool) {
	if o == nil || o.DepositTokenAddress == nil {
		return nil, false
	}
	return o.DepositTokenAddress, true
}

// HasDepositTokenAddress returns a boolean if a field has been set.
func (o *InlineResponse200ResultPancakeSwapVaultsVaults) HasDepositTokenAddress() bool {
	if o != nil && o.DepositTokenAddress != nil {
		return true
	}

	return false
}

// SetDepositTokenAddress gets a reference to the given string and assigns it to the DepositTokenAddress field.
func (o *InlineResponse200ResultPancakeSwapVaultsVaults) SetDepositTokenAddress(v string) {
	o.DepositTokenAddress = &v
}

// GetPriceInUSDDepositToken returns the PriceInUSDDepositToken field value if set, zero value otherwise.
func (o *InlineResponse200ResultPancakeSwapVaultsVaults) GetPriceInUSDDepositToken() float32 {
	if o == nil || o.PriceInUSDDepositToken == nil {
		var ret float32
		return ret
	}
	return *o.PriceInUSDDepositToken
}

// GetPriceInUSDDepositTokenOk returns a tuple with the PriceInUSDDepositToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200ResultPancakeSwapVaultsVaults) GetPriceInUSDDepositTokenOk() (*float32, bool) {
	if o == nil || o.PriceInUSDDepositToken == nil {
		return nil, false
	}
	return o.PriceInUSDDepositToken, true
}

// HasPriceInUSDDepositToken returns a boolean if a field has been set.
func (o *InlineResponse200ResultPancakeSwapVaultsVaults) HasPriceInUSDDepositToken() bool {
	if o != nil && o.PriceInUSDDepositToken != nil {
		return true
	}

	return false
}

// SetPriceInUSDDepositToken gets a reference to the given float32 and assigns it to the PriceInUSDDepositToken field.
func (o *InlineResponse200ResultPancakeSwapVaultsVaults) SetPriceInUSDDepositToken(v float32) {
	o.PriceInUSDDepositToken = &v
}

// GetApy returns the Apy field value if set, zero value otherwise.
func (o *InlineResponse200ResultPancakeSwapVaultsVaults) GetApy() float32 {
	if o == nil || o.Apy == nil {
		var ret float32
		return ret
	}
	return *o.Apy
}

// GetApyOk returns a tuple with the Apy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200ResultPancakeSwapVaultsVaults) GetApyOk() (*float32, bool) {
	if o == nil || o.Apy == nil {
		return nil, false
	}
	return o.Apy, true
}

// HasApy returns a boolean if a field has been set.
func (o *InlineResponse200ResultPancakeSwapVaultsVaults) HasApy() bool {
	if o != nil && o.Apy != nil {
		return true
	}

	return false
}

// SetApy gets a reference to the given float32 and assigns it to the Apy field.
func (o *InlineResponse200ResultPancakeSwapVaultsVaults) SetApy(v float32) {
	o.Apy = &v
}

// GetCurrentTokens returns the CurrentTokens field value if set, zero value otherwise.
func (o *InlineResponse200ResultPancakeSwapVaultsVaults) GetCurrentTokens() float32 {
	if o == nil || o.CurrentTokens == nil {
		var ret float32
		return ret
	}
	return *o.CurrentTokens
}

// GetCurrentTokensOk returns a tuple with the CurrentTokens field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200ResultPancakeSwapVaultsVaults) GetCurrentTokensOk() (*float32, bool) {
	if o == nil || o.CurrentTokens == nil {
		return nil, false
	}
	return o.CurrentTokens, true
}

// HasCurrentTokens returns a boolean if a field has been set.
func (o *InlineResponse200ResultPancakeSwapVaultsVaults) HasCurrentTokens() bool {
	if o != nil && o.CurrentTokens != nil {
		return true
	}

	return false
}

// SetCurrentTokens gets a reference to the given float32 and assigns it to the CurrentTokens field.
func (o *InlineResponse200ResultPancakeSwapVaultsVaults) SetCurrentTokens(v float32) {
	o.CurrentTokens = &v
}

// GetVaultSessions returns the VaultSessions field value if set, zero value otherwise.
func (o *InlineResponse200ResultPancakeSwapVaultsVaults) GetVaultSessions() []map[string]interface{} {
	if o == nil || o.VaultSessions == nil {
		var ret []map[string]interface{}
		return ret
	}
	return *o.VaultSessions
}

// GetVaultSessionsOk returns a tuple with the VaultSessions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200ResultPancakeSwapVaultsVaults) GetVaultSessionsOk() (*[]map[string]interface{}, bool) {
	if o == nil || o.VaultSessions == nil {
		return nil, false
	}
	return o.VaultSessions, true
}

// HasVaultSessions returns a boolean if a field has been set.
func (o *InlineResponse200ResultPancakeSwapVaultsVaults) HasVaultSessions() bool {
	if o != nil && o.VaultSessions != nil {
		return true
	}

	return false
}

// SetVaultSessions gets a reference to the given []map[string]interface{} and assigns it to the VaultSessions field.
func (o *InlineResponse200ResultPancakeSwapVaultsVaults) SetVaultSessions(v []map[string]interface{}) {
	o.VaultSessions = &v
}

func (o InlineResponse200ResultPancakeSwapVaultsVaults) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.ContractAddress != nil {
		toSerialize["contractAddress"] = o.ContractAddress
	}
	if o.Platform != nil {
		toSerialize["platform"] = o.Platform
	}
	if o.DepositToken != nil {
		toSerialize["depositToken"] = o.DepositToken
	}
	if o.DepositedTokens != nil {
		toSerialize["depositedTokens"] = o.DepositedTokens
	}
	if o.DepositTokenAddress != nil {
		toSerialize["depositTokenAddress"] = o.DepositTokenAddress
	}
	if o.PriceInUSDDepositToken != nil {
		toSerialize["priceInUSDDepositToken"] = o.PriceInUSDDepositToken
	}
	if o.Apy != nil {
		toSerialize["apy"] = o.Apy
	}
	if o.CurrentTokens != nil {
		toSerialize["currentTokens"] = o.CurrentTokens
	}
	if o.VaultSessions != nil {
		toSerialize["vaultSessions"] = o.VaultSessions
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200ResultPancakeSwapVaultsVaults struct {
	value *InlineResponse200ResultPancakeSwapVaultsVaults
	isSet bool
}

func (v NullableInlineResponse200ResultPancakeSwapVaultsVaults) Get() *InlineResponse200ResultPancakeSwapVaultsVaults {
	return v.value
}

func (v *NullableInlineResponse200ResultPancakeSwapVaultsVaults) Set(val *InlineResponse200ResultPancakeSwapVaultsVaults) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200ResultPancakeSwapVaultsVaults) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200ResultPancakeSwapVaultsVaults) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200ResultPancakeSwapVaultsVaults(val *InlineResponse200ResultPancakeSwapVaultsVaults) *NullableInlineResponse200ResultPancakeSwapVaultsVaults {
	return &NullableInlineResponse200ResultPancakeSwapVaultsVaults{value: val, isSet: true}
}

func (v NullableInlineResponse200ResultPancakeSwapVaultsVaults) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200ResultPancakeSwapVaultsVaults) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
